{
  
    
        "post0": {
            "title": "Logic Gates Hacks",
            "content": "How can logic gates be used to execute basic computer functions? (1-2 sentences) Logic gates can be used to build digital circuits. Furthermore, they are necessary for basic computer functions since they need to take in binary data by performing Boolean logic operations. This allows for complicated decision making. . | What is the difference between boolean operations and logic gates?(1-2 sentences) They are not exactly the same thing, since boolean operations are what are being performed by the logic gates. The logic operations house the different gates, and based on the binary data (boolean), the boolean operations such as AND, OR, NOT, and XOR are performed. . | Complete this quiz and correct any mistakes in your blog . | .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/04/28/logicgates.html",
            "relUrl": "/markdown/2023/04/28/logicgates.html",
            "date": " • Apr 28, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "GitHub Pages Hacks",
            "content": "Firebase is one of the most popular site hosting services. This is due to the fact that it has many benefits and is incredibly easy to use. The hosting is fast and safe, free, and has reliable databases. It makes the entire process of app development very smooth and easy, and even more, it provides for backend services. This can help to create a full-stack. Firebase is specifically designed for those who need to serve user-generated content, and it allows for lossless document transfers and can hold pictures, sound, video, etc. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/04/28/githubpageshacks.html",
            "relUrl": "/markdown/2023/04/28/githubpageshacks.html",
            "date": " • Apr 28, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Binary Math Hacks",
            "content": "Conversion Exercises . Convert the following numbers to decimal notation: The binary number 111.: 7 The binary number 1011.: 11 The binary number 10111011.: 187 . BINARY MATH HACKS . DIFFERENCES OF BINARY MATH NUMBERS: . Binary Addition . Binary Number 1: Binary Number 2: . . . Hacks . Question: How do you think we should find the difference of two binary numbers? The product? The quotient? What rules need to be followed for those operations? Look into all of this on the Internet and note down important information you find (0.45) . For subtracting two binary numbers, it is very similar to subtracting base 10 numbers. When 1 is subtracted from 0, it is necessary to borrow 1 from the next highest bit and then the bit is reduced by 1 with a remainder of 1. For multiplying binary numbers, the product is always 0 or the binary number itself. For each non-zero you have to shift the multiplier to the left and then add the shifted numbers together. Finally, for dividing two binary numbers, there are a couple of rules (as filled out below) and you cannot divide by 0 (it yields nothing). If the divisor is greater than the dividend, the 0 is set as the quotient and the second bit of the dividend is brought down, but if the dividend is larger, you multiply the divisor by 1 and the result is subtracted. Then, you find the remainder, perform the first step again, and then keep going until the remainder is 0. . Based on what you find online, fill out the tables below for subtracting, multiplying, and dividing binary numbers (0.45): . Subtracting Binary Numbers Rules . 1-1 | 1-0 | 0-1 | 0-0 | . 0 | 1 | 1 | 0 | . Multiplying Binary Numbers Rules . 1x1 | 1x0 | 0x1 | 0x0 | . 1 | 0 | 0 | 0 | . Dividing Binary Numbers Rules . 1/1 | 0/1 | . 1 | 0 | . Choose ONE (0.9 for doing one): . Create buttons similar to the ones above that allow you to subtract binary numbers and returns the desired result in both binary and decimal | . In the above button, I was able to create a button that subtracts binary numbers and returns that desired result in both binary and decimal. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/04/28/binarymath.html",
            "relUrl": "/markdown/2023/04/28/binarymath.html",
            "date": " • Apr 28, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Binary Logic Hacks",
            "content": "HACKS QUIZ . . I basically got the first question right, just a typo (inhibitor vs inhibition). .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/04/28/binarylogic.html",
            "relUrl": "/markdown/2023/04/28/binarylogic.html",
            "date": " • Apr 28, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "P4-Y 4/25 Guide to SASS",
            "content": "WGET this file and complete fully and thoroughly in order to be receive credit . Wget Link . Team Lesson Plan: . SASS Part 1- Nathan, Aniket, Kalani . Basic UI Properties and what they mean | Color properties | Themes | SASS Definition/What it is useful for | SASS code segments w/ comparison to css | Demonstration of SASS | . SASS Part 2- Max W, Evan . More UI Properties | UX | Layouts | Animation/animation code for UI | . Building JavaScript Game or Application- Ryan, Jaden . Before vs After Minesweeper Game - how to customize | Building a java script game and what it requires | . Hacks Page - Kalani, Max T . Students must create their own hack (simple app,game, etc using key components from the lesson) | Make sure the students can wget the file so they can work on it for their hacks | . Classwork: . What are 5 Basic UI Elements?: . Color | Font | Layout | Icons | Interactivity | In your own words, explain what SASS does: . SASS is an easier way to style your site in comparison to CSS. It allows for stylesheets to be written with .sass and .scss, and it includes CSS features with more. It makes programming and styling very easy. | . What are some benefits to SASS?: . It is easy to use, less complex, and has variables that can be used. SASS gives us built-in functions, and the SASS compiler allows for a conversion to working CSS. | . Describe/Explain one of the more &quot;advanced&quot; SASS properties below in detail: . One advanced SASS property is the animation effect. This has many different possible parameters, and can be changed to change the duration of the animation, the opacity of an animation, and many other things. | . Link to Number Guesser Game . How does the number guesser game work? . The number guesser game works by inputting a number between 1-100, and the program randomly generating a unique number in that range. It will then tell you if your guess is too high or too low, and you will continue to guess until you get the right answer. | . Explain how SASS can be used to make the number guesser game look more visually appealing? . In the updated number guesser game, SASS was utilized to make the game look more visually appealing by making the background color green after guessing the right answer. Maybe, as an inclusion, an animation can be added for an up or down arrow to symbolize a higher guess or lower guess in the game. | . Hacks - Insert any screenshots, code segments, etc. that you need to in order to demonstrate an understanding of the hacks . Hacks Part 1 . Add your own element to your own repository to make it unique (0.9) In my own repository, I changed the background color and the sidebar color using SASS. | Hacks Part 2 . Add the style change button to your own github page (0.9) Change the button to your own styles | See if you can let make it change to multiple different styles (we understand that it is hard to create multiple distinct styles so you are only required to make it clear you have at least three different styles at can be changed) | . | Extra: Try and incorporate something you learned in the lesson into your CPT Project (0.1) | Hacks Part 3 . Add SASS to Number Guesser Game provided (0.9) or create your own Javascript game/application and add SASS to it (0.9+) | We will collectively decide on the &quot;best&quot; game/app and award potential seed. | Copy and paste the following code segment into a markdown file which will be used for the hacks: . &lt;html&gt; &lt;head&gt; &lt;title&gt;Guess the Number&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Guess the Number&lt;/h1&gt; &lt;p&gt;Try to guess the number between 1 and 100.&lt;/p&gt; &lt;input type=&quot;text&quot; id=&quot;guess&quot; placeholder=&quot;Enter your guess&quot;&gt; &lt;button onclick=&quot;checkGuess()&quot;&gt;Submit&lt;/button&gt; &lt;p id=&quot;result&quot;&gt;&lt;/p&gt; &lt;script&gt; // Generate a random number between 1 and 100 const randomNumber = Math.floor(Math.random() * 100) + 1; let attempts = 0; function checkGuess() { // Get the user&#39;s guess const guess = parseInt(document.getElementById(&quot;guess&quot;).value); // Increase the number of attempts attempts++; // Check if the guess is correct if (guess === randomNumber) { document.getElementById(&quot;result&quot;).innerHTML = `Congratulations! You guessed the number in ${attempts} attempts.`; } else if (guess &lt; randomNumber) { document.getElementById(&quot;result&quot;).innerHTML = &quot;Too low. Guess again.&quot;; } else { document.getElementById(&quot;result&quot;).innerHTML = &quot;Too high. Guess again.&quot;; } } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; .",
            "url": "https://vardaansinha.github.io/FastPages/student/2023/04/25/P4Y-SASSGuide.html",
            "relUrl": "/student/2023/04/25/P4Y-SASSGuide.html",
            "date": " • Apr 25, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "2018 MCQ Practice Exam",
            "content": ". I was very happy with my results, as I ended up only getting two questions wrong. . . I should have realized that the Analysis function is not being called 4 times. It is being called 4 times inside of the for loop, but is called once before the for loop itself, so that is 5 calls. Therefore, it’ll take 5 hours to execute. . . This was a boneheaded mistake. Even though the first code block, Program I, has the average inside of the loop, the average will still be computed correctly as it is taking the average of all of the averages. Therefore, we are narrowed down to options C and D. But, as just explained, the average is taken every time the loop is run for Program I, therefore requiring more arithmetic operations than Program II. Therefore, option C is the best choice. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/04/13/2018mcq.html",
            "relUrl": "/markdown/2023/04/13/2018mcq.html",
            "date": " • Apr 13, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Computers and Networks (Unit 4)",
            "content": "Requirements . Work through College Board Unit 4… blog, add definitions, and pictures. Be creative, for instance make a story of Computing and Networks that is related to your PBL experiences this year. . How a Computer Works . As we have learned, a computer needs aa program to do something smart. The sequence of a program initiates a series of actions with the computers Central Processing Unit (CPU). This component is essentially a binary machine focussing on program instructions provided. The CPU retrieives and stores the data it acts upon in Random Access Memory (RAM). Between the CPU, RAM, and Storage Devices a computer can work with many programs and large amounts of data. . List specification of your Computer, or Computers if working as Pair/Trio . Processor GHz: 1.7 GHz | Memory in GB: 21.7 GB | Storage in GB: 474 GB | OS: Microsoft Windows | . Define or describe usage of Computer using Computer Programs. Pictures are preferred over a lot of text. Use your experience. . Input devices | Output devices | Program File | Program Code | Processes | Ports | Data File | Inspect Running Code | Inspect Variables | . . The Internet . Watch/review College Board Daily Video for 4.1.1 . Essential Knowledge A computing device is a physical artifact that can run a program. Some examples include computers, tablets, servers, routers, and smart sensors. | A computing system is a group of computing devices and programs working together for a common purpose. | A computer network is a group of interconnected computing devices capable of sending or receiving data. | A computer network is a type of computing system. | A path between two computing devices on a computer network (a sender and a receiver) is a sequence of directly connected computing devices that begins at the sender and ends at the receiver. | Routing is the process of finding a path from sender to receiver. | The bandwidth of a computer network is the maximum amount of data that can be sent in a fixed amount of time. | Bandwidth is usually measured in bits per second | . | Complete Vocabulary Matching Activity. Incorporate this into your learnings from year. To analyze measure path and latency use traceroute and ping commands from Linux Terminal. Path: a: is a sequence of directly connected computing devices that begins at the sender and ends at the receiver | Route: e: is the process of finding a path from sender to receiver | Computer System: b: is a group of computing devices and programs working together for a common purpose. | Computer Device: c: is a physical artifact that can run a program. Some examples include computers, tablets, servers, routers, and smart sensors. | Bandwidth: d: is the maximum amount of data that can be sent in a fixed amount of time | Computer Network: f: is a group of interconnected computing devices capable of sending or receiving data. | . | . Watch/review College Board Daily Video 4.1.2 . Complete True of False Questions | . TRUE: Open standards and protocols enable different manufacturers and developers to build hardware and software that can communicate with hardware and software on the rest of the internet. | FALSE: IETF is a task force used to enforce laws to keep manufacturers out of the internet. | FALSE: Routes are determined in advance and are not flexible. | TRUE: A protocol is an agreed-upon set of rules that specify the behavior of a system. | FALSE: UDP guarantees transfers and is faster. | FALSE: The World Wide Web is the internet. | TRUE: HTTP is a protocol used by the World Wide Web. Essential Knowledge | . The internet is a computer network consisting of interconnected networks that use standardized, open (nonproprierary) communication protocols. | Access to the internet depends on the ability to connect a computing device to an internet connected device. | A protocol is an agreed-upon set of rules that specify the behavior of a system. | The protocols used in the internet are open, which allows users to easily connect additional computing devices to the internet. | Routing on the internet is usually dynamic; it is not specified in advance | The scalability of a system is the capacity for the system to change in size and scale to meet new demands. | The internet was designed to be scalable | Information is passed through the internet as a data stream. Data streams contain chunks of data, which are encapsulated in packets. | Packets contain a chunk of data and metadata used for routing the packet between the origin and the destination on the internet, as well as for data reassembly. | Packets may arrive at the destination in order, out of order, or not at all | IP, TCP and UDP are common protocols used on the internet. | The world wide web is a system of linked pages, programs, and files. | HTTP is a protocol used by the world wide web | The world wide web uses the internet | . | Go over AP videos, vocabulary, and essential knowledge. Draw a diagram showing the internet and its many levels. A preferred diagram would using your knowledge of frontend, backend, deployment, etc. Picture would highligh vocabulary by illustration. The below illustration have some ideas | . . Often we draw pictures of machines communicating over the Internet with arrows. However, the real communication goes through protocol layers and the machine and then is trasported of the network. For College Board and future Computer Knowledge you should become familiar with the following … | . User Machine &lt;&gt; Frontend Server &lt;&gt; Backend Server +--+ +--+ +--+ | Browser | | GH Page | | Flask | +--+ ^ +--+ ^ +--+ | HTTP | | | HTTP | | | HTTP | +--+ | +--+ | +--+ | TCP | | | TCP | | | TCP | +--+ | +--+ | +--+ | IP | V | IP | V | IP | +--+ +--+ +--+ | Network | &lt;&gt; | Network | &lt;&gt; | Network | +--+ +--+ +--+ . The “http” layer is an application layer protocol in the TCP/IP stack, used for communication between web browsers and web servers. It is the protocol used for transmitting data over the World Wide Web. . The “transport” layer (TCP) is responsible for providing reliable data transfer between applications running on different hosts. The TCP protocol segments the data into smaller chunks called “segments”. Each segment contains a sequence number that identifies its position in the original stream of data, as well as other control information such as source and destination port numbers, and checksums for error detection. . The “ip” layer is responsible for packetizing data received from the TCP layer of the protocol stack, and then encapsulating the data into IP packets. The IP packets are then sent to the lower layers of the protocol stack for transmission over the network. . The “network” layer is responsible for routing data packets between networks using the Internet Protocol (IP). This layer handles tasks such as packet addressing and routing, fragmentation and reassembly, and network congestion control. . Fault Tolerance . Watch both Daily videos for 4.2 . Complete the network activity, summarize your understanding of fault tolerance. | . The network activity was a very good method of practice to analyzing certain networks with tens of routes and checking whether or not they are fault-tolerant. Essentially, fault tolerance means that in a network of many different sources and destinations, if one route goes down, there is still redundancy and the network has an ability to go from the original source to destination. There is not only one path from A to B, so if that one path goes down, there are more routes that A can go through to eventually reach B. . Parallel and Distributed Computing . Review previous lecture on Parallel Computing and watch Daily vidoe 4.3. Think of ways to make something in you team project to utilize Cores more effectively. Here are some thoughts to add to your story of Computers and Networks… . What is naturally Distributed in Frontend/Backend architecture?: AWS can be considered naturally distributed. As a server, it is distributing multiple containers across the architecture to allow for high performance for a large number of instances. This allows for a more efficient backend to frontend connection and a smooth full-stack experience. . | Analyze this command in Docker: ENV GUNICORN_CMD_ARGS=&quot;--workers=1 --bind=0.0.0.0:8086&quot;. Determine if there is options are options in this command for parallel computing within the server that runs python/gunicorn. Here is an article . | . What mainly catches my eye here as an option for parallel computing within the server is the “workers” parameter. The workers are the number of processes actually loading the application, so if there are multiple workers, there can be multiple processes loading the app in a parallel fashion. According to the article, something that I did not notice as a parallel computing process is the number of threads. This is a parameter that is not a part of the above command, but can be added. . Last week we discussed parallel computing on local machine. There are many options. Here is something to get parallel computing work with a tool called Ray. . Review this article… Can you get parallel code on images to work more effectively? I have not tried Ray. | . After reading the article, it seems as if Ray is an application that is very useful for very large objects and running them efficiently in the form of parallel computing. It is imported as a separate python module, and when testing the running of certain programs, the processing time was significantly less (albeit for the programs tested in the article, it was a very minimal difference of 2-3 seconds), but can be much more significant if being compared for larger data sets in programs. . Code example from ChatGPT using squares. This might be more interesting if nums we generated to be a lot bigger. | . import ray # define a simple function that takes a number and returns its square def square(x): return x * x # initialize Ray ray.init() # create a remote function that squares a list of numbers in parallel @ray.remote def square_list(nums): return [square(num) for num in nums] # define a list of numbers to square nums = [1, 2, 3, 4, 5] # split the list into two parts split_idx = len(nums) // 2 part1, part2 = nums[:split_idx], nums[split_idx:] # call the remote function in parallel on the two parts part1_result = square_list.remote(part1) part2_result = square_list.remote(part2) # get the results and combine them result = ray.get(part1_result) + ray.get(part2_result) # print the result print(result) .",
            "url": "https://vardaansinha.github.io/FastPages/2023/04/05/AP_computers_networks.html",
            "relUrl": "/2023/04/05/AP_computers_networks.html",
            "date": " • Apr 5, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "MCQ 4",
            "content": ". I was very happy with my results, as I ended up only getting one question wrong. This was my best MCQ performance yet. . . For this one, I should have recognized that the game score is going to often change and will not remain constant. I was under the impression that by constant, the question implied that each variable would have a constant value at the start, and then could be subject to change. This was a careless mistake. . Even though I got all of the questions about lossy/lossless and any image-related questions correct on this MCQ, I think there was a bit of luck involved there, as I still don’t have a grasp over these questions. This is something I most definitely have to review before the AP Exam. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/04/03/mcq4.html",
            "relUrl": "/markdown/2023/04/03/mcq4.html",
            "date": " • Apr 3, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "CSUSM Event",
            "content": "Here are some of the notes that I took from the CSUSM Extra Credit Event: . Two students, one works in a research lab | CSUSM is the national leader of social mobility | It is very common to see people get internships at CSU San Marcos | There are many different pathways you can take at the CSUs, including applied physics, biological sciences, mathematics, biotechnology, electrical engineering, etc. | There are specialized CSTEM Departments and Clubs | One of the speakers was part of some of the CSTEM Clubs, including the Society of Physics Students | . For getting into college or for using time productively while at a CSU, something very useful is to apply for internships, which are periods of work experience offered by an organization . To get these internships, it is very important to join clubs, check your emails frequently, go to CSU campus events, and actively look for opportunities | . There are two different programs which can be done over the summer: . Summer Scholars Program: 10 weeks long, intensive research experience . | Quantum Bridge Program: 4 weeks long, only for admitted CSUSM students . | FINANCIAL ADVICE: . Paying for college, two types of loans: subsidized and unsubsidized . | Paying back your loans (6 months after you graduate, there are options for those facing financial hardship or continuing onto graduating school) . | Apply for FAFSA! (There is a difference between scholarships and grants) . | QUOTES OF THE DAY FROM THE EVENT: . “I failed math and physics. Nonetheless, I never let those failures hurt me.” . “It doesn’t matter if you get a bad score on a test or struggle on some things because those don’t really define you.” . REFLECTION: . I think that this event was incredibly helpful for all of us students. There are many rising seniors or juniors that are very concerned about getting into colleges, especially in-state, because of the reducing admissions rates of the UC Schools (5% admission at UCSD??). Everyone, especially at Del Norte, is hyper-competitive and obsessed with getting As in all their classes: if they don’t, it’s the end of the world (something that I have experienced). This event really solidified a few things, but the underlying point is that regardless of how you do in high school, if you have a drive, there are many amazing opportunities out there, especially at the CSUs, which can help you succeed in your desired field. John, for instance, did community college at Palomar for three years, and then transferred into a CSU, and is now thriving as a computer science major. Through this event, they solidified that it is very important to look for internship opportunities, involve yourself in clubs and campus activities, and try your best to succeed in the things you are really passionate about. I really enjoyed this event and look forward to more events like this in the future. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/03/29/ec.html",
            "relUrl": "/markdown/2023/03/29/ec.html",
            "date": " • Mar 29, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Data Structures- Hashmaps, Sets, Hash Tables, Hashing and Collisions",
            "content": "What is a Hashtable/Hashmap? . A hashtable is a data structure that with a collection of key-value pairs, where each key maps to a value, and the keys must be unique and hashable. . In Python there is a built in hashtable known as a dictionaryThe primary purpose of a hashtable is to provide efficient lookup, insertion, and deletion operations. When an element is to be inserted into the hashtable, a hash function is used to map the key to a specific index in the underlying array that is used to store the key-value pairs. The value is then stored at that index. When searching for a value, the hash function is used again to find the index where the value is stored. . | . The key advantage of a hashtable over other data structures like arrays and linked lists is its average-case time complexity for lookup, insertion, and deletion operations. . The typical time complexity of a hashtable is O(1). | . What is Hashing and Collision? . Hashing is the process of mapping a given key to a value in a hash table or hashmap, using a hash function. The hash function takes the key as input and produces a hash value or hash code, which is then used to determine the index in the underlying array where the value is stored. The purpose of hashing is to provide a quick and efficient way to access data, by eliminating the need to search through an entire data structure to find a value. . However, it is possible for two different keys to map to the same hash value, resulting in a collision. When a collision occurs, there are different ways to resolve it, depending on the collision resolution strategy used. . Python&#39;s dictionary implementation is optimized to handle collisions efficiently, and the performance of the dictionary is generally very good, even in the presence of collisions. However, if the number of collisions is very high, the performance of the dictionary can degrade, so it is important to choose a good hash function that minimizes collisions when designing a Python dictionary. . What is a Set? . my_set = set([1, 2, 3, 2, 1]) print(my_set) # What do you notice in the output? # Why do you think Sets are in the same tech talk as Hashmaps/Hashtables? . {1, 2, 3} . It prints out the first three values of the defined data set: 1, 2, and 3. It only printed the unique values. . Sets are in the same tech talk as hashmaps/hashtables, as they are both attempting to access data with a particular index. In both, there are no collisions (no duplicates). . Dictionary Example . Below are just some basic features of a dictionary. As always, documentation is always the main source for all the full capablilties. . lover_album = { &quot;title&quot;: &quot;Lover&quot;, &quot;artist&quot;: &quot;Taylor Swift&quot;, &quot;year&quot;: 2019, &quot;genre&quot;: [&quot;Pop&quot;, &quot;Synth-pop&quot;], &quot;tracks&quot;: { 1: &quot;I Forgot That You Existed&quot;, 2: &quot;Cruel Summer&quot;, 3: &quot;Lover&quot;, 4: &quot;The Man&quot;, 5: &quot;The Archer&quot;, 6: &quot;I Think He Knows&quot;, 7: &quot;Miss Americana &amp; The Heartbreak Prince&quot;, 8: &quot;Paper Rings&quot;, 9: &quot;Cornelia Street&quot;, 10: &quot;Death By A Thousand Cuts&quot;, 11: &quot;London Boy&quot;, 12: &quot;Soon You&#39;ll Get Better (feat. Dixie Chicks)&quot;, 13: &quot;False God&quot;, 14: &quot;You Need To Calm Down&quot;, 15: &quot;Afterglow&quot;, 16: &quot;Me! (feat. Brendon Urie of Panic! At The Disco)&quot;, 17: &quot;It&#39;s Nice To Have A Friend&quot;, 18: &quot;Daylight&quot; } } # What data structures do you see? # Printing the dictionary print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;}} . I see data structures such as lists and dictionaries. . print(lover_album.get(&#39;tracks&#39;)) # or print(lover_album[&#39;tracks&#39;]) . {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;} {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;} . print(lover_album.get(&#39;tracks&#39;)[4]) # or print(lover_album[&#39;tracks&#39;][4]) . The Man The Man . lover_album[&quot;producer&quot;] = [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;] # What can you change to make sure there are no duplicate producers? # Printing the dictionary print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;}, &#39;producer&#39;: [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;]} . You could be a cheeky lad and remove the duplicate procedures manually. Or, you could use sets. . lover_album[&quot;tracks&quot;].update({19: &quot;All Of The Girls You Loved Before&quot;}) # How would add an additional genre to the dictionary, like electropop? lover_album[&quot;genre&quot;] = [&quot;Pop&quot;, &quot;Synth-Pop&quot;, &quot;Electro-Pop&quot;] lover_album[&quot;genre&quot;].append(&quot;New Genre Added&quot;) # Printing the dictionary print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-Pop&#39;, &#39;Electro-Pop&#39;, &#39;New Genre Added&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;}, &#39;producer&#39;: [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;]} . for k,v in lover_album.items(): # iterate using a for loop for key and value print(str(k) + &quot;: &quot; + str(v)) # Write your own code to print tracks in readable format . title: Lover artist: Taylor Swift year: 2019 genre: [&#39;Pop&#39;, &#39;Synth-Pop&#39;, &#39;Electro-Pop&#39;, &#39;New Genre Added&#39;] tracks: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;} producer: [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;] . print(f&quot;Title: {lover_album[&#39;title&#39;]}&quot;) print(f&quot;Artist: {lover_album[&#39;artist&#39;]}&quot;) print(f&quot;Year: {lover_album[&#39;year&#39;]}&quot;) print(&quot;Genres:&quot;) for genre in lover_album[&#39;genre&#39;]: print(f&quot;: {genre}&quot;) print(&quot;Album Tracklist: &quot;) for track_number, track_title in lover_album[&#39;tracks&#39;].items(): print(f&quot;{track_number}. {track_title}&quot;) . Title: Lover Artist: Taylor Swift Year: 2019 Genres: : Pop : Synth-Pop : Electro-Pop : New Genre Added Album Tracklist: 1. I Forgot That You Existed 2. Cruel Summer 3. Lover 4. The Man 5. The Archer 6. I Think He Knows 7. Miss Americana &amp; The Heartbreak Prince 8. Paper Rings 9. Cornelia Street 10. Death By A Thousand Cuts 11. London Boy 12. Soon You&#39;ll Get Better (feat. Dixie Chicks) 13. False God 14. You Need To Calm Down 15. Afterglow 16. Me! (feat. Brendon Urie of Panic! At The Disco) 17. It&#39;s Nice To Have A Friend 18. Daylight 19. All Of The Girls You Loved Before . def search(): search = input(&quot;What would you like to know about the album?&quot;) if lover_album.get(search.lower()) == None: print(&quot;Invalid Search&quot;) else: print(lover_album.get(search.lower())) search() # This is a very basic code segment, how can you improve upon this code? # # . [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;] . A while loop can be utilized to keep the search going to retrieve the songs. . Hacks . Answer ALL questions in the code segments (DONE) | Create a diagram or comparison illustration (Canva). (DONE) What are the pro and cons of using this data structure? | Dictionary vs List | . | Expand upon the code given to you, possible improvements in comments (DONE) | Build your own album showing features of a python dictionary . | For Mr. Yeung&#39;s class: Justify your favorite Taylor Swift song, answer may effect seed . | . . vardy_album = { &quot;title&quot;: &quot;Certified Lover Boy&quot;, &quot;artist&quot;: &quot;Drake&quot;, &quot;year&quot;: 2023, &quot;genre&quot;: [], &quot;tracks&quot;: { 1: &quot;Champagne Poetry&quot;, 2: &quot;Papi&#39;s Home&quot;, 3: &quot;In The Bible&quot;, 4: &quot;Love All&quot;, 5: &quot;Fair Trade&quot;, 6: &quot;TSU&quot;, 7: &quot;N 2 Deep&quot;, 8: &quot;Pipe Down&quot;, 9: &quot;Yebba&#39;s Heartbreak&quot;, 10: &quot;No Friends in the Industry&quot;, 11: &quot;Knife Talk&quot;, 12: &quot;7am on Bridle Path&quot;, } } print(vardy_album) . {&#39;title&#39;: &#39;Certified Lover Boy&#39;, &#39;artist&#39;: &#39;Drake&#39;, &#39;year&#39;: 2023, &#39;genre&#39;: [], &#39;tracks&#39;: {1: &#39;Champagne Poetry&#39;, 2: &#34;Papi&#39;s Home&#34;, 3: &#39;In The Bible&#39;, 4: &#39;Love All&#39;, 5: &#39;Fair Trade&#39;, 6: &#39;TSU&#39;, 7: &#39;N 2 Deep&#39;, 8: &#39;Pipe Down&#39;, 9: &#34;Yebba&#39;s Heartbreak&#34;, 10: &#39;No Friends in the Industry&#39;, 11: &#39;Knife Talk&#39;, 12: &#39;7am on Bridle Path&#39;}} . print(vardy_album.get(&#39;tracks&#39;)[2]) . Papi&#39;s Home . vardy_album[&quot;genre&quot;].append(&quot;UK Drill&quot;) vardy_album[&quot;genre&quot;].append(&quot;Slow Rap&quot;) vardy_album[&quot;genre&quot;].append(&quot;Bass Overload&quot;) . print(f&quot;Title: {vardy_album[&#39;title&#39;]}&quot;) print(f&quot;Artist: {vardy_album[&#39;artist&#39;]}&quot;) print(f&quot;Year: {vardy_album[&#39;year&#39;]}&quot;) print(&quot;Genres:&quot;) for genre in vardy_album[&#39;genre&#39;]: print(f&quot;- {genre}&quot;) print(&quot;Tracks:&quot;) for track_number, track_title in vardy_album[&#39;tracks&#39;].items(): print(f&quot;{track_title}&quot;) . Title: Certified Lover Boy Artist: Drake Year: 2023 Genres: - UK Drill - UK Drill - Slow Rap - Bass Overload Tracks: Champagne Poetry Papi&#39;s Home In The Bible Love All Fair Trade TSU N 2 Deep Pipe Down Yebba&#39;s Heartbreak No Friends in the Industry Knife Talk 7am on Bridle Path .",
            "url": "https://vardaansinha.github.io/FastPages/2023/03/29/DS-hashmaps.html",
            "relUrl": "/2023/03/29/DS-hashmaps.html",
            "date": " • Mar 29, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "CPT Plans",
            "content": "Currently, for my “On this Day” Feature, I am essentially done. . For the writeup, though, I need to focus on adding a more concrete example of procedural abstraction. In my draft writeup from 2nd Trimester, my procedural abstraction was not solid enough, and I don’t think it would receive the points with the CB graders. . Using the data structures knowledge that I acquire from this trimester, I will attempt to implement some sort of procedural abstraction into my feature. . At the moment, my main idea is to add a feature with visuals, where data can be extracted from these visuals. Perhaps these can be visuals associated with each of the facts in the FactofDay table, and data can be extracted from these photographs. . Maybe there could be a separate section where certain photographs were taken on a certain day, and the metadata can be extracted from these images. . Here is my timeline for finishing the writeup, video, and project features: . April 16th, 2023: COMPLETE IMPLEMENTATION OF NEW PROCEDURAL ABSTRACTION PORTION OF FEATURE . April 23rd, 2023: FINISH SAMPLE WRITEUP WHICH IS MOSTLY COMPLETE FOR CPT SUBMISSION. GET THE WRITEUP CHECKED BY OTHERS AND MAKE SURE IT IS UNIQUE. . April 25th, 2023: MAKE SURE CPT VIDEO AND WRITEUP ARE BOTH COMPLETE. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/03/26/cptplans.html",
            "relUrl": "/markdown/2023/03/26/cptplans.html",
            "date": " • Mar 26, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Data Complexity",
            "content": "Hacks . Record your findings when testing the time elapsed of the different algorithms.: Each of the algorithms took a different amount of time to test. Some of these algorithms would’ve broken my computer if not stopped. | Although we will go more in depth later, time complexity is a key concept that relates to the different sorting algorithms. Do some basic research on the different types of sorting algorithms and their time complexity.: There are many different types of sorting algorithms, and each of them is more efficient than the other. Some types of sorting algorithms include the insertion sort, bubble sort, selection sort, merge sort, heapsort, and quicksort algorithm. Out of these 6, the 3 most efficient sorts are the merge sort, heapsort, and quicksort algorithms. | Why is time and space complexity important when choosing an algorithm?: Time complexity is important when choosing an algorithm, as you want an algorithm that can be easily run without taking too much time to give you an output. Space complexity is also important, as you need an algorithm that can cover large amounts of data. | Should you always use a constant time algorithm / Should you never use an exponential time algorithm? Explain? : Constant time algorithms can be good most of the time, but they shouldn’t always be used, as there could be algorithms which could take an even shorter amount of time. I would almost never use an exponential time algorithm, as they are almost always incredibly inefficient. For 512 inputs, a linear algorithm could take 512 seconds, while an exponential algorithm could take 1.34 x 10^154 seconds. | What are some general patterns that you noticed to determine each algorithm’s time and space complexity?: Time complexity is essentially determined by how long an algorithm takes as a function of the number of inputs for the algorithm. Space complexity is determined using f(N), where N is the size of the input data. | . Complete the Time and Space Complexity analysis questions linked below. Practice . DONE .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/03/26/complexity.html",
            "relUrl": "/markdown/2023/03/26/complexity.html",
            "date": " • Mar 26, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "Big Idea 2 Quiz",
            "content": ". I ended up scoring a 23/25 on the Big Idea Quiz 2. . . This was a careless mistake. A lossless compression algorithm does not guarantee that compressed information is kept secure (no correlation). B is the correct option, as lossless compression algorithm guarantees the reconstruction of the original data while the lossy compression algorithm does not. This is a definition question. . . I got one of the options right (B), but C was not correct. Option C is incorrect, as it does not remove entries with an unknown year, which does not allow for the desired entry to be identified. Option D, however, is correct, as it sorts Column C from least to greatest, removes any unknown years and removes any unknown photographers, therefore getting us the desired entry. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/03/23/bigidea2.html",
            "relUrl": "/markdown/2023/03/23/bigidea2.html",
            "date": " • Mar 23, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Unit 2.4b Using Programs with Data, SQL",
            "content": "Database Programming is Program with Data . The Tri 2 Final Project is an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema?: A database schema is a schema, or layout, that gives a DB its structure. It allows for the layout of relationships between the elements of tables that make up a DB as a whole. . What is the purpose of identity Column in SQL database?: The identity column allows for a unique identifier for each table row. | What is the purpose of a primary key in SQL database?: The primary key in an SQL DB is used as a column to identify each table row as a unique entry. | What are the Data Types in SQL table?: Integers, strings, and boolean are some of the data types in an SQL table. | . import sqlite3 database = &#39;files/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . What is a connection object? After you google it, what do you think it does?:A connection object is an object used to connect to the DB. This allows for a user to read data from the DB live.- Same for cursor object?: A cursor object allows for the retrieval of data from a table one row at a time. | Look at conn object and cursor object in VSCode debugger. What attributes are in the object?: My debugger doesn&#39;t work, but from looking at other people&#39;s debuggers, some of the attributes in the object include special variables, function variables, and class variables. | Is &quot;results&quot; an object? How do you know?: Yes, it is an object. | . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compore create() in both SQL lessons. What is better or worse in the two implementations?:In my opinion, the 2.4a is much more simple to use for the create() function, so it is clear that the create method below in 2.4b can be used for more complex DBs.- Explain purpose of SQL INSERT. Is this the same as User init?: They are similar, as SQL INSERT is utilized to create new records into the DB table, which the user init also sort of does by creating a new user record. | . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) uid = input(&quot;Enter your user id:&quot;) password = input(&quot;Enter your password&quot;) dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO users (_name, _uid, _password, _dob) VALUES (?, ?, ?, ?)&quot;, (name, uid, password, dob)) # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #create() . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do?:If the length of the updated password is less than 2 characters, it sends you a message that you have been hacked and sets the password to be a more secure password.- Explain try/except, when would except occur?: The except would occur when there is an error in updating data in the DB table. | What code seems to be repeated in each of these examples to point, why is it repeated?: The try/except in each of these examples is repeated, as there are many portions where an incorrectly formatted input can occur, which is why error handling needs to be in place throughout the program. | . import sqlite3 def update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why?:If your data is not backed up, all of the records from a table can get deleted and set you back.- What is the &quot;f&quot; and {uid} do?: It gives you a confirmation that the uid was found and the record was successfully deleted. &quot;f&quot; in general is used to put an expression inside of a literal string, while the {uid} embeds the user id from the code block into the string. | . import sqlite3 def delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat?:The menu repeats, because at the end, you can see that it is a recursive function, so it continues to call itself.- Could you refactor this menu? Make it work with a List?: Yes, it can be made into a list. | . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Create a new Table or do something new, sqlite documentation | In implementation in previous bullet, do you see procedural abstraction?: Yes, procedural abstraction is scattered throughout the implementation. Each of the functions is created and can then be called later on throughout the program for a code block. | . In 2.4a or 2.4b lecture: . Do you see data abstraction? Complement this with Debugging example.: Yes, data abstraction can be seen, as each CRUD methodology is working with the given data. My debug isn&#39;t working because of my program not working, but if there were to be a create function, data abstraction could be seen by Use Imperative or OOP style to Create a new Table or do something that applies to your CPT project. . from flask import Flask from flask_sqlalchemy import SQLAlchemy app = Flask(__name__) database = &#39;sqlite:///files/sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() db.init_app(app) &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash class FactofDay(db.Model): __tablename__ = &#39;FactDay&#39; &#39;&#39;&#39; The below sets all of the keys that are going to be looked at. The id key is special, as it is the primary key. This is what any sort of PUT and DELETE requests will be passed through if operable. &#39;&#39;&#39; id = db.Column(db.Integer, primary_key=True) _fact = db.Column(db.String(255), nullable=False) _date = db.Column(db.String(255), nullable=False) _year = db.Column(db.Integer, nullable=False ) &#39;&#39;&#39; This is constructing the fact object and the &quot;_init_&quot; portion is initializing the variables within that fact object. In this case, this is the fact, date, and year variables that are within this object. &#39;&#39;&#39; def __init__(self, fact, date, year): self._fact = fact self._date = date self._year = year &#39;&#39;&#39; the following lines 44-75 contain the setter and getter methods. each of the three above variables (fact, date, year) are being extracted from the object and then updated after the object is created. &#39;&#39;&#39; @property def fact(self): return self._fact # setting fact variable in object @fact.setter def fact(self, fact): self._fact = fact # extracting date from object @property def date(self): return self._date # setting date variable in object @date.setter def date(self, date): self._date = date # extracting year from object @property def year(self): return self._year # setting year variable in object @year.setter def year(self, year): self._year = year &#39;&#39;&#39; The content is being outputted using &quot;str(self)&quot;. It is being returned in JSON format, which is a readable format. This is a getter function. &#39;&#39;&#39; def __str__(self): return json.dumps(self.read()) &#39;&#39;&#39; defining the create method. self allows us to access all of the attributes of the current object. after the create method is defined, the data is queried from the DB. in this case, since it is the create method, the data is being ADDED, and then db.session.commit() is used to commit the DB transaction and apply the change to the DB. &#39;&#39;&#39; &#39;&#39;&#39; here, there is an integrity error &quot;except&quot; statement. db.session would be autocommitted without the db.session.remove() line, and that&#39;s something we don&#39;t want for the purpose of the project. &#39;&#39;&#39; def create(self): try: db.session.add(self) db.session.commit() return self except IntegrityError: db.session.remove() return None &#39;&#39;&#39; the delete method is defined with the &quot;self&quot; parameter. this method is mainly for certain instances in the DB being garbage collected, and the object kills itself. &#39;&#39;&#39; def delete(self): db.session.delete(self) db.session.commit() return None &#39;&#39;&#39; read method with the self parameter, reading the object with all of the properties: fact, date, and year are being returned. &#39;&#39;&#39; def read(self): return { &quot;fact&quot; : self.fact, &quot;date&quot; : self.date, &quot;year&quot; : self.year, } def update(self, fact=&quot;&quot;, date=&quot;&quot;, year=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(fact) &gt; 0: self.fact = fact if len(date) &gt; 0: self.date = date if len(year) &gt; 0: self.year = year db.session.add(self) db.session.commit() return self .",
            "url": "https://vardaansinha.github.io/FastPages/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? | . Flask app object | SQLAlchemy object | I have seen a Flask app object working in Jupyter Notebooks, where it has been imported in order for an SQLite DB to be created. . | I have seen SQLAlchemy object in the CPT project when we needed to read and display data on our frontend by reading through the SQLite table entries in our backend. . | &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///files/sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class | class User purpose:This allows for the definition of the object where we are going to create, read, update, and delete.- db.Model inheritance: This is how all of the objects are placed into a DB and put into the sqlite.db file. | init method: This is the initializer, and it initializes all of the attributes of the object that was previously defined by the User class. | @property, @.setter: @property is used to create and return an object. The setter is then used to create a column for the table.&lt;/li&gt; additional methods: CRUD (create, read, update, delete) to create objects in the table, read previous entries that are already in the table, update existing entries in the table, and delete existing entries in the table. | &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=datetime.today()): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob @property def age(self): today = datetime.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) in human readable form, uses getter # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? | . Create All Tables from db Object:This creates a new table into the SQLite database. It checks whether the table is already in the DB, and if not, it will create a new table.2. User Object Constructors: This builds the user object, and it takes in the sample tester data as seen below. | Try / Except: This is for any possible errors. It tries to add a new user (for example if I were to add u7) into the table, and would tell you that it created the new uid. Otherwise, the &quot;except&quot; portion is for any bad/duplicate data, and it will not add the uid to the table and let you know that the record already exists. | &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=date(1847, 2, 11)) u2 = User(name=&#39;Nikola Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;whit&#39;, password=&#39;123whit&#39;) u5 = User(name=&#39;Indiana Jones&#39;, uid=&#39;indi&#39;, dob=datetime(1920, 10, 21)) u6 = User(name=&#39;Marion Ravenwood&#39;, uid=&#39;raven&#39;, dob=datetime(1921, 10, 21)) users = [u1, u2, u3, u4, u5, u6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following | . User.query.filter_by:This filters the users based on uid as seen in the code (_uid=uid).2. user.password: This is for verifying the user password and checking it with the corresponding uid. | def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following | . user.find_by_uid() and try/except:This is checking through the table to see if the uid exists in the table already. The try and except portion is to tell the user whether or not the uid exists; if it does, then it will tell you that the user was found, but if it doesn&#39;t, the code will be passed onto the next segment.2. user = User(...): This is there to initialize the user object. | user.dob and try/except: The user.dob is created to take in the previous &quot;dob&quot; input where the date of birth of the user is inputted, and the try/except is to display the date of birth, or if it is invalid, then tell the user that the formatting is invalid and that the date was defaulted to something else. | user.create() and try/except: Finally, the user.create() is to create the user entry in the table, and if it failed to create the user, the &quot;except&quot; is there to tell the user that there was an error in the creation. | def create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object name = input(&quot;Enter your name:&quot;) password = input(&quot;Enter your password&quot;) # Initialize User object before date user = User(name=name, uid=uid, password=password ) # create user.dob, fail with today as dob dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dbo}&quot;) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) create() . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following | . User.query.all:This queries all of the users in the table.2. json_ready assignment: json_ready is used to take all of the users to a list so that the list can be read from the SQLite DB. | # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # each user adds user.read() to list return json_ready read() . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Add Update functionality to this blog. | Add Delete functionality to this blog. | . UPDATE FUNCTIONALITY . def update(): uid = input(&quot;What is your username?:&quot;) user = find_by_uid(uid) if user is None: print(f&quot;User {uid} is not found&quot;) return print(user) uname_new = input(&quot;Enter your name: &quot;) uid_new = input(&quot;Enter your uid: &quot;) password_new = input(&quot;Enter your new password: &quot;) confirmpass_new = input(&quot;Confirm your new password:&quot;) with app.app_context(): try: user.update(uname_new, uid_new, password_new, confirmpass_new) print(f&quot;User {uid} is UPDATED.&quot;) except: print(f&quot;There was an unidentified error that needs to be fixed for {uid}&quot;) update() . Something I want to expand upon in the above utility is the confirmpass_new portion, where the program can check through if the password_new input is = to the confirmpass_new input, otherwise there is an error with updating the user. . def delete(): uid = input(&quot;What is your user ID?:&quot;) user = find_by_uid(uid) if user is None: print(f&quot;No user found with the following uid {uid}&quot;) return with app.app_context(): try: user.delete() print(f&quot;User {uid} has been DELETED.&quot;) except: print(&quot;There was an unidentified error that needs to be fixed for the attempted UID deletion.&quot;) delete() . &lt;/div&gt; | .",
            "url": "https://vardaansinha.github.io/FastPages/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab: Not every file type is compatible for the same type of resizing, compression, etc. For instance, a jpg and png file may not use the same type of compression method. | Size, height and width, number of pixels: When managing image files, the height, width, and size can be adjusted when compressing. Later on in my hacks, we can see how I reduced the height and width of an original jpg file by 4x. | Visual perception, lossy compression: Lossy compression is when the file size of an image is compressed, and the visual perception experience of the image deteriorates; for instance, an image&#39;s quality becomes more fuzzy and less clear. | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files?:cd to change directory, ls to list the files in a directory, and cat to read the insides of a file through terminal.- What are the command you use in Windows terminal to access files? cd is still used to change directory and dir is more often used to list the files in a directory. | What are some of the major differences? Some of the commands to view files may be different, and Linux uses forward slashes while Windows uses backwards slashes, making the absolute directory paths different between the two OSs. | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? Path is a big deal, as all images are stored in folders, and to access those images, the path has to be correct. | How does the meta data source and label relate to Unit 5 topics? Unit 5 was about programs that can analyze data. The meta data source and label relates to these topics, since metadata contains all of the unique information for an image, and the data can be outputted onto the screen from a program. | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? IPython is a Python interactive shell which can be utilized to display images. Furthermore, Pandas can be used as an imported module to extract certain metadata from these images. | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) smiley = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smiley&quot;, &#39;file&#39;: &quot;smiley.png&quot;}]) image_display(smiley) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal?: Base64 is similar to binary and hex, since it is an encoding format which can convert a normal string/number into a series of encoded characters. It is different from binary and hexadecimal in the base that it uses. Base64 uses base 64 (0-63), while binary uses base 2 (0-1) and hexadecimal uses base 16 (0-9 and A-F). . Translate first 3 letters of your name to Base64.: Var --&gt; VmFy | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering?:I have been a consumer of buffering when watching movies/TV shows online on sites such as 123movies, Soap2Day, etc.- From your consumer experience, what effects have you experienced from buffering? From buffering, the video/movie file often lags very consistently, and some parts of the video are simply unable to load, despite refreshing the page. This creates a bad movie watching experience, as parts of the movie are simply cut out. | How do these effects apply to images?: Buffering can be used to add certain edits to the features of images, such as greyscale, redscale, etc. | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed?:Yes, it seems like a series of steps are being performed to manipulate the images.- Describe Grey Scale algorithm in English or Pseudo code?: First, the series of images are prepared and added to the &quot;images&quot; dictionary. Then, to get the greyscale of the image, the average of all the pixels are taken, and the new image is loaded based on the averages. | Describe scale image? What is before and after on pixels in three images?: Scale image is a feature allowing for the images to get scaled up or down in size. Before scaling, the pixels are of a larger size, but after the averages of all the pixels are taken, they are compressed down to a smaller size. | Is scale image a type of compression? If so, line it up with College Board terms described?: Yes, scaling an image is a type of compression: lossy compression. This is where the image file size is reduced, but the image quality is also deteriorated. | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL:Stands for Python Imaging Library, and it adds many capabilities for processing different types of images. It is an open-source library, and it is often used to manipulate imported image properties.- numpy: This is another type of library that allows for the processing of mathematical functions in programs. | base64: This is an encoding algorithm representing binary data as text. | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . . PROGRAMMING PARADIGMS . MANIPULATING PIXELS HACKS: . import numpy as np from PIL import Image # Load the image image = Image.open(&#39;images/baltimore.jpg&#39;) image.info[&#39;Title&#39;] = &#39;Masterpiece in the Air&#39; image.info[&#39;Author&#39;] = &#39;Vardaan Sinha&#39; image.info[&#39;Year&#39;] = &#39;2018&#39; img_array = np.asarray(image) binary_pixels = np.unpackbits(img_array, axis=-1) hex_pixels = np.apply_along_axis(lambda x: hex(int(&#39;&#39;.join(map(str, x)), 2))[2:].zfill(2), -1, binary_pixels) red_img = np.copy(img_array) red_img[:, :, 1] = 0 red_img[:, :, 2] = 0 red_image = Image.fromarray(red_img) red_image.save(&#39;images/baltimore.jpg&#39;) resized_image = red_image.resize((red_image.width // 4, red_image.height // 4)) print(image.info) resized_image.show() . {&#39;jfif&#39;: 257, &#39;jfif_version&#39;: (1, 1), &#39;jfif_unit&#39;: 0, &#39;jfif_density&#39;: (1, 1), &#39;Title&#39;: &#39;Masterpiece in the Air&#39;, &#39;Author&#39;: &#39;Vardaan Sinha&#39;, &#39;Year&#39;: &#39;2018&#39;} . PARADIGM EXPLANATION: . In the above hacks, I attempted to utilize redscale (a different byte manipulation method), printing metadata (important information about the image), and using scaling methods to change the size of the image. I utilized an image that I took (baltimore.jpg), and created red_img to set both the green and blue channels to be 0 (in &quot;RGB&quot;), so that only the red was captured, therefore making it redscale. I also added three pieces of image information (metadata) that were printed. This included the name of the photograph, the photographer, and the year that the image was taken in. The additional metadata citing &quot;jfif&quot; is for when a jpg/jpeg file is compressed. . TWO IMAGES REPRESENTING LOSSY AND LOSSLESS COMPRESSION: . The lassen-volcano.jpg image will represent lossy compression. This is because if the image file is compressed, it will definitely have a drastically reduced file size, but the image quality will also go down, due to the very fine details in the image, and the variety of colors. It will likely become more fuzzy. On the other hand, to represent lossless compression, the green-square-16.png image can be used as an example. That image has one sole color, so the RGB pixel values are going to be the same every time (barring any image manipulation method purposely utilized), and the quality of the image will not deteriorate, while the image file size will still decrease. . CB 2.2 PRACTICE QUIZZES: . . This was the only one with 2.2 as the listed topic. .",
            "url": "https://vardaansinha.github.io/FastPages/2023/03/11/ap22.html",
            "relUrl": "/2023/03/11/ap22.html",
            "date": " • Mar 11, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-09-AP-unit2-3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;files/grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 2 578 12 2.78 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 6 145 12 2.95 7 167 10 3.90 8 235 9th Grade 3.15 9 nil 9 2.80 10 469 11 3.45 11 456 10 2.75 . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;GPA&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Student ID&#39;,&#39;GPA&#39;]].to_string(index=False)) . GPA 0 3.57 1 4.00 2 2.78 3 3.45 4 4.75 5 3.33 6 2.95 7 3.90 8 3.15 9 2.80 10 3.45 11 2.75 Student ID GPA 123 3.57 246 4.00 578 2.78 469 3.45 324 4.75 313 3.33 145 2.95 167 3.90 235 3.15 nil 2.80 469 3.45 456 2.75 . In the above code, only data from the column &quot;GPA&quot; is printed. Then, with the Student ID and GPA being printed, they attempt to print only two of the columns side by side. . DataFrame Sort . print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], ascending=True)) . Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 . In this code snippet, all of the data is printed, but is sorted based on GPA. It is sorted from lowest GPA to highest GPA. . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 7 167 10 3.90 8 235 9th Grade 3.15 10 469 11 3.45 . In this code snippet, only GPA values greater than a 3.0 are printed. . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . In this code snippet, the maximum and minimum GPA values are extracted from the data file and printed. . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390], &quot;duration&quot;: [50, 40, 45] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;]) print(df) . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 . In this code, a dictionary is created within the program itself. Then, the dictionary is sorted into readable data by creating columns with the data. Then, at the bottom labels are created with a starting index of &quot;day1&quot;, so that all of the rows can be labeled and corresponding to the right data. . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . -Examine Selected Rows calories duration day1 420 50 day3 390 45 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Here, only certain rows of data are being pulled to analyze. In this case, it is only day1 and day3 statistics. . Pandas DataFrame Information . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, day1 to day3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 3 non-null int64 1 duration 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . Here, there is information being printed about the dataset. It tells you the class, the index and how many entries are present in the data, the number of columns, the data type, and the corresponding memory usage of the dataset. . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . --Duration Top 10 Duration Pulse Maxpulse Calories 69 300 108 143 1500.2 79 270 100 131 1729.0 109 210 137 184 1860.4 60 210 108 160 1376.0 106 180 90 120 800.3 90 180 101 127 600.1 65 180 90 130 800.4 61 160 110 137 1034.4 62 160 109 135 853.0 67 150 107 130 816.0 --Duration Bottom 10 Duration Pulse Maxpulse Calories 68 20 106 136 110.4 100 20 95 112 77.7 89 20 83 107 50.3 135 20 136 156 189.0 94 20 150 171 127.4 95 20 151 168 229.4 139 20 141 162 222.4 64 20 110 130 131.4 112 15 124 139 124.2 93 15 80 100 50.5 . This is very similar to what was being done before, except this time, there is more data, and it is stored in a CSV file (Excel spreadsheet), and it is being pulled from there. Then, at the bottom, it is printing the top 10 and bottom 10 entries of duration levels. . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . This is something very similar to the fetch that was utilized in our PBL projects. The data is being fetched from our own API from the Flask server, and it is being read in a readable JSON format. Then, based on the name of the table &quot;countries_stat&quot;, the data is sorted and put into columns. The bottom line prints the first 6 rows based on case and death statistics. . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Amazing. . | When choosing a data set, think about the following... . Does it have a good sample size? | Is there bias in the data? | Does the data set need to be cleaned? | What is the purpose of the data set? | ... | . | Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) . | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. . Here are some suggestions... . Titanic Dataset:This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. | Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | . These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset... . Kaggle:The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. | UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Titanic Data Index([&#39;survived&#39;, &#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;fare&#39;, &#39;embarked&#39;, &#39;class&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;deck&#39;, &#39;embark_town&#39;, &#39;alive&#39;, &#39;alone&#39;], dtype=&#39;object&#39;) survived pclass sex age sibsp parch class fare 0 0 3 male 22.0 1 0 Third 7.2500 1 1 1 female 38.0 1 0 First 71.2833 2 1 3 female 26.0 0 0 Third 7.9250 3 1 1 female 35.0 1 0 First 53.1000 4 0 3 male 35.0 0 0 Third 8.0500 .. ... ... ... ... ... ... ... ... 886 0 2 male 27.0 0 0 Second 13.0000 887 1 1 female 19.0 0 0 First 30.0000 888 0 3 female NaN 1 2 Third 23.4500 889 1 1 male 26.0 0 0 First 30.0000 890 0 3 male 32.0 0 0 Third 7.7500 embark_town 0 Southampton 1 Cherbourg 2 Southampton 3 Southampton 4 Southampton .. ... 886 Southampton 887 Southampton 888 Southampton 889 Cherbourg 890 Queenstown [891 rows x 9 columns] . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . survived pclass sex age sibsp parch fare alone embarked_C 0 0 3 1 22.0 1 0 7.2500 0 0.0 1 1 1 0 38.0 1 0 71.2833 0 1.0 2 1 3 0 26.0 0 0 7.9250 1 0.0 3 1 1 0 35.0 1 0 53.1000 0 0.0 4 0 3 1 35.0 0 0 8.0500 1 0.0 .. ... ... ... ... ... ... ... ... ... 705 0 2 1 39.0 0 0 26.0000 1 0.0 706 1 2 0 45.0 0 0 13.5000 1 0.0 707 1 1 1 42.0 0 0 26.2875 1 0.0 708 1 1 0 22.0 0 0 151.5500 1 0.0 710 1 1 0 24.0 0 0 49.5042 1 1.0 embarked_Q embarked_S 0 0.0 1.0 1 0.0 0.0 2 0.0 1.0 3 0.0 1.0 4 0.0 1.0 .. ... ... 705 0.0 1.0 706 0.0 1.0 707 1.0 0.0 708 0.0 1.0 710 0.0 0.0 [564 rows x 11 columns] . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . survived 0.000000 pclass 2.464072 sex 0.844311 age 31.073353 sibsp 0.562874 parch 0.398204 fare 24.835902 alone 0.616766 embarked_C 0.185629 embarked_Q 0.038922 embarked_S 0.775449 dtype: float64 . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . survived 1.000000 pclass 1.878261 sex 0.326087 age 28.481522 sibsp 0.504348 parch 0.508696 fare 50.188806 alone 0.456522 embarked_C 0.152174 embarked_Q 0.034783 embarked_S 0.813043 dtype: float64 . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . survived 1.0000 pclass 3.0000 sex 1.0000 age 80.0000 sibsp 4.0000 parch 5.0000 fare 512.3292 alone 1.0000 embarked_C 1.0000 embarked_Q 1.0000 embarked_S 1.0000 dtype: float64 survived 1.00 pclass 1.00 sex 0.00 age 0.75 sibsp 0.00 parch 0.00 fare 0.00 alone 0.00 embarked_C 0.00 embarked_Q 0.00 embarked_S 0.00 dtype: float64 . Machine Learning Visit Tutorials Point . Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python. . Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . | Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. . Decision Trees, prediction by a piecewise constant approximation. | Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) . DecisionTreeClassifier Accuracy: 0.7705882352941177 LogisticRegression Accuracy: 0.788235294117647 . /Users/johnmortensen/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1): STOP: TOTAL NO. of ITERATIONS REACHED LIMIT. Increase the number of iterations (max_iter) or scale the data as shown in: https://scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression n_iter_i = _check_optimize_result( . import pandas as pd df = pd.read_json(&#39;files/nfl.json&#39;) print(&quot;HIGHEST QUARTERBACK HEIGHT&quot;) print(df[df.Height == df.Height.max()]) print() print(&quot;SMALLEST QUARTERBACK HEIGHT&quot;) print(df[df.Height == df.Height.min()]) print() print(&quot;TOP 5 QUARTERBACK HEIGHTS&quot;) print(df.head(5)) print() print() print() print(&quot;THE AVERAGE QUARTERBACK HEIGHT IN INCHES IS...&quot;) print(df[&#39;Height&#39;].mean()) print() print() print() print(&quot;THE MEDIAN QUARTERBACK WEIGHT IN POUNDS IS...&quot;) print(df[&#39;Weight&#39;].median()) print() print() print() print(&quot;SOME STATISTICS ABOUT THE PROSPECTS QUALITIES:&quot;) print(df.describe()) . HIGHEST QUARTERBACK HEIGHT Height Weight QB Ranking 0 76 244 1 2 76 229 3 SMALLEST QUARTERBACK HEIGHT Height Weight QB Ranking 1 70 214 2 TOP 5 QUARTERBACK HEIGHTS Height Weight QB Ranking 0 76 244 1 1 70 214 2 2 76 229 3 3 75 217 4 4 75 231 5 THE AVERAGE QUARTERBACK HEIGHT IN INCHES IS... 73.5 THE MEDIAN QUARTERBACK WEIGHT IN POUNDS IS... 213.5 SOME STATISTICS ABOUT THE PROSPECTS QUALITIES: Height Weight QB Ranking count 12.000000 12.000000 12.000000 mean 73.500000 215.666667 6.500000 std 1.977142 14.278613 3.605551 min 70.000000 192.000000 1.000000 25% 72.000000 207.000000 3.750000 50% 73.500000 213.500000 6.500000 75% 75.000000 225.250000 9.250000 max 76.000000 244.000000 12.000000 . EXPLANATION: . In the above code cell, I attempted to utilize plenty of Pandas utilities. I created my own dataset instead of using one from online, and gathered data based on 2023 NFL Quarterback Prospects straight out of college. I got data on the top 12 quarterbacks from this years draft, and used multiple sources to fact check the data that I was inputting. In this case, the three columns in the data were their height, weight, and quarterback ranking based on multiple analysts&#39; picks. I sorted this data and used Panda to list the top 5 quarterback heights, the biggest and smallest quarterbacks, the average quarterback height, the median quarterback weight, and something unique that I did was that I used the descriptive statistics function unique to Panda to list all of the IQR ranges, max values, etc based on the created dataset. All of the data was stored in nfl.json, a readable file. . 2.3 CB QUIZ: . .",
            "url": "https://vardaansinha.github.io/FastPages/2023/03/09/AP-unit2-3.html",
            "relUrl": "/2023/03/09/AP-unit2-3.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) smiley = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smiley&quot;, &#39;file&#39;: &quot;smiley.png&quot;}]) image_display(smiley) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . .",
            "url": "https://vardaansinha.github.io/FastPages/2023/03/07/AP-unit2-2.html",
            "relUrl": "/2023/03/07/AP-unit2-2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "MCQ 3 Test Reflection",
            "content": ". I ended up scoring a 48/50 on the MCQ Test #3, and I was happy with this, but there were two difficult questions which I got wrong which I have reflected on below. . . In this question, the given scenario was in relation to finding the distance between two numbers, num1 and num2, on a number line. The option I chose was to take the absolute value of each number separately and then add the two numbers. This is actually incorrect, because if you take the absolute value of two positive numbers and add them, that will give a value that is greater than their distance away from each other on a number line. In actuality, the correct answer was option B, where the two numbers are subtracted from each other FIRST, and then the absolute value of that difference is taken and displayed. This would display the correct result in every situation. Next time, I need to pay closer attention to the question, as this wasn’t incredibly complicated, but I didn’t consider all possibilities of program outputs. . . For this question, you had to choose the two of the four given algorithms which appear to run in a reasonable time. In this case, I actually selected both of the incorrect algorithms, B and C. B is incorrect because the steps taken for each size increases exponentially, which is not efficient, and C is incorrect because the number of steps for each increasing list size n grows at a factorial rate. A is correct, as the steps grow linearly in relation to the list size, and D is correct, as the steps needed for each list size of n is n squared, which is algorithmically efficient. I need to better understand these relationships so I can get a similar question correct next time. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/03/06/mcq3.html",
            "relUrl": "/markdown/2023/03/06/mcq3.html",
            "date": " • Mar 6, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "CPT Work",
            "content": "Writeup Link: https://drive.google.com/file/d/1fUS66YMAojEjtWMst8WQ-kb1vwuQbmC4/view?usp=sharing . Video Link: https://drive.google.com/file/d/1u4XCh8F6enfNX7o5DX52LJ_luJdW3NDw/view?usp=sharing .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/02/26/cptsubmission.html",
            "relUrl": "/markdown/2023/02/26/cptsubmission.html",
            "date": " • Feb 26, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "Top Tips for Frontend Management",
            "content": "TOP TIPS FOR MANAGING YOUR FRONTEND: . Make sure that each of the pages on your site matches the same default formatting. Though each of the pages can be unique in their content, it’s better that each page has the same formatting as the next, in order to keep a uniform design and look more professional. . | Detect and fix broken links ASAP! Having broken links on your frontend (links that lead to nothing) leaves a bad taste in the consumer’s mouth, and it is something you absolutely want to avoid. . | Focus on making your frontend look as professional as possible. Throughout the project, my own group members had some issues with this, as they did not capitalize words, they left punctuation/spelling inaccurate and incomplete, and overall, made it seem like there was a lack of effort put in, despite my group members having worked extremely hard on each of their features. . | Prioritize creating a frontend that allows for a certain level of personalization and input from the user themselves. If the user does not have this opportunity, they’ll feel bored on the site, and leave to discover another project instead of yours. This can include buttons, user input options to generate a response from the system, etc. This will largely enhance the user’s experience. . |",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/02/23/toptipsfrontend.html",
            "relUrl": "/markdown/2023/02/23/toptipsfrontend.html",
            "date": " • Feb 23, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "Top Tips for Frontend/Backend Connection Management",
            "content": "TOP TIPS FOR MANAGING YOUR FRONTEND/BACKEND CONNECTION: . It is much easier to use POSTMAN to generate your Fetch code instead of trying to write it yourself. Even if it may not contain everything you need, it provides the basic framework you need to include in your frontend code to fetch from your backend. To do so, you have to create a request, and then click the code icon on the right. Change the dropdown bar to “JavaScript Fetch”, and you should be good to go. Below is an example of what it should look like: | . Make sure you are putting your fetch code in the right place. This involves a little bit of intuition, as you have to realize that the “fetch” is for fetching the data from your backend to put on your frontend so that it is visible for a consumer. Therefore, in whichever file you are focusing on for the frontend in your feature, that is where the fetch code will go. Remember to put this inside of a script tag, as this is JS code in a markdown/HTML file. . | Make sure you have error conditions to combat any sort of invalid inputs and corrupted fetches from your backend. This will be located in your API/MODEL files, where you can set certain conditions based on what a user inputs, and try to filter out any sort of garbage data from your site. Here is an example of what an error condition can look like: . | .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/02/23/toptipsfbe.html",
            "relUrl": "/markdown/2023/02/23/toptipsfbe.html",
            "date": " • Feb 23, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "Top Tips for Backend Management",
            "content": "TOP TIPS FOR MANAGING YOUR BACKEND: . Make sure that your main file (main.py or app.py, whatever you have it named as) is without any errors before you run your backend server for testing. Having even one error for one class will prevent any sort of functionality from your backend server. To avoid these errors from happening, make sure that you are constantly in communication with your team as to when you are committing, and what you are committing. Often times, it is much safer to run your backend server LOCALLY, so that you can debug errors before you update your files on your deployment server (in our case, this was AWS). . | In your “model” and “api” files, you will have to import many modules. Often times, though, when you write the lines to import certain modules, you get errors saying that the “module doesn’t exist”. To avoid this, make sure that you have “pip install program” beforehand, and that the module you are trying to import exists. . | Remove any unnecessary lines! Many times, we copy paste a certain backend format so that we have a structure of what we want to do, and then change it to adhere to our own feature. Sometimes, though, there are unnecessary lines, such as modules you may not be using for your feature, or certain DB operations which are not supported by your feature, and it is very important to remove these lines. It can confuse you and throw your backend process off, it can cause a lot of errors in the file because of missing lines not calling certain functions/procedures, and it can also confuse any sort of reader who is looking through your code. . | COMMENT! Comments are very important and should be implemented thoroughly into all parts of backend. Backend code can become very confusing, which is why it is important that you put comments for each function, procedure, and parameter, so that you are able to easily debug issues if they come up. . |",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/02/23/toptipsbackend.html",
            "relUrl": "/markdown/2023/02/23/toptipsbackend.html",
            "date": " • Feb 23, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "Night at the Museum Reflection",
            "content": "GOALS: . Night at the Museum is an event that takes place at Del Norte near the end of every trimester, so that people in project-based classes, such as studio art, photography, ceramics, computer science, and many other unique courses can showcase their projects which they have put hard work into for the past few months and also take a look at other people’s work to gain inspiration and insight into the perspectives of others in art and creative thinking in general. Before going to N@TM, I had a couple of goals which I wish to showcase in this blog post: . I wanted to successfully showcase our group’s AP CSP project to the audience, and answer other people’s questions about our project to the best of my abilities. . | I wanted to take a look at other people’s projects within our own AP CSP Class (Mr. Yeung’s Period 4 Class). After all, we have spent the entire trimester in this class, and I was very interested to see what other groups within the class had come up with, especially after the midway CPT presentations which took place a couple of weeks ago. . | I wanted to look beyond the realm of just CSP, and look into CSA projects. I wanted to assess the different ideas that they had, and see how they utilized and combined the programming knowledge they learned from both CSP and CSA to make a next-level project. . | Finally, I wanted to look past Computer Science, and take a look at some projects that were more “art” related. Some of the arts classes which had classrooms dedicated for their projects at N@TM were ceramics, photography, and studio art. I wanted to see if there were any crossovers/similarities in the ideation process and work towards the final product between these projects and our own Computer Science projects, despite the classes themselves being very different. . | OUR OWN CSP PROJECT: JNVS NEWS: . JNVS News is a project that myself, Justin, Shaurya, and Navan have been working very hard on for the past few months. Leading up from the past couple of weeks into N@TM, we were having a lot of difficulties, mainly in regards to connecting our frontend to our backend and deploying. Luckily, we were able to figure out a lot of errors and their solutions before the time for N@TM came. Our news site ended up being functional, and every feature (except mine unfortunately) was running off of our deployed Flask server. At N@TM, we had a lot of people come up to our project, take pictures, and ask about the different features of our project. Fortunately, all of our members were present, and we were able to effectively explain all of our features and how they correlated with each other to both people who were programming experts and those who had no programming knowledge. . If there is something I would change for the next time, I would make sure that we put more effort into the visual appeal of the site before the presentation. For an audience that contains many people who don’t know a lot about programming or the difficulties of creating certain features, they will mainly be drawn by a project that looks visually appealing and professional. . . RENTAL RETREAT: Mr. Yeung’s Period 4 CSP Class (James, Krishiv, Caleb, Qais): . N@TM Presentation &amp; Experience: . The Rental Retreat group had their project set up to present in the same room as my group (A151), and this was a project that I had offered feedback on throughout the last few weeks, so I was very excited to see the product that they were presenting at this point. I was initially caught by the slogan they had on their home screen: “The place where your vacation finds perfection”. This drew me in even more and made me more interested in looking at their project. This inspired me directly for my group’s news project; maybe we could have a catchy slogan which would make our project more authentic and interesting to our consumer audience. Anyways, after further inspection at their project, it seemed that they had a couple of main features: a schedule maker for someone to plan their time on vacation, a “Near Me Finder” to look at nice vacation and tourist spots near a person when they are out of town, a feature to search for open property to stay in when on vacation, a place to create an account to use the product whenever you go on vacation, and finally, a place to put in honest reviews to give the group feedback about their product and about their stay while on vacation. . The feature I enjoyed playing with the most was the Near Me Finder. With this feature, I was able to use the Google Maps snippet on the site, and there were tourist sites labeled all over which I could visit. This would be an incredibly useful tool to use if I was on vacation, and my family was unsure as of where to go. Also, with the maps feature, came the little person in the bottom right corner which could be dragged to any area on the map to provide a closeup view of the area that I was interested in. Overall, their group did a very good job of explaining the project to me, and I hope to see a more “professional” look of the project and a more fully functional version of the product in the next couple of weeks, as this is a project that would be very useful to tons of people with the unique collection of ideas that this group has attempted to connect. . . Further Inspection of Project after N@TM: . After N@TM, I was curious about a couple of features in regards to their project, so I decided to take a closer look at their frontend and backend repositories. Here were some of the interesting findings I had: . I was very impressed with the required frontend code for the Google Maps API. I know that a member of my group (Navan) also implemented this feature earlier for the Breaking News feature, so seeing how the two features were similar/different was very cool. In our project, Navan used the Maps API to track breaking news in different areas, and in this case, James (the one in charge of the maps feature) used the Map API to plot different tourist and vacation spots, which was very cool. It required a lot of extra code to implement, and I was impressed with the level of research that was likely done to successfully implement it. . | I also looked at the backend code for this project (Krishiv’s Repo) and inspected the /api/user.py file, which contained a lot of the backend code for the CRUD methodologies and the error validation for the property finder feature. I found it interesting to see some of the similarities to the code structure of the /api file with my own project, but I also saw that this group had developed the handling of incorrectly formatted information a lot more than my own group. For example, in the backend code, I can see that for the property finder feature, there are certain inputs that are not accepted for each of the inputs that the project is asking the user. In specific, the property finder asks the users how many beds &amp; baths they would ideally want, and the price range they would be able to afford. In the backend code, all three of these inputs are addressed, and if one of the inputs is accidentally left blank, then the project will output an error message, causing the user to put in valid inputs to find a property. . | . One thing that I was curious about was the login/signup page, and how they are going to a) find enough time to finish that entire feature and b) save that account information and link it to past properties that a user has been interested in &amp; vacation plans that a user has already inputted. I hope to see this group become successful in implementing this feature, as this project will then become even more elevated than it already is. | CODE CARDS: Mr. Mortensen’s Period 2 CSA Class (Aarav, Rohan, Nick, Andrew, Bailey): . N@TM Presentation &amp; Experience: . With this presentation, I was super impressed by how fluent all of the members of this group were with the backend and frontend connection and how each of the features of the project works (despite each of them working primarily on their own feature of the project). This project, code cards, is essentially made to be a much easier version of Quizlet. You may be asking; what is the point of code cards when Quizlet already exists? Well, now that Quizlet has a) been made to be a paid service after viewing a certain number of quizlets and b) cannot use the flashcard feature on Quizlet effectively to figure out the specific concepts they need to work more on, this group decided to create Code Cards for aspiring learners of all ages. All of this group’s runtime links worked efficiently without crashing, and had all their features working like an actual project. Using Java, Python, JavaScript, and a good bit of customization of their frontend using HTML/CSS, they were able to create a working login/signup page where you can create your own account for your created study sets or sets that you’ve already been taking a look at, and get to work immediately. . At the N@TM experience, I created my own account on their machine and tried out a study set, and they showed me how this product overtakes Quizlet. On Quizlet, with the flashcard feature, you cannot specify whether or not when you flipped the card, you got the definition/answer correct or not. On Code Cards, however, you can do just that, and that stores that specific term/flashcard for later instead of skipping past it. This really helps to learn from mistakes that you make when studying on a particular set. I also tried searching for study sets (which were being fetched from Quizlet), and the project flawlessly outputted all the Quizlet tests, flashcards, and content from each study set in an appealing and working manner. I really enjoyed this project, as the group let me go hands on with testing out their project, which made me more invested in it. . . Further Inspection of Project after N@TM: . After N@TM, I decided to take a closer look at the project and the different frameworks that it utilized in comparison to CSP. Here are some of the things that I found: . Instead of using flask, they use Spring, which is a framework which supports the development of applications being run on Java. This makes sense, as CSA primarily uses Java for their code. . | Something interesting that I saw in their frontend code was that after they fetched the data from their deployed Spring server, instead of pulling from a list, they were actually pulling from a dictionary. In the frontend code, I saw that it was pushing the output as a key/value pair, which is something we learned a bit about in CSP when we talked about Python dictionaries. . | This is definitely a project I want to look more into and was inspired by, simply because of its appeal to the audience and its flawless functionality. . . PHOTOGRAPHY AND 3D ANIMATION 1/2 PROJECTS: . N@TM wasn’t just about computer science. There were also other arts classes presenting their body of work, and the two classes I decided to take a look at were photography and 3D Animation. These exhibitions were a little bit different, as there weren’t any students necessarily standing next to their work and presenting it, but it was rather a “gallery” which we could walk around and look at different projects. . Having dabbled in both photography and 3D animation (inside and outside of school), I was interested to see the different works that my peers had come up with. . For the photography projects, there were a lot of interesting pictures which provided different perspectives of different objects. Something that really stuck out to me was the angles that many of the students decided to use; the angles really put a different spin on commonplace objects that would generally appear to be boring. For instance, there was one photo of a basic VANS shoe, but the angle, lighting, and slight editing which was put on the photo forced me to actually think about it, and it took me a minute to realize that it was just a shoe. . After looking at a lot of photographs, I looked at the 3D Animation projects, which are created using an application called Blender. I personally had done 3D Animation 1 back in my freshman year, so I had done the course, but was unable to do the N@TM portion because of the pandemic. The main project for 3D Animation 1 is the donut project, where you can style a donut to make it look as realistic as possible, and style the setting as well to make it seem like an authentic and beautiful setting where you could sit down and eat a donut. One of the projects which stuck out most to me was a setting by the sea. The donut was set on a table with a white tablecloth, white plate, and gold plated utensils, and it was in a room painted light grey, and the room had a window. In this window, there was a view of a mixed blue, which was meant to look like the ocean. This project was incredibly appealing to me, and I saw the effort that the creator had put into the project, which is why it was very cool to see. . . FINAL REVIEW: . Overall, I had a very good time at N@TM. I got to meet a lot of new people and look at a diverse range of projects, and regardless of the class or project that I was taking a look at, I was able to gather new ideas and perspectives that I can apply to my own life and project for AP CSP. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/02/19/natmreflection.html",
            "relUrl": "/markdown/2023/02/19/natmreflection.html",
            "date": " • Feb 19, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "Blog Reflection 5.5 & 5.6",
            "content": "5.5 IMPORTANT NOTES: . When requesting any GitHub repository, a license type is requested | Different licenses serve different purposes and can create different restrictions on software releases | The GPL License is a common license type, but it comes with a couple of restrictions. For example, all the work used from an original source must be free and the code must be shared. | Most times, companies want to be reimbursed for other people using their patents and software/ideas. Open source licenses, such as the GPL License, has very strict guidelines in regards to the distribution of such works. | Creative Commons Zero v1.0 Universal License: This ceases any copyright claims on work that YOU create, and your code is accessible and usable for the public. | Open Source MIT License: The MIT License, a very common license type, allows for the free distribution and creation of code. The only slight requirement that accompanies the MIT License is a citation of the original author’s name or a link to their original repository. | OPINION: I believe that the MIT License is the best license to use. The MIT License provides the best balance between being able to utilize code, and the original creators of repositories still getting credit. On previous coding projects before CSP, I have used the MIT License, so that if any of my peers want to use snippets of my code, the MIT License easily permits that. | LEGAL &amp; ETHICAL OPINION: Though open-source and free distribution is something that can promote education and collective sharing, I believe that it is very important that some software stay secure and only with the original company. Some companies work very hard on developing their own methodologies of creating software, and if that is something that keeps their income above other companies in terms of competition, it is something that they should keep secure to themselves. | . 5.5 Blog Post Reflection: . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. (DONE ABOVE) | In your blog, summarize the discussions and personal analysis on Software Licenses/Options, Digital Rights, and other Legal and Ethical thoughts from this College Board topic. (DONE ABOVE) | Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. | For both the Team CPT Project Repository and for my personal blog, we decided to use the MIT License. The main motivation behind using the MIT License for both repositories was that it is a very permissive license, and it promotes open-source code usage. For instance, in our CSP Community, if another group is struggling with a code snippet to incorporate a feature similar to something we have on our group project, they should be able to refer and even use code snippets from our repository, and just cite our names. The same applies for my FastPages. There are many Jupyter Notebook Blog Posts on my Personal FastPages, and some of the code snippets are difficult to get working results, so if someone needs to refer or use some of my code snippets, under the MIT License, they should be able to use it. . 5.5 Extra Reflection &amp; Research: . To learn more about GitHub License Usage, I read and analyzed an article published by GitHub titled, “Open source license usage on GitHub.com” (https://github.blog/2015-03-09-open-source-license-usage-on-github-com/). This article highlighted the top licenses used (by percentage) by all users on GitHub. According to the article, here were the top 10 licenses on GitHub by percentage: . MIT LICENSE: 44.69% | Other: 15.68% | GPLv2: 12.96% | Apache: 11.19% | GPLv3: 8.88% | BSD 3-clause: 4.53% | Unlicense: 1.87% | BSD 2-clause: 1.70% | LGPLv3: 1.30% | AGPLv3: 1.05% | Then, the article shows a graphic showing how over time, the licensing percentages have exponentially increased. This is likely because as time goes on, more developers on GitHub want to share code with the public and choose licenses which allow for free distribution and usage of their code. In this graphic, it shows that in 2008, there were almost 0 GitHub Developers who utilized any sort of licenses, likely because of the lack of awareness or relevance surrounding sharing and distributing code. Then, starting in 2013, there was a massive rise of approximately 20,000 developers who used licenses, and in 2015, this number rose to approximately 80,000 developers. Now that it is 2023, and programming has become increasingly open-source and shared, I’m sure that the number has risen to close to 250,000 developers, since more and more young people have become invested in creating software projects on GitHub. . 5.6 IMPORTANT NOTES: . PII stands for Personal Identifiable Information, which are pieces of information that are unique to each person. This can include a person’s email address, home address, SSN, and tax records. | PII should be kept secure to yourself and not shared with anyone, including family members (unless you are a minor), as ANYONE can steal your information, and your information being stolen can result in your life staying on pause for a long time. | Multi-Factor Authentication: This is a very secure and now more commonly used type of authentication which requires a second step of authentication, such as entering a texted or emailed code. | Phishing: A method to motivate someone to click and receive some sort of reward, prize, or information. This can then lead someone towards a malicious link. | Symmetric Encryption: Only one key is used to encrypt electronic information. | Asymmetric Cryptography: This uses a paired public and private key to encrypt/decrypt information and protect it from any unauthorized usage. | There are many usages of viruses and malware on the IoT to compromise your machine. | . 5.6 Blog Post Reflection: . 1. Describe PII you have seen on project in CompSci Principles: One of the primary examples of PII I have seen in projects in Comp Sci are user account login information. This includes usernames and passwords to accounts on websites which contains important information for users. 2. What are your feelings about PII and your personal exposure?: I feel that PII is extremely important, and personal exposure is a very real risk in today’s world. This is why it is very important that we have secure passwords and that we keep our own personal information close to ourselves. 3. Describe good and bad passwords? What is another step that is used to assist in authentication.: Good passwords are passwords that contain a sort of complexity. This means having a password length of at least 8-10 characters, and having a variety of special characters, uppercase and lowercase letters, and numbers in the password so that the passwords are difficult to crack. Bad passwords are passwords that are easy to guess and are of very short length. Another step used to assist in authentication is multi-factor authentication, which sets two steps to confirm a user’s account creation, login, or deletion. Another step that helps with authentication is the enforcement of password complexity when a user creates an account, to make sure that passwords are secure upon creation. 4. Try to describe Symmetric and Asymmetric Encryption.: In symmetric encryption, only one key is used for both encryption and decryption of information. In asymmetric encryption, there are two keys: one public key and one private key. These keys are paired and are a more secure method of authentication. 5. Provide an example of encryption we used in AWS Deployment: An example of encryption we utilized in AWS Deployment was Certbot. Certbot converts our sites from HTTP –&gt; HTTPS Authentication, which uses SSL encryption to encrypt requests and responses. 6. Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques.: I have never learned about a phishing scheme the hard way, since I always prioritize keeping my passwords secure and following proper steps to not fall prey to such attacks which can compromise my personal information. One very common phishing technique is through the email phishing technique, where a common/unsuspicious subject is used and an email is sent with an unknown email address, asking you to open a link to give information, or asking you to open a link which will download malware onto your system. 5.6 Extra Reflection &amp; Research: . I did a lot of research about password hashing and keeping secure passwords and other methods to stay safe. Here were some of my findings: . On most websites, to ensure that user data is safe, they make sure that when an individual creates an account, the password meets a minimum password length and complexity check (special characters, capital letters, numbers). I really thought that this would be useful and pretty cool to implement on my group’s CPT, especially with the relevance that cybersecurity has in our world today. . Research (source: https://web.dev/sign-in-form-best-practices/) . From research, one of the main things I found to combat this issue is to use the “type” attribute. Using the attribute, the code can identify which inputs for a username OR password have invalid characters or do not meet specific requirements. . Therefore, using this feature, our site can make a specific password invalid if it were to not have enough characters or not enough complexity (by our own standards). This is definitely something that we will look to work on. . Furthermore, using the example from the OOP Hacks from the APCSP site, there is a way to encode passwords so that they are not readable in plain text. SHA256, which was used in the example, is not nearly the most secure hashing type, so we will do some more research to see which encryption method is the best to be utilized and we will use that. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/02/12/blogpost5556.html",
            "relUrl": "/markdown/2023/02/12/blogpost5556.html",
            "date": " • Feb 12, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "Blog Reflection 5.3 & 5.4",
            "content": "5.3 Blog: . Google “What age groups use Facebook” vs “… TikTok”? What does the data say? Is there purposeful exclusion in these platforms? Is it harmful? Should it be corrected? Is it good business?: Based on the conversations we had in the classroom, it is clear that there is a wide age gap between the usage of both applications. Since Facebook was one of the first social media platforms, a greater majority of its users are adults and even some seniors. There are some high school/college students on Facebook, but the usage from this age group is definitely less than that of older adults. On the other hand, on TikTok, the opposite follows. The target age group includes young children, teenagers, and young adults. TikTok is on the newer side of social media platforms, and a majority of its features and UI is geared towards appealing to the newer generation of people. The exclusion of certain age groups on these social media platforms are purposeful for the social media companies, as they can reach their target audience. Their features are designed specifically for certain target age groups, which is why “exclusion” can help them. In my opinion, it should be corrected, as all age groups should be able to feel as comfortable as possible on all social media platforms. The exclusion of certain age groups might serve for good business for these platforms, as a large majority of the targeted age group may stay on their platform and attract more attention. . | Why do virtual assistants have female voices? Amazon, Alexa Google, Apple Siri. Was this purposeful? Is it harmful? Should it be corrected? Is it good business?: One of the first ideas that comes to mind in regards to this subject is the fact that women have been stereotyped as “assistants”. I don’t think it was purposeful for many of these tech companies to have their virtual assistant devices voiced by females, but it was a trend/stereotype that has been bought into and adhered to over many generations. I think that it is somewhat harmful, as the continued use of female voices for virtual assistants does not break the stereotype, and women will continue to be placed under the category of “assistants” or “secretaries”. Therefore, it should be corrected, and both male and female voices should be utilized. I’m not sure whether it is good business, but it could be good business, as female voices may be more soothing to the ears, contributing to the appeal for consumers to buy the products. . | Talk about an algorithm that influences your decisions, think about these companies (ie FAANG - Facebook, Amazon, Apple,Netflix, Google): YouTube definitely has an algorithm based on the videos that they suggest to me based on my past watch history and current popular trends that I may not even be interested in. Furthermore, the tie in with YouTube and Google contributes to the algorithm, as some of the articles I read or things I search up on Google influence my YouTube suggestions. This algorithm impacts the videos that I watch everyday and the decisions and viewpoints I take on these videos. . | Reflection on HP Video: In the HP video, we see an African-American man who is trying to get the HP camera to focus in on his face, but it isn’t working. Then, one of his colleagues, a white woman, tries the same thing, and the computer’s camera focuses in on her. We had a lot of conversation about this in class, and we concluded that this likely wasn’t purposeful, but there are problems with this. Likely, there was a lack of diversity and lack of testing with diverse skin colors, which is why this bug has been released along with that HP computer’s camera. Nowadays, there is some more diversity in the workplace, especially in the tech industry, and that needs to continually increase. Testing for these types of features also require diversity, so that all skin colors have equal access to all computer features. . | EXTRA RESEARCH: . To analyze the issue at hand, I researched about statistics relating to diversity specifically in the tech industry. Here are some of the things that I found: . At Google, 83% of Google’s Tech employees are men, and 60% of their entire tech workforce is white. This shows that even at Google, one of the most prominent and “modern” tech companies in the entire world, they are not up to par with keeping diversity and producing a more variable workforce. | 83% of all tech executives are white. | StackOverflow, a very prominent developer tool, released an annual developer survey in 2016, which showed that 5.8% of the 55,128 responses came from women. | From these 3 statistics and the learning that we did in class, it is clear that diversity in the workplace is a raging issue. Not nearly enough big tech companies have addressed the issue and shown their commitment to the issue with results, and it is something that we must raise our voices about to truly see a change. . 5.4 Blog: . CompSci has 150 ish principles students. Describe a crowdsource idea and how you might initiate it in our environment?: A good crowdsource idea could be to go over important concepts for the AP exam, such as code snippets for making programs more efficient, and crowdsourcing our methods for attacking such questions. This can help us to gain more perspectives on how to go about certain programming issues and methodologies, and we can all grow as programmers. . | What about Del Norte crowdsourcing? Could your project be better with crowdsourcing?: A crucial crowdsourcing idea with the entirety of Del Norte can be related to providing consumer feedback for applications. For example, we can all release surveys about our products and ask for feedback on what the Del Norte students like and dislike. Then, we can utilize crowdsourcing within our computer science group of students to figure out what the general feedback looks like, and what things we can do to appeal to the large audience. Then, after we refine our projects based on feedback, we can crowdsource our projects to all students in our school, so that they can use the best product possible and improve their lifestyles in different ways with our products. . | What kind of data could you capture at N@tM to make evening interesting? Perhaps use this data to impress Teachers during finals week.: At N@tM, we can capture statistical data based on a number of metrics for our audience. Throughout the creation of our project, we have attempted to use consumer feedback to make our project better, so at N@tM, we can put together a survey (Google Forms) to ask students to rate our project on different scales. These scales can include how they liked our product interface, how useful they find the product, how likely they would be to use such a product if publicly accessible, and how likely they would be to recommend the product to their peers. Based on this feedback, we can crowdsource the information to our fellow computer science students and create a massive pool of data to analyze the general likes/dislikes and needs of Del Norte high students. . |",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/02/02/5354blogpost.html",
            "relUrl": "/markdown/2023/02/02/5354blogpost.html",
            "date": " • Feb 2, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "Project Blog",
            "content": "For the College Board performance tasks, it is required that we meet all of the parameters for the project. The project needs to be appropriate and has to be able to show our programming skills in a way that utilizes a writeup and video demonstration to show our program purpose and functionality, how we manage complexity, algorithms and procedures that we develop and utilize in our program, the testing of our program, and many other detailed descriptions that can show the grader that we are well-versed in our project and with the programming skills that are in the AP CSP curriculum. . For our Create Performance Task (group) we have been working on developing a news site that gives users up to date news updates with many cool, new features which current news sites currently don’t offer, such as state of the art sports predictors, trackers, and analytics, places for YOU to update your own breaking news events and even local news which you would like to make the public more aware of, and the most secure algorithms implemented to keep user data safe. . Personally, I’ll likely be using either the Global Updates page or the account login/sign up page which I have been handling (mainly). I have to make sure that I am hitting every single one of the requirements on each of the scoring sections on the CPT rubric, and I think that I am making good progress towards that. I am already settled down on the program purpose and functionality, and this will be explicitly described in my writeup &amp; my video. Furthermore, I will be able to test it, and after creating the backend of the login/sign up pages and after it is fully functional, I will be able to go in-depth to describe the algorithms which were utilized, how complexity was managed using lists, and how my backend is secure and utilizes many different complex programming methodologies. . In the video, I will likely show a user signing up and creating an account and setting their own options and changing their preferences in their account page, such as their newsletter status or notification status or even changing their usernames or passwords. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/01/26/projectblog.html",
            "relUrl": "/markdown/2023/01/26/projectblog.html",
            "date": " • Jan 26, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "MCQ Test Reflection",
            "content": ". For this question, you had to select two options. I selected the first option right (A), but I incorrectly selected Option B. After looking at the question again, I realized that in Option D, there is a nested if-else statement which provides the same result as described initially by the question (val1 &amp; not val2), which option B does not do. . . For this question, again, I got one of the options correct (option C) but I did not select option B, which was the other correct answer. I did not realize that Option B was correct, because for each next entry, it increases the radius of the circle by 1 (which is supposed to happen as per the diagram), and it starts off with (4, 1, 0) as the initial integers stored which is the starting position of the first nested circle as shown in the diagram. . . For this question, I selected the option C (interchanging line 6 &amp; 7), but this would be incorrect, because both lines are in the for each loop and interchanging them will not impact any of the operations performed, and will result in the incorrect average value being calculated. Instead, the correct option was option D (interchanging lines 7 and 8), as this would allow for the average only being calculated once, therefore meeting the question requirements (reduced number of operations performed) while still reaching a correct answer. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/01/26/mcqreflection.html",
            "relUrl": "/markdown/2023/01/26/mcqreflection.html",
            "date": " • Jan 26, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "Reflection on 5.1 & 5.2",
            "content": "Big Idea 5.1 Beneficial and Harmful Effects . Harmful Effects of Computing: . Computing may lead to the application of AI in a majority of fields, which can put humans out of business. . | Computing can lead to the massive increase in bullying surfaces, including cyber-bullying, and can result in spam accounts spreading hate and other troll accounts. . | Computing can lead to the compromising of important PII, which can put people’s lives in danger. . | Positive Effects of Computing . We can optimize tasks that would take an extremely long time manually through computing. . | We can make resources that would take a very long time to distribute manually very easily distributable online and through computing platforms. . | Humans and computers can work together to put out products that have a positive impact on the world. . | CPT Application . For our CPT in specific, I feel that the positives outweigh the negatives. As humans, we are working together with the resources provided by modern day computing to put out a non-biased news platform which can provide state of the art features for users to interact with such as random facts and words being generated, adding news stories, and signing up for instant news updates from a platform without any political agenda. . What are pros/cons on internet blockers at router and lack of admin password on lab machines at school? . Internet blockers on school routers can be useful, as they can prevent students from going on sites that may be completely unrelated to school, allowing them to stay completely focused in the classroom. Furthermore, having internet blockers can prevent cyber attacks at school from unauthorized sites. Some of the cons of having internet blocked at school is that it may motivate some students to get around that blockage, and can result in even more harmful effects in relation to the students’ attention in their classes. As far as not having an admin password on lab machines at school, it is a good thing as it allows for easy access to school resources, but it may not be good as anyone can simply login to the computer and plant harmful viruses on the system or even swipe other another student’s credentials. . What concerns do you have personally about the digital divide? For yourself or for others. . Personally, I feel that the digital divide is already creating a large dent in human and societal interactions. We are becoming much too dependent on computers to do tasks for us, and we are getting glued to the screen instead of going outside and participating in face-to-face interactions like before. Without these human interactions, our society as a whole will become defunct and many tasks which we are currently able to accomplish will become much more complicated. . Talk about dopamine issues above. Real? Parent conspiracy? Anything that is impacting your personal study and success in High School? . I feel that dopamine issues are real. Yes, parents may obsess over it to the point where we feel that it is “fake news”, but dopamine being released from possibly harmful activities can be bad for us in the long run. For example, watching YouTube or playing video games can help us to release a lot of dopamine, as those activities provide us with a stress break, but doing too much of these activities can cause a drop in energy levels, a drop in productivity, and an overall smaller resolve to get up, get physical exercise, go outside, and talk to other people. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/01/26/blogpost5.1.html",
            "relUrl": "/markdown/2023/01/26/blogpost5.1.html",
            "date": " • Jan 26, 2023"
        }
        
    
  
    
        ,"post29": {
            "title": "Performance Task Scoring 3",
            "content": "Submission #1 . Reporting Category | Criteria | Parameters Met | Parameters NOT Met | Student Score | CB Score | Discrepancy? | . Program Purpose and Function | Video Input | Program Functionality | Output | . Written Response Describes the overall program purpose | Describes the overall program functionality | Describes the input and output of the program | . | Video The video showed the input (1) into the program from the user with the yes/no prompt, and the output (2) which showed the result based on the answer to the prompt. This input/output relationship showed the program functionality (3). All the video requirements were met. Written In the written response, the student talks about how the purpose of the program (1) is for &quot;entertainment&quot; and &quot;to make a decision&quot;. Then, it talks about the program&#39;s input &amp; output (2), where the user puts in either rock, paper, or scissors and gets an output of a win, loss, or draw based on that input. The program&#39;s functionality (3) is also described in detail, talking about how the program asks the user to put in an option (rock, paper, or scissors) and the computer chooses one of the random options to &quot;go against&quot; the user. Then, the two inputs are compared to show an output to the user (win, loss, or draw), and the program allows the user to play another game. All the written response requirements were met. | All parameters were met. | 1 | 1 | No discrepancies. | . Data Abstraction | Written Response Includes two program code segments, one showing data stored in a list and the other showing the data in the list being used for the program&#39;s purpose | Identifies name of variable representing the list | Describes what data in the list represents in the program | . | The program shows two program code segments (1), as it shows the data stored in the RPS list (2). The response also talks about what the data in the RPS list represents in the program, which are the options the computer can use as its input to put up against the user input. | The program DOES NOT show the data in the list being used for the program&#39;s purpose. Instead, the second code segment shows a series of if and elif statements that are used to show the final user output based on the user vs computer inputs. | 0 | 0 | No discrepancies. | . Managing Complexity | Written Response Includes a program code segment showing a list to manage program&#39;s complexity | Explains how the named, selected list manages complexity by explaining why the program code couldn&#39;t be written or how it would be written differently without using the list. | . | The written response goes in-depth talking about how the program could be written without lists (1), with each potential computer input being coupled with a number. The program would pick a number from 1-4 randomly, and then based on the number, the corresponding input would be chosen for the computer. | Though the response shows the program code segment with a list (list RPS), it does not show how the RPS list manages the program&#39;s complexity. | 0 | 0 | No discrepancies. | . Procedural Abstraction | Written Response Includes two program code segments, one showing a student developed procedure with at least one parameter impacting program functionality and another showing where that procedure is being called. | Describes what the identified procedure does and how it contributes to overall program functionality | . | One of the program code segments shows the usage of student-developed procedure rpsGame with a parameter impacting program functionality (1). In the second code segment, it shows the rpsGame procedure being called (2) with rpsGame (yourPlay). Then, the response talks about how rpsGame works with the program, and how it &quot;allows for the program to execute smoothly&quot;, therefore showing how it contributes to overall program functionality (3). | All parameters were met. | 1 | 0 | CB didn&#39;t find &quot;allows for the program to execute smoothly&quot; to be a valid explanation of how it contributes to overall program functionality. | . Algorithm Implementation | Written Response Includes a program code segment of a student-developed algorithm that includes sequencing, selection, and iteration. | Explains with detailed steps how the algorithm works so that even someone else could recreate it. | . | There is a program code segment shown with the student-developed algorithm within the rpsGame procedure which includes sequencing, selection, and iteration (1). Furthermore, it has detailed steps in the writeup showing how this algorithm works (2) with the computer randomly picking, saving the item, displaying the choice and figuring out the output and print using if and elif statements. | All parameters were met. | 1 | 1 | No discrepancies. | . Testing | Written Response Describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument causing a different piece of code in the algorithm to execute. | Describes the condition(s) tested by each call to the procedure. | Identifies the result of each call. | . | The written response talks about two calls to the procedure, each with a different argument. The first call is to yourPlay procedure with the &quot;rock&quot; argument and the computer input as &quot;paper&quot;, and the second call to the yourPlay procedure with the &quot;paper&quot; argument and the computer input as &quot;rock&quot; (1). Each of the calls mentioned in the response has the conditions which were tested explicitly mentioned (2), and it has the explicit results of both calls at the end (3). | All parameters were met. | 1 | 1 | No discrepancies. | . . Overall, this CPT submission was average, as it did not have any massive gaping holes, but 2-3 criterion which it did not meet, causing it to get a total score of a 3/6. . Submission #2 . Reporting Category | Criteria | Parameters Met | Parameters NOT Met | Student Score | CB Score | Comments | . Program Purpose and Function | Video Input | Program Functionality | Output | . Written Response Describes the overall program purpose | Describes the overall program functionality | Describes the input and output of the program | . | Video The video showed an input (1) (text entry) which resulted in the running of the program (2), which is a puzzle related game. The video showed the resulting output (3) of the blank spaces showing up and the number of lives left for the user based on the number of times they had guessed incorrectly. Written In the written response, the program purpose (1) is described as providing a game to help you learn new words to expand your vocabulary. This was written explicitly and non-vaguely. The program functionality (2) is described as showing the user inputting letters and the program either outputting the correct guess or showing that the user had lost a life for guessing the wrong letter. Finally, the written response explicitly talks about the user&#39;s input and the program&#39;s output, as it says, &quot;...shows the user inputting the letter &quot;p&quot; and the program outputting the letter in the spot&quot;. The written response also talks about how in general (not just in the video example), the user can input numbers, symbols, or multiple letters in one guess. | All parameters were met. | 1 | 1 | No discrepancies. | . Data Abstraction | Written Response Includes two program code segments, one showing data stored in a list and the other showing the data in the list being used for the program&#39;s purpose | Identifies name of variable representing the list | Describes what data in the list represents in the program | . | In the first snippet of the program code segment, it shows data being stored in a list (guessingWord) (1), and the second program code segment shows how that list is being called in a &quot;for&quot; statement to help the program check if the user&#39;s input matches the variable letter from the list. The name of the variable representing the list is shown and written as &quot;letOfGuessWord&quot; (2), and following the two program code segments, the written response explains the data that is in the list (individual letters of the word the user is trying to guess) (3). | All parameters were met. | 1 | 1 | No discrepancies. | . Managing Complexity | Written Response Includes a program code segment showing a list to manage program&#39;s complexity | Explains how the named, selected list manages complexity by explaining why the program code couldn&#39;t be written or how it would be written differently without using the list. | . | In the written response, the program code segment is shown which helps to manage the program&#39;s complexity, which is by storing every letter of the word that the user has to guess. This segment goes through each letter of the word in the list and determines the full length of the word, and this allows for the program to handle words with a larger number of characters (more complexity with an easy list utilization) (1). The written response also explicitly talks about how the data in the list is &quot;vital&quot; to the program, and how the program without the letOfGuessWord list would become very inefficient, as each letter of the word the user has to guess would have to become its own separate variable, therefore making the utilized for loop much more complicated (2). | All parameters were met. | 1 | 1 | No discrepancies. | . Procedural Abstraction | Written Response Includes two program code segments, one showing a student developed procedure with at least one parameter impacting program functionality and another showing where that procedure is being called. | Describes what the identified procedure does and how it contributes to overall program functionality | . | The written response shows the guessWords procedure in one program code segment with a parameter impacting the program&#39;s functionality, and in the other code segment, it shows the guessWords procedure being called by the onEvent parameter (1). Following the two code segments, the written response talks about how this function works, which is by comparing the letters of the word the user is trying to guess with the letter that the user is inputting, and how the function either takes a life away for guessing the wrong letter or outputting the letter if it is correct. | All parameters were met. | 1 | 1 | No discrepancies. | . Algorithm Implementation | Written Response Includes a program code segment of a student-developed algorithm that includes sequencing, selection, and iteration. | Explains with detailed steps how the algorithm works so that even someone else could recreate it. | . | The student-developed algorithm, titled &quot;guessWords&quot;, is pictured in a program code segment in the written response which also contains sequencing, selection, and iteration (1). Furthermore, in section 3. c. iv, the student THOROUGHLY explains how that program code segment works and how the guessWords algorithm works specifically, and I really felt that based on the quality of the explanation, I would be able to recreate it (2). | All parameters were met. | 1 | 1 | No discrepancies. | . Testing | Written Response Describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument causing a different piece of code in the algorithm to execute. | Describes the condition(s) tested by each call to the procedure. | Identifies the result of each call. | . | The written response describes the two calls to the procedure, the first with a user input &quot;1&quot; and the word that the user trying to guess being &quot;hello&quot;, and the second call with the user inputting the letter &quot;h&quot; when the word the user is trying to guess is &quot;hello&quot; again (1). Following this, the written response explicitly states the conditions being tested by each call to the procedure, which is from line 49 in the student&#39;s program, where the if statement is comparing the user input to all the letters from the randomly-generated word &quot;hello&quot; (2). Finally, the written response identifies the result of each of the calls, and the results seem to be accurate. | All parameters were met. | 1 | 1 | No discrepancies. | . This CPT submission was outstanding. It thoroughly met all of the criteria and standards set up by College Board, and it didn’t require the reader to have to dig deep to find out where they satisfied each of the criterion for each of the 6 sections. . SUBMISSION #3 . Reporting Category | Criteria | Parameters Met | Parameters NOT Met | Student Score | CB Score | Comments | . Program Purpose and Function | Video Input | Program Functionality | Output | . Written Response Describes the overall program purpose | Describes the overall program functionality | Describes the input and output of the program | . | Video The video showed the program functionality (2), and it showed how the input was found with a dropdown bar of the names of the states, and the output was the picture of the state flag coupled with facts about the state (1, 3). Written Response The written response talks about how the program purpose is to provide the user with information about the US states, and how it is mainly to help with memorization or to learn something new (1). The program functionality is described (2) as the user selecting whichever US state they would like to learn more about, and being shown a screen with all of the information and statistics about the chosen state. Finally, the written response explicitly write about the input and output of the program, the input being what the user selects from the dropdown menu and the output being the screen showing the state flag and information based on that input. | All parameters were met. | 1 | 1 | No discrepancies. | . Data Abstraction | Written Response Includes two program code segments, one showing data stored in a list and the other showing the data in the list being used for the program&#39;s purpose | Identifies name of variable representing the list | Describes what data in the list represents in the program | . | The name of the list is shown as &quot;stateList&quot; (2). The data in the list is written to represent all of the information the user will see (output) based on the state that they select (3). | There are NOT two program code segments relating to the list, there is only one program code segment showing the data in the list, but there is no shown code segment which shows the data in the list being used for the program&#39;s purpose. | 0 | 0 | According to the CB scoring, the 3rd criterion (describing what data in the list represents in the program) was also not met, contrary to what I thought. CB saw that the description of the list provided in the written response was inaccurate, as it only represents the state name, not the output given on the screen as it stated. | . Managing Complexity | Written Response Includes a program code segment showing a list to manage program&#39;s complexity | Explains how the named, selected list manages complexity by explaining why the program code couldn&#39;t be written or how it would be written differently without using the list. | . | The written response has a program code segment showing the list to manage the program&#39;s complexity (1). | The written response does not go into depth explaining HOW the list manages complexity or how the program would specifically work without the list. The written response talks about how everything would be &quot;complex&quot; and &quot;take a long time&quot;, which does not give any insight to the reader, therefore not meeting this criterion. | 0 | 0 | No discrepancies. | . Procedural Abstraction | Written Response Includes two program code segments, one showing a student developed procedure with at least one parameter impacting program functionality and another showing where that procedure is being called. | Describes what the identified procedure does and how it contributes to overall program functionality | . | There is a program code segment with the updateScreen procedure. | There is no parameter impacting program functionality shown in the written response. The second program code segment does not show the updateScreen procedure being called. The written response does not talk about how the procedure actually contributes to the overall program functionality, and whatever explanation the student provided was very general. | 0 | 0 | No discrepancies. | . Algorithm Implementation | Written Response Includes a program code segment of a student-developed algorithm that includes sequencing, selection, and iteration. | Explains with detailed steps how the algorithm works so that even someone else could recreate it. | . | The updateScreen student-developed algorithm is shown in a program code segment, and it includes sequencing and selection. The written response also talks about how updateScreen contributes to the overall program functionality, saying that it uses elif statements with the algorithm working through these statements to find if the state matches with the user input. | There is no iteration incorporated with the updateScreen algorithm in the shown program code segment. | 0 | 0 | Contrary to what I thought, CB found that the explanation regarding what the procedure does and how it contributes to overall program functionality was &quot;partial&quot;, and that the response does not talk about the index value being set based on the value for each US state in the dropdown menu. | . Testing | Written Response Describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument causing a different piece of code in the algorithm to execute. | Describes the condition(s) tested by each call to the procedure. | Identifies the result of each call. | . | Each of the calls passes a different argument causing a different program code segment to execute. | The written response only talks about calls FROM the stateInput procedure, not TO the stateInput procedure. Furthermore, the explanation for the &quot;conditions&quot; are not really the conditions being tested by the call, they are just things that the user is doing on the program. Finally, the result of each call is not identified properly. | 0 | 0 | No discrepancies. | . Overall, this CPT project submission earned a 1/6, which isn’t too good. It hit some criterion here or there throughout, but it never met all of the requirements besides in the first category, resulting in this project’s 1/6. . Submission #4 . Reporting Category | Criteria | Parameters Met | Parameters NOT Met | Student Score | CB Score | Comments | . Program Purpose and Function | Video Input | Program Functionality | Output | . Written Response Describes the overall program purpose | Describes the overall program functionality | Describes the input and output of the program | . | Video The video shows the program being run, as in the program functionality (2), and it shows the user&#39;s input and output (1, 3) as the user pressing keys, and the output being the movement of the boat and the user&#39;s score based on the keys that the user is pressing. Written Response The written response talks about the overall program purpose being to make people less bored by simulating a fishing game which tracks the user&#39;s score (1), and describes the overall program functionality as the fishing gameplay with the boat movement and how the hook and scorekeeping works in the game (2). Finally, the user input and output is described, with the input being the keys that the user is inputting, and the output being the movement of the boat based on those inputs (3). | All parameters were met. | 1 | 1 | No discrepancies. | . Data Abstraction | Written Response Includes two program code segments, one showing data stored in a list and the other showing the data in the list being used for the program&#39;s purpose | Identifies name of variable representing the list | Describes what data in the list represents in the program | . | The written response shows two program code segments, one of the code segments showing the list fishTypes, and the other program code segment showing that fishTypes list being used for the program&#39;s purpose (when I receive End statement) (1). The name of the variable representing the list is identified to be fishTypes (2), and the written response describes that the fishTypes list represents the amount of fish that have been caught (3). | All parameters have been met. | 1 | 1 | No discrepancies. | . Managing Complexity | Written Response Includes a program code segment showing a list to manage program&#39;s complexity | Explains how the named, selected list manages complexity by explaining why the program code couldn&#39;t be written or how it would be written differently without using the list. | . | There is a program code segment shown in the written response which shows the fishTypes list being used to manage the program&#39;s complexity (1). Then, there is an explanation about how fishTypes manages the program&#39;s complexity by keeping all of the data in &quot;one easy list&quot;, and how without the list, the program would have to store multiple variables for each fish and each separate amount of fish that have been caught, and this would be &quot;unnecessarily longer&quot; and more tedious (2). | All parameters were met. | 1 | 1 | No discrepancies. | . Procedural Abstraction | Written Response Includes two program code segments, one showing a student developed procedure with at least one parameter impacting program functionality and another showing where that procedure is being called. | Describes what the identified procedure does and how it contributes to overall program functionality | . | There are two program code segments, one showing the student-developed procedure &quot;clone+movement+range&quot; with multiple parameters impacting program functionality. There is another program code segment where this procedure is being called (1). Furthermore, the response talks about what this procedure does and how it functions within the program, and how it contributes to overall program functionality by making it harder to catch a fish sprite with the hook, since because of the procedure, it moves in random spurts at different heights and speeds (2). | All parameters were met. | 1 | 1 | No discrepancies. | . Algorithm Implementation | Written Response Includes a program code segment of a student-developed algorithm that includes sequencing, selection, and iteration. | Explains with detailed steps how the algorithm works so that even someone else could recreate it. | . | The written response includes the student-developed algorithm, &quot;clone+movement+range&quot;, which includes sequencing, selection, and iterations (1). Furthermore, there are detailed steps about how the algorithm works, describing that the clone moves to a random position, causing the loop to begin until it touches the hook or until the game ends. There is an additional elif statement within this which causes the clone to revert back to a position based on if it touches the edge of the user&#39;s screen (2). | All parameters were met. | 1 | 1 | No discrepancies. | . Testing | Written Response Describes two calls to the selected procedure identified in written response 3c. Each call must pass a different argument causing a different piece of code in the algorithm to execute. | Describes the condition(s) tested by each call to the procedure. | Identifies the result of each call. | . | There are two &quot;calls&quot; which are identified based on the procedure. The conditions being tested by each call to the procedure are present (2). | There are no &quot;different arguments&quot; which are being passed which execute different pieces of code in the algorithm (1). The result of each call is not identified in the written response (3). | 0 | 0 | No discrepancies. | . . Overall, this was a very good CPT submission, as it met all of the criterion to great depth besides the testing section. A 5/6 is a good score, and with a bit more depth and accuracy in the testing section, this would have been a 6/6 project. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/01/19/performancetaskscoring3.html",
            "relUrl": "/markdown/2023/01/19/performancetaskscoring3.html",
            "date": " • Jan 19, 2023"
        }
        
    
  
    
        ,"post30": {
            "title": "Password Hashing Research in Relation to CPT",
            "content": "When working on the frontend development of the CPT (the login and signup page), I did not implement a specific feature that is seen on many professional sites: password hashing and security. . . On most websites, to ensure that user data is safe, they make sure that when an individual creates an account, the password meets a minimum password length and complexity check (special characters, capital letters, numbers). I really thought that this would be useful and pretty cool to implement on my group’s CPT, especially with the relevance that cybersecurity has in our world today. . Research (source: https://web.dev/sign-in-form-best-practices/) . From research, one of the main things I found to combat this issue is to use the “type” attribute. Using the attribute, the code can identify which inputs for a username OR password have invalid characters or do not meet specific requirements. . Therefore, using this feature, our site can make a specific password invalid if it were to not have enough characters or not enough complexity (by our own standards). This is definitely something that we will look to work on. . Furthermore, using the example from the OOP Hacks from the APCSP site, there is a way to encode passwords so that they are not readable in plain text. SHA256, which was used in the example, is not nearly the most secure hashing type, so we will do some more research to see which encryption method is the best to be utilized and we will use that. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/01/16/passwordhashingcode.html",
            "relUrl": "/markdown/2023/01/16/passwordhashingcode.html",
            "date": " • Jan 16, 2023"
        }
        
    
  
    
        ,"post31": {
            "title": "Model and Object-Oriented Programming",
            "content": "HACKS (with comments in code) . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password, classOf, dob, age): # name, uid, and password are presets for each user self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._dob = dob self._age = age self._classOf = classOf # use getter to get information from the defined objects @property def name(self): return self._name # use setter to update name after we create the object @name.setter def name(self, name): self._name = name # getter, gets the email id from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha512&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result @property def classOf(self): return self._classOf @classOf.setter def classOf(self, classOf): self._classOf = classOf # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;, classOf: &quot;{self.classOf}&quot;, dob: &quot;{self.dob}&quot;, age: &quot;{self.age}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password}, classOf={self._classOf}, dob={self.dob}, age={self._age})&#39; # a name getter method, extracts date of birth from object @property def dob(self): return self._dob # a setter function, allows date of birth to be updated after initial object creation @dob.setter def dob(self, dob): self._dob = dob @property def age(self): return self._age @age.setter def age(self, age): self._age = age def tester(users, uid, psw, classOf, dob, age): result = None for user in users: if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) if __name__ == &quot;__main__&quot;: # # defining each user as an object u1 = User(name=&#39;Vardaan Sinha&#39;, uid=&#39;vardaansinha&#39;, password=&#39;vardsin123!&#39;, classOf=2024, dob=[2006, 9, 28], age= calculate_age(date(2006, 9, 28))) u2 = User(name=&#39;Aarav Arora&#39;, uid=&#39;aaravarora09&#39;, password=&#39;aa09123!&#39;, classOf=2024, dob=[2005, 12, 14], age= calculate_age(date(2005, 12, 14))) u3 = User(name=&#39;Eshan Sinha&#39;, uid=&#39;esinha22&#39;, password=&#39;eshans22!&#39;, classOf=2019, dob=[2001, 3, 22], age= calculate_age(date(2001, 3, 22))) u4 = User(name=&#39;Mihir Sampath&#39;, uid=&#39;msampath&#39;, password=&#39;123coco&#39;, classOf=2023, dob=[2005, 6, 9], age= calculate_age(date(2005, 6, 9))) # list defining. VERY important part of CPT rubric!! users = [u1, u2, u3, u4] # Dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Dictionary: &quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) . Dictionary: [{&#34;_name&#34;: &#34;Vardaan Sinha&#34;, &#34;_uid&#34;: &#34;vardaansinha&#34;, &#34;_password&#34;: &#34;sha512$mJ5EjyDwoYLQZ0v9$9a72cf42677cfaa18ab1e2250f6291c520c631b6d8400e5c65406d72a5fedd54d36268c077f7ca62292174ab0bbc8ab5d77b44a8298f6ea22a7a23b29bb75684&#34;, &#34;_dob&#34;: [2006, 9, 28], &#34;_age&#34;: 16, &#34;_classOf&#34;: 2024}, {&#34;_name&#34;: &#34;Aarav Arora&#34;, &#34;_uid&#34;: &#34;aaravarora09&#34;, &#34;_password&#34;: &#34;sha512$hLP6mSnrK4CDv5iY$65868cc23e04f34c49a16277301148ac4e980913779fa0aaccfeb21361b68aa36d9faade73778cba61751312706e456c172c9b7a5b2f7931f6c2c9b23813dfa9&#34;, &#34;_dob&#34;: [2005, 12, 14], &#34;_age&#34;: 17, &#34;_classOf&#34;: 2024}, {&#34;_name&#34;: &#34;Eshan Sinha&#34;, &#34;_uid&#34;: &#34;esinha22&#34;, &#34;_password&#34;: &#34;sha512$5yOiQlrPBRFpCalS$3e3f4b4f236877c29be1b0359fffafaaced2e49cda08635385e9366467affe73ca98538eaf0f03b7651a741d156df6e16f8670761c03efa107da20e715c82ac9&#34;, &#34;_dob&#34;: [2001, 3, 22], &#34;_age&#34;: 21, &#34;_classOf&#34;: 2019}, {&#34;_name&#34;: &#34;Mihir Sampath&#34;, &#34;_uid&#34;: &#34;msampath&#34;, &#34;_password&#34;: &#34;sha512$6xqjxn46k4kOay0f$4b9b111c8f8e816d93054dd4eeda2b2c93cd9924ff925820fe38aabeb8e39322221d142ce09751a027bf72c457455e8ed7e67cd1ca4d176199aa3576bc267299&#34;, &#34;_dob&#34;: [2005, 6, 9], &#34;_age&#34;: 17, &#34;_classOf&#34;: 2023}] . Start Code for Hacks . from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) dob = date(2006, 9, 28) age = calculate_age(date(2006, 9, 28)) print(age) . 16 . For an interesting change from the original code snippet for the hacks, I changed the password encoding for each of the users from sha256 to sha512. sha512 is a slightly faster cipher and adds a touch more security to the concealment of each of the user objects&#39; passwords. .",
            "url": "https://vardaansinha.github.io/FastPages/2023/01/16/PBL-model.html",
            "relUrl": "/2023/01/16/PBL-model.html",
            "date": " • Jan 16, 2023"
        }
        
    
  
    
        ,"post32": {
            "title": "Performance Task Scoring 2",
            "content": "Submission #1 . Reporting Category | Student Score | CB Score | Comments | . Program Purpose and Function | 0 | 0 | The writeup only mentions the functionality of the program and does not hit any of the other requirements for this section, therefore deserving a 0. | . Data Abstraction | 0 | 0 | Though the writeup touches on the abstraction and the purpose of the two lists in the program, it does not talk about how that data from the list is utilized for the program. | . Managing Complexity | 0 | 0 | The writeup provided an incredibly vague explanation of how the lists are used, and it does not talk about how the lists helped to reduce the complexity of the program itself. | . Procedural Abstraction | 0 | 0 | This deserves a 0, because though it talks about the code segment, it is not truly explained to the level it should be to get a 1. The functionality is also mentioned, but not in-depth. | . Algorithm Implementation | 0 | 0 | In the rubric, it mentions that the algorithmic implementation is supposed to include sequencing, selection, and iterations. The algorithm in this submissions&#39; program does not utilize all of those features, therefore, it gets a 0. | . Testing | 1 | 1 | All of the testing requirements are fulfilled and the results of the test are shown, and all of the necessary calls have been completed and showed in the writeup. | . . Submission #2 . Reporting Category | Student Score | CB Score | Comments | . Program Purpose and Function | 1 | 1 | The functionality of the program and the purpose of the program are both shown and tie in together, therefore it gets the point for this category. | . Data Abstraction | 1 | 1 | The writeup has two defined and explained code segments, and the use of the data in the code segments for the program is explained. It gets the point for this category. | . Managing Complexity | 1 | 1 | The writeup talks about how the list contributes to the program, and how it helps to manage the complexity of the program. Without the list, the code segment would be completely different and it would be a lot more difficult to accomplish the same task, and this is explained from this student&#39;s writeup. Therefore, it gets the point for this category. | . Procedural Abstraction | 1 | 1 | There is a student written procedure which is shown and described with its functionality. The procedure is shown to be a very major component of the program&#39;s functionality as a whole, so this point is deserved. | . Algorithm Implementation | 1 | 1 | The writeup has a thorough explanation of how the algorithm is implemented with the program and the use of sequencing, iterations, and selections. Therefore, it gets this point. | . Testing | 1 | 1 | The results of the two procedural calls are shown in the writeup, and it shows the outputs of the tests. This writeup satisfies all the needed components for the testing category, therefore it gets this point, completing the perfect 6/6 submission. | . Submission #3 . Reporting Category | Student Score | CB Score | Comments | . Program Purpose and Function | 0 | 0 | In the writeup, though it talks about the user input and output, the program&#39;s purpose and functionality do not exactly tie in with each other and are not described. Therefore, it cannot get this point. | . Data Abstraction | 1 | 1 | The writeup shows two explicit code segments, and the program has a list with data inside of it which is necessary to the program. Therefore, it gets the point. | . Managing Complexity | 1 | 1 | The writeup talks about how the data and the list are necessary for the program&#39;s functionality as a whole. It also describes alternative pathways for if lists were not used here, and it talks about how the list helps to manage the program&#39;s complexity, therefore, it gets the point. | . Procedural Abstraction | 0 | 1 | The writeup talks about the procedure in the program and how it contributes to the overall functionality of the program, but there is no explanation of the parameters of the procedure and what they do. CB seemed to disagree with this, giving the submission a 1/1 on this section. | . Algorithm Implementation | 1 | 1 | The functions are described, and the calling of the functions are are briefly mentioned. The algorithmic implementation, the most important part, is explained and how it contributes to the program is explained. | . Testing | 1 | 1 | Each of the parameters are described and the algorithm&#39;s usage and its testing is shown. Each of the inputs are shown and the outputs are the expected outputs, so this submission gets the point for this category. | . Submission #4 . Reporting Category | Student Score | CB Score | Comments | . Program Purpose and Function | 1 | 1 | The program&#39;s functionality and purpose are talked about, and the writeup shows the user input and the correlated output. | . Data Abstraction | 0 | 0 | The list is shown purposefully, and the writeup describes its usage in the entire program. At the same time, though, the alternative to using a list was pretty lame and did not seem thought out, therefore this should get a 0. | . Managing Complexity | 0 | 0 | The explanation for how the list is useful for the entire program is not as good as it can be, and it does not touch in depth on how it manages the complexity of the program. | . Procedural Abstraction | 0 | 1 | I thought that since there are no explicit parameters talked about in the writeup, this should get a 0. CB saw it otherwise and mentioned the usage of the specific algorithm and its relation to the entire program, so it gave the submission a 1/1 in this category. | . Algorithm Implementation | 1 | 1 | The use of sequencing, iterations, and selections are shown and explained, and the algorithm is explained with incredible detail, showing how crucial it is to the functionality of the program as a whole. | . Testing | 0 | 0 | The writeup does not show us any tested algorithms and any tested user inputs, therefore it does not meet the main requirements for this category. | . Reflection: . Overall, I was pretty accurate with my grading, but there were a few spots, especially in the procedural abstraction section, where I need to be more clear on the rubric and the requirements. For each of the sections, I need to make sure that my Performance Task meets each of the requirements, as College Board shows us that they will give a 0 if even a small part of one requirement in the section is not met. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/01/11/performancetaskscoring2.html",
            "relUrl": "/markdown/2023/01/11/performancetaskscoring2.html",
            "date": " • Jan 11, 2023"
        }
        
    
  
    
        ,"post33": {
            "title": "Performance Task Scoring 1",
            "content": "Submission #1 . Reporting Category | Student Score | CB Score | Comments | . Program Purpose and Function | 1 | 0 | In the 14 second video, I thought that the program showed the input (command that was being run) and the output of the program, which was the table of values for each of the triangle sides. In the writeup, it also talked about the program functionality. In College Board&#39;s explanation for giving this submission in a 0 in this category, they talked about how the response did not &quot;specify the program&#39;s purpose&quot;. Since CB will give a 0 if even one part of the requirement is missing, this response received a 0. | . Data Abstraction | 1 | 1 | There were two program code segments, the name of the variable which represented the list was used in the writeup, and in the writeup, the submission talked about the data which was in the sides list and what role it played in the program. It talks about how the program wouldn&#39;t have worked without that list and its data. College Board agreed with this score. | . Managing Complexity | 0 | 0 | In the writeup, the submission had no mention of how the named list (sideIndex) managed complexity in the program. CB agreed with this assessment, and also gave the submission a 0/1 for this scoring category. | . Procedural Abstraction | 1 | 1 | The student-developed procedure is ratioCalculate, and there&#39;s one student-developed procedure and another code segment where that procedure is being called. In the writeup, the submission also talks about how that ratioCalculate procedure contributes to the functionality of the program. | . Algorithm Implementation | 1 | 1 | In the writeup, there is a program code segment which talks about the student-developed algorithm ratioCalculate, which includes all of the CB requirements. The writeup is very descriptive in regards to this algorithm, which is why CB also gave the submission a 1/1 in this category. | . Testing | 1 | 1 | This deserved a 1/1, since the writeup showed two calls to the procedure with different arguments, and the conditions which were tested for each of those calls were described. Finally, the response showed the results for each of those calls, and therefore, meeting all the requirements for this scoring section, CB also gave it a 1/1. | . . Submission #2 . Reporting Category | Student Score | CB Score | Comments | . Program Purpose and Function | 1 | 1 | In the video showing the program at work, it shows that there is the user input from the user putting the tiles on the grid, and the output through how the game is working. Then, it shows the simulation at work. In the writeup, the submission talks about the program&#39;s purpose, the functionality shown in the video, and the input/output of the program (explicitly written in writeup). CB agreed with this assessment and gave them a 1/1 as well. | . Data Abstraction | 1 | 1 | There are two different code segments which are shown in the writeup, which shows how data is being kept. It gives the name of the list (startGrid) and what is in the list. It meets all requirements, and I gave it a 1/1, as did CB. | . Managing Complexity | 1 | 1 | In the writeup (3.b.v), the submission talks about how doing the task with variables or another method would be incredibly complex, and then talks about how they used a list to manage that complexity. This is why I gave it a 1/1, and CB did as well. | . Procedural Abstraction | 1 | 1 | The replaceList procedure is talked about in the writeup, and in the writeup, it also talks about how the procedure contributes to the functionality of the program and its necessity. Therefore, it deserved a 1/1 and CB agreed. | . Algorithm Implementation | 1 | 1 | The submission talks about the replaceList procedure and the algorithmic implementation within it. The writeup is very specific in regards to the algorithm and the procedure that its located in, meeting all the requirements, so it deserved a 1/1. | . Testing | 1 | 1 | The testing deserved a 1/1, and CB agreed. The writeup talks about the 2 calls to the procedure which contributes to the execution of different code segments in the program. The writeup also talks about the conditions which are being tested in relation to the procedure call, and finally, the results of the 2 calls to the procedure. | .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2023/01/05/performancetaskscoring.html",
            "relUrl": "/markdown/2023/01/05/performancetaskscoring.html",
            "date": " • Jan 5, 2023"
        }
        
    
  
    
        ,"post34": {
            "title": "Section 16 Hacks",
            "content": "Answer table . Comment on this blog post to submit your hacks. Fill out the table with your full name and the LETTER of each answer for every question. In order to receive any credit you must fill out the answer table according to the directions! Each question is worth .1 points. To get &gt;0.9/1 you can show your understanding in the area labeled extra. . Question Answer . Vardaan Sinha | | . 1 | N/A | . 2 | N/A | . 3 | C | . 4 | B | . 5 | C | . 6 | A | . 7 | A | . 8 | N/A | . 9 | B | . Extra . Show your understanding. You could make a simple simulation, define vocab, etc. . EXTRA: . Based on the lesson today about simulations, I did some more research about simulations in the Python programming language. . When I did this research, I landed upon a Python package known as &quot;SimPy&quot;. This Python framework allows for users to create virtual simulations that can solve problems, such as decidable/undecidable problems and even optimization problems, which focus on making a simulation more efficient. . The below line shows how you can set up the SimPy environment at the start of a program: . NOTE: You have to install the simpy package beforehand. This can be done using pip (which we have used prior in APCSP) with the command: . python3 -m pip install simpy . env = simpy.Environment() . WHAT QUESTIONS . 3: What is not a reason to use a pseudo-random number generator when making a simulation? . A: To mock imperfections from the real worldB: To save resources C: To make the simulation more accurate . 4: Which of the following is the least likely factor to be removed from a flight(air traffic) simulation for functionality? A: WeatherB: Other aircraftC: Imperfections on aircraft . Experiment/Calculation or Simulation . 5: What is not (usually) a difference between a experiment and a simulation? A: Resources and time needed B: Factors considered C: Situation considered . For each situation answer: Would it make more sense to use a simulation or a experiment/calculation? . 6: A car company needs to know how safe it&#39;s customers will be if it&#39;s new car crashes A: Simulation B: Experiment/calculation . 7: A environmental group wants an accurate guess on the impact the greenhouse effect will have on the environment A: Simulation B: Experiment/calculation . 9: A teacher want&#39;s to find the average score from a final A: Simulation B: Experiment/calculation .",
            "url": "https://vardaansinha.github.io/FastPages/2022/12/15/hacks.html",
            "relUrl": "/2022/12/15/hacks.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Sections 14-15 Hacks",
            "content": "Reflection: . In the lesson, I learned about software libraries, the use for existing code segments, APIs, and the importance of documentation for these APIs and software libraries. First off, I learned that it is very useful to use existing procedures in code, as this can make the creation of the program more efficient. Furthermore, it is important to accompany these procedures with the proper documentation, which explains what the procedure is doing and what the program is attempting to accomplish. Furthermore, I also learned more about the &quot;random&quot; module that is often used in Python. It can serve as a random number generator and a number shuffler as well, which is very cool. . Multiple Choice: . What does random (a,b) function generate? | A. A random integer from a to b exclusive . B. A random integer from a to b inclusive . C. A random word from variable a to variable b exclusive . D. A random word from variable a to variable b inclusive . Option B is the correct answer, since the random function is used to generate a random number from a range a to b, and the random number can be the bounds of that range as well, therefore rendering it INCLUSIVE. . What is x, y, and z in random.randrange(x, y, z)? | A. x = start, y = stop, z = step . B. x = start, y = step, z = stop . C. x = stop, y = start, z = step . D. x = step, y = start, z = stop . Which of the following is NOT part of the random library? | A. random.item . B. random.random . C. random.shuffle . D. random.randint . Short Answer Questions: . Libraries allow us to use already tested and functional code in our own procedures. This creates a more efficient programming process. . | This procedure goes through a series of steps. First of all, the random module is imported to be used in this procedure. Then, an input is provided for the user to input everyone&#39;s names. The &quot;names&quot; variable is then defined as everyone&#39;s names split with a comma in between. Then, there is a variable defined as &quot;num_items&quot;, which measures the number of names inputted. . | Then, the random module comes into place by selecting a random number in between 0 and the number of names - 1, inclusive. Then, in order to figure out the person who will pay the bill, the numbers corresponding to the names are randomized, and the name of the person that the code lands on is printed at the end. . Coding Challenges . import random namesList = [&quot;Safin&quot;,&quot;Aarav&quot;,&quot;Boomin&quot;,&quot;G&quot;,&quot;Navan&quot;,&quot;Shaurya&quot;,&quot;Justin&quot;,&quot;Theo&quot;,&quot;James&quot;,&quot;Mihir&quot;,&quot;Aryan&quot;,&quot;Karthik&quot;,&quot;Rohan&quot;,&quot;Rohit&quot;,&quot;Zach&quot;] sample_namesList = random.sample(namesList, k=5) # here, k = number of items to select print(f&quot;you got these 5 random names: {sample_namesList}&quot;) . you got these 5 random names: [&#39;Aarav&#39;, &#39;Shaurya&#39;, &#39;G&#39;, &#39;James&#39;, &#39;Rohan&#39;] . import random player1= random.randrange(1,6) player1t2 = random.randrange(1,6) print(&quot;Player 1 landed on a&quot;, player1, &quot;and&quot;, player1t2, &quot;adding up to:&quot;, player1+player1t2) player2 = random.randrange(1,6) player2t2 = random.randrange(1,6) print(&quot;Player 2 landed on a&quot;, player2, &quot;and&quot;, player2t2, &quot;adding up to:&quot;, player2+player2t2) player1score = player1 + player1t2 player2score = player2 + player2t2 if player1score &gt; player2score: print(&quot;Player 1 is the winner.&quot;) elif player1score == player2score: print(&quot;It&#39;s a tie.&quot;) else: print(&quot;Player 2 is the winner.&quot;) . Extra Credit Try . import random directions = [&quot;up&quot;, &quot;down&quot;, &quot;left&quot;, &quot;right&quot;] start_move = random.choice(directions) start_point = random.randint(1,25) end_point = random.randint(1,25) print(&quot;You are starting in this direction: &quot; + start_move) print(&quot;You will start at this block number: &quot; + str(start_point)) print(&quot;Your mission if you choose to accept it is to make it to this block: &quot; + str(end_point)) print(&quot;The obstacles are in the following areas: &quot;) i = 1 while i &lt;= 6: obstacle = random.randint(1,25) print(str(obstacle)) i += 1 . You are starting in this direction: up You will start at this block number: 7 Your mission if you choose to accept it is to make it to this block: 20 The obstacles are in the following areas: 11 12 4 5 24 17 . I wasn&#39;t really sure where to go from here, so this was my attempt. .",
            "url": "https://vardaansinha.github.io/FastPages/jupyter/2022/12/14/section14hacks.html",
            "relUrl": "/jupyter/2022/12/14/section14hacks.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Extra Research Related to Sections 12-13",
            "content": "In sections 12-13, we learned a lot about procedure calls. . After doing some research, I found that there are also a few different types of procedure calls, both using lists of parameters. These types of procedure calls can be more applicable to the workings of the operating systems that we use on our devices everyday, especially Windows. Below, I’ll give a brief overview of what I read about. . Type 1: Local Procedure Calls: . To simplify this concept as much as possible, local procedure calls are utilized by ports on our system. Each port on our system is assigned to a different program. In this context, procedure calls are used by each port to essentially call each other and communicate. For example, if a port number is already taken up for a particular program, it communicates that with the other programs to make sure that that port is no longer usable elsewhere. . Another local procedure call machination comes through file mapping. This is mostly related to file sharing, where files are being shared across applications/processes. Procedure calls are very necessary in this case, as each process needs to call the other in order to effectively receive the file/multiple files that are being shared. . Type 2: Remote Procedure Calls: . Remote Procedure Calls are especially useful on Windows machines. On Windows, Remote Desktop is an application that allows for one system to connect to another system in order to transfer files, share settings, etc. . Remote procedure calls allow for this systems communication to take place. From each system calling each other (client to server), the client waits for a response from the server, and then the necessary data is unpacked once a response is received. . Overall, we can see that the concept of algorithmic procedure calls stretches far beyond the constraints of Python programming, and is a very interesting and essential programming principle. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2022/12/11/extrastuff.html",
            "relUrl": "/markdown/2022/12/11/extrastuff.html",
            "date": " • Dec 11, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Sections 12-13 Hacks",
            "content": "3.12 Hacks Part 1 . Problem 1: Qais is writing code to calculate formulas from his math class. He&#39;s currently working on a procedure to calculate average speed, based on this formula: . Average speed = Total Distance/Total Time . Highlight which of these is the best procedure for calculating and displaying average speed: . PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (distance/time) } PROCEDURE calcAvgSpeed (distance) { DISPLAY (distance/time) } PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (time/distance) } . Explanation: Since the first option uses the correct formula for average speed (distance over time) and the two parameters are properly utilized (distance and time), that would be the best procedure for calculating and displaying average speed. . Problem 2: James Hunter is looking through his classmate&#39;s program and sees a procedure called heightenEmotions: PROCEDURE heightenEmotions(myEmotion). That procedure manipulates strings using two built-in procedures, CONCAT for concatenating two strings together, and UPPER for converting a string to uppercase. . James Hunter then sees this line of code: . heightenEmotions(&quot;im mad&quot;) . After that line of code runs, will nothing be displayed? . A. True B. False . Explanation: Nothing is going to be displayed, since there is no DISPLAY(__) line in the program. . Problem 3: Which of these code snippets successfully calculates and stores her total footprint? Highlight 2 answers. . 1. totalFootprint ← calcFlightFootprint(2451, 118) + calcFlightFootprint(3442, 252) . totalFootprint ← calcFlightFootprint(2451, 118 + 3442, 252) | 3. totalFootprint ← calcFlightFootprint((2451, 118) + (3442, 252)) . laNyCarbon ← calcFlightFootprint(2451, 118) nyLondonCarbon ← calcFlightFootprint(3442, 252) totalFootprint ← laNyCarbon + nyLondonCarbon | Explanation: The first code snippet works, since the total footprint is outputted by adding the two flight&#39;s footprints separately and then adding them together. Then, the third code snippet also works, because it is adding the two components with each other from both flights, setting it as the entire &quot;calcFlightFootprint&quot;, and then showing it as the &quot;totalFootprint&quot;. . 3.12 Hacks Part 2 . Problem 1: . Find a. . c = 9 . b = 9 * 9 = 81 . a = b c = 81 9 = 729 . Problem #2: . Find the cost. . &#39;Temp&#39; becomes equal to 110 (100 + percent taxed, and the percent taxed is 10%.) . Then, it is divided by 100. 110/100 = 1.1 . Then, to find the final cost, the initial cost ($173) is multiplied by 1.1, which yields **$190.30**. . Problem #3: . Find the temperature in degrees Celsius. . Initial Temperature: 103 degrees Fahrenheit . 103 - 32 = 71 . 71 x (5/9) = 39.44 degrees Celsius . 3.13 Hacks . def replaceRByards(toprbyardspg, currentrbyards, totalGames): if ((toprbyardspg/totalGames) &lt; (currentrbyards/totalGames)): toprbyardspg = currentrbyards print(toprbyardspg) replaceRByards(100, 1260, 12) . 1260 . PROCEDURE aPlus() { if (canMoveForward): moveForward else (canMoveRight): rotateRight moveForward if (canMoveLeft): rotateLeft moveForward } . Problem 3: Which is the correct way to define the name of a procedure? . A. PROCEDURE MYLIST B. PROCEDURE MyList C. procedure mylist . Explanation: Option B is definitely the right answer, as the procedure name is supposed to have some capital letters (not all capitals), and the word procedure should be in all caps. . PROCEDURE greenSquare { rotateLeft moveForward moveForward moveForward moveForward moveForward moveForward rotateLeft rotateLeft rotateLeft } .",
            "url": "https://vardaansinha.github.io/FastPages/jupyter/2022/12/11/caleb.html",
            "relUrl": "/jupyter/2022/12/11/caleb.html",
            "date": " • Dec 11, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Hacks 4, 6, and 9.",
            "content": "These are the images for my hacks that were not loading onto my notebook: . . . .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2022/12/10/hacks469.html",
            "relUrl": "/markdown/2022/12/10/hacks469.html",
            "date": " • Dec 10, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Extra Research Sections 9-11",
            "content": "Based on some additional research on the binary searching algorithm, I found out that this method is used in many other different programming languages as well, not JUST Python. . Through this research, I looked at how binary searching is done in C. . For some context, C and Python have a few differences: . C is statistically typed, while Python is dynamically typed. The difference between the two is that statistically typed languages do NOT check types during code execution (is established before running a program), which allows for better runtime performance. | C does not have complex data structures like Python does. | Testing and debugging in C is slightly harder than it is in Python. | . Analysis: . . In this program, the most important line is seen in line 4. It says, “int i, low, high, mid, n, key, array[100];”. . Breaking this down, we can see that there is a clear array of values being set. the “i” is used to iterate through that array. Then, drawing some similarities to the lesson about binary searching, we see that there is, low, high, and middle. The “low” value includes the first array index value, the “high” value includes the high array index value, and the middle is the middle index value, which we have experience in calculating (high + low all divided by 2). Then, we see that there is an “n”. This is the number of elements that are in the set array. Finally, “key” is the element that is being searched. . Furthermore, there is some utilization of previous concepts that we have learned in AP CSP. First of all, we see that this program has utilized different types of loops to achieve the final result. . First of all, we see a for loop being used. This for loop is needed in order to store the number of elements in the array into the defined variable ‘n’, and the elements are received by the program from the user. . Second of all, we also see a while loop being used. This loop checks if the lowest array index value is less than the highest array index value (as defined in line 4). This while loop also checks that the middle array index value is less than the key value. . If the key is greater than the middle array index value, the middle value has one added to it. Then, we keep going until the value is printed and the loop is exited. . Now, drawing another similarity to our hacks from sections 9-11, we see that it is necessary to sort the array beforehand. To perform a binary search in C, this array of values that the user inputs must be sorted, otherwise the binary search cannot be performed. . TAKEAWAY: . Each coding language has its separate workarounds, but there are many concepts, such as the binary search, iterations, and other basic programming concepts which overlap. . Each language can help us to better learn another language and broaden our knowledge. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2022/12/10/extraworkgroup5.html",
            "relUrl": "/markdown/2022/12/10/extraworkgroup5.html",
            "date": " • Dec 10, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Sections 9-11 Hacks",
            "content": "Hack #1 . if (isCold or isRaining) { stayInside &lt;-- True } else { stayInside &lt;-- False } . Hack #2 . import random # This is necessary, as this program is supposed to utilize a random number generator to select a random number from 1 to 10. attemptCount = [] i = 1 # Initial attempt count while i &lt;= 4: attemptCount.append(random.randint(1,10)) i = i + 1 print(&quot;Attempts: &quot;, attemptCount) print(&quot;&quot;) print(&quot;Your FINAL score is:&quot;, max(attemptCount)) . Attempts: [6, 9, 4, 5] Your FINAL score is: 9 . Hack #3 . { if MoveForwardPossible { moveForward } elif { MoveRightPossible { moveRight } } elif { MoveLeftPossible { moveLeft } } } . Hack #4 . Images shown in post (refer to post) . Hack #5 . To find 69, the list would be iterated through until the number 69 is found. This would take 7 iterations. . Using a binary search instead, this process would be much more efficient. The search would start from the middle index, then going to the first and last index and dividing by two. This process goes through until the number 69 is found. . Hack #6 . Images shown in post (refer to post) . Hack #7 . [&quot;Market&quot;,&quot;Walmart&quot;,&quot;store&quot;,&quot;Target&quot;,&quot;Ralphs&quot;] . Hack #8 . Binary search is much more efficient than a sequential search. This is because sequential searches move one by one, iterating through each object. Binary searches search the list of data exponentially, which takes a much shorter time. . Hack #9 . In this situation, you are searching for 11. The middle index would be 16, which is where you start, and then you would do 3 + 5 all divided by two, which gives 4. The next index would be at 11, which is what we are looking for. . Images shown in post (refer to post) .",
            "url": "https://vardaansinha.github.io/FastPages/jupyter/2022/12/09/group5hacks.html",
            "relUrl": "/jupyter/2022/12/09/group5hacks.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Unit 3 Sections 8-10 Hacks",
            "content": "Exercise #1: . list = [1,2,3,4,5] list.reverse() print(list) newlist = list.reverse() print(newlist) . [5, 4, 3, 2, 1] None . Exercise #2: . list = [9,8,4,3,5,2,6,7,1,0] def bubbleSort(list): n = len(list) for i in range(n): for j in range (0, len(list) - i - 1): if list[j] &gt; list[j+1]: value = list[j] list[j] = list[j+1] list[j+1] = value bubbleSort(list) print(list) . [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] .",
            "url": "https://vardaansinha.github.io/FastPages/csp/2022/12/06/810.html",
            "relUrl": "/csp/2022/12/06/810.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Unit 3 Sections 5-7 Hacks",
            "content": "For hacks, make a copy of this notebook and answer the questions or complete the code, as described in comments. Additionally, blog about any missed questions, or what you learned from this lesson. . 3.5 Hacks . Binary Practice . Using psuedocode operators determine if the statements are true or false. The number type will be indicated in parentheses. . 1. 90(D) = 1000(B) . A. True | B. False | . 2. 10(D) ≠ 0110(B) . A. True | B. False | . 3. 56(D) ≥ 111000(B) . A. True | B. False | . 3. 99(D) &lt; 1110011(B) . A. True | B. False | . Now, complete the binary truth tables . AND Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 0 | . 0 | 1 | 0 | . 0 | 0 | 0 | . OR Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 1 | . 0 | 1 | 1 | . 0 | 0 | 0 | . Not operator Not Value Result . 1 | 0 | 0 | . Not | 0 | 1 | . . Python Practice . # Practice with these statements print(20 == 30) # How can you change the operator to print a value of False? # 20 does not equal 30, would return false x = 30 y = 20 z = 10 print(x &gt;= y + z) # How can this return true by only manipulating the operator? # Manipulate the variables x, y, and z to make the below statement return true print(x == z + y) # z is equal to 10 and y is equal to 20 while x is = 30, so x would be equal to z + y as reflected in the above code snippet. . False True True . 3.6 Hacks . AP Prep . 1. What is displayed by this code? . result &lt;-- 75 | IF result &lt; 80 { DISPLAY(&quot;Please schedule a retake.&quot;) } | ELSE { DISPLAY(&quot;Nice job!&quot;) } | . Nice job! | Display 3. Please schedule a retake. | 75 | 2. How is an if statement different from an if-else statement. . Extra words. 2. An if statement will only go through a process if a condition is met. An if-else statement will go through code no matter the conditions. | They are the exact same. | An if statement will go through the entire code segment every single time and the if-else statement is always used in an algorithm, no matter the conditions. | 3. What would be most appropriate for this situation? Ben wants to check his bank account. If his car fuel is full, he will go to the bank. Otherwise, he will go home. If he goes to the bank, he will withdraw money only if his balance is above $1000. . If statement 2. If-else statement | 4. What would be most appropriate for this situation? Luke wants to play basketball. If it is sunny outside he will go to the park to play basketball. . 1. If statement . If-else statement | Using Python . animals = [&quot;lion&quot;, &quot;tiger&quot;, &quot;wildebeest&quot;, &quot;shark&quot;, &quot;jellyfish&quot;, &quot;blobfish&quot;, &quot;raven&quot;] for i in animals: if i == &quot;shark&quot;: # What boolean value does this statement cause? print(&quot;Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand!&quot;) else: print(i) # Practice # Using only one more if statement, alter the code to print out a statement saying if an animal lives in the desert, based on booleans for i in animals: if i == &quot;raven&quot;: print(i + &quot;s live in the desert&quot;) else: print(i + &quot;(e)s do not live in the desert&quot;) . lion tiger wildebeest Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand! jellyfish blobfish raven lion(e)s do not live in the desert tiger(e)s do not live in the desert wildebeest(e)s do not live in the desert shark(e)s do not live in the desert jellyfish(e)s do not live in the desert blobfish(e)s do not live in the desert ravens live in the desert . 3.7 Hacks . Exercise 1 . Create dictionaries for multiple food items, with the listed specifications Chicken Alfredo, Meat: Chicken, Time to Prepare: 60 minutes | Cheese Quesadilla, Meat: None, Time to Prepare: 10 minutes | Beef Wellington, Meat: Beef, Time to Prepare: 150 minutes | . | Used nested conditionals, determine which meal you can cook, given that a) you have no meat at home, and b) you only have 30 minutes to make the meal | . chickenAlfredo = { &quot;isMeat&quot;: True, &quot;time&quot;: 60} cheeseQuesadilla = { &quot;isMeat&quot;: False, &quot;time&quot;: 10} beefWellington = { &quot;isMeat&quot;: True, &quot;time&quot;: 150} def cook(meal): if meal[&quot;isMeat&quot;] == False: if meal[&quot;time&quot;] &lt;= 30: print (&quot;You can cook this meal.&quot;) else: print (&quot;You cannot cook this meal.&quot;) else: print(&quot;No, you cannot cook this meal without meat.&quot;) print(&quot;Can I make a chicken alfredo?&quot;) cook(chickenAlfredo) print(&quot;Can I make a cheese quesadilla?&quot;) cook(cheeseQuesadilla) print(&quot;Can I make beef wellington?&quot;) cook(beefWellington) . Can I make a chicken alfredo? No, you cannot cook this meal without meat. Can I make a cheese quesadilla? You can cook this meal. Can I make beef wellington? No, you cannot cook this meal without meat. . Exercise 2 . Make a flowchart(here is one we used) and write pseudocode for the following scenario. . Mr. Yeung would like to grade live reviews. | He wants to see if each student has at least 2 issues on their project. If they don&#39;t they receive a score of 2.0. | If they have at least 2 issues, check that they have completed at least 5 of their scrumboard tasks. | If they have completed 5 scrumboard tasks, give the student a 2.7. If they have not completed 5 scrumboard tasks, give them a score of 2.5. If they have completed more than 5 tasks, give them a score of 3.0. | How much would a student with 3 issues and 1 complete scrumboard task receive? | .",
            "url": "https://vardaansinha.github.io/FastPages/csp/2022/12/03/hacks.html",
            "relUrl": "/csp/2022/12/03/hacks.html",
            "date": " • Dec 3, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "3.1 & 3.2 Hacks (Vardaan and Navan)",
            "content": "3.1 Variables Assignment 1 Hacks . You want to store the number of apples in a shop. What is the best variable name and data type? | Answer: numApples and integer . EXPLANATION: the number of apples is a whole number, so it is best expressed as an integer. . You are storing true or false in a variable that asks if the classroom is cold. What is the best variable name and data type? | Answer: isCold and boolean . EXPLANATION: the state of being cold is a binary setting (either true or false), which is why it should be boolean. . How do you store the ID numbers for the students in the classroom? Choose the best variable name and data type | Answer: IDnumber and string . EXPLANATION: the ID number is constantly changing and is a list of numbers next to each other, so instead of an integer, it is best expressed as a string. . Is itisRainingtodayinsandiego a better option than isRaining? | Answer: no . EXPLANATION: this is way too complicated, isRaining is much simpler and broader . Which of the following types of data is best for a true or false question? | Answer: Boolean . EXPLANATION: Boolean is true/false . What is the difference between an integer and string of numbers? | Answer: An integer can be changed with addition and subtraction and a string is a set number or string of letters. . 3 Practice Questions . What is the best way to determine if John was money? | isMoney, boolean . What is the best way to determine Manny’s phone number? | phoneNumber, string . What is the best way to store all of Felipe’s pets? | petsOwned, string . 3.1 Variables and Assignment Video 2 Hacks . Consider the following code segment: currentScore ⟵ 10 . highScore ⟵ currentscore . currentScore ⟵ 7 . Answer: . currentScore = 7 . highScore = 10 . | Consider the following code segment: num1 ⟵ 4 . num2 ⟵ 6 . num1 ⟵ num 2 . Answer: . num1: 6 . num2: 6 . | Consider the following code segment: num1 ⟵ 25 . num2 ⟵ 15 . num3 ⟵ 30 . num2 ⟵ num3 . num3 ⟵ num1 . num1 ⟵ num2 . Answer: . num1: 30 . num2: 30 . num3: 25 . | Consider the following code segment: p ⟵ 10 . q ⟵ 20 . r ⟵ 30 . s ⟵ 40 . p ⟵ q . q ⟵ r . s ⟵ q . r ⟵ p . Answer: . r = 20 . | Consider the following code segment first ⟵ true . second ⟵ false . second ⟵ first . first ⟵ second . Answer: . first: true . second: true . | Consider the following code segment a ⟵ 10 . b ⟵ 20 . c ⟵ 30 . d ⟵ 40 . x ⟵ 20 . b ⟵ x + b . a ⟵ x + 1 . d ⟵ c / d + 2 . Answer: . a = 21 . b = 40 . c = 30 . d = 50 . | 3.2 Data Abstraction Video 2 Hacks . Consider the following code segment scores1 &lt;- [89, 78, 92, 63, 95, 88] . scores2 &lt;- [92, 79, 97, 63] . scores1 &lt;- scores2 . Answer: . score2 = [92, 79, 97, 63] . | Consider the following code segment listA &lt;- [“Sam”, “Ann”] . listB &lt;- [“Jamal”, “Tamara”] . listB &lt;- listA . listA &lt;- listB . Answer: . listA = [“Sam”, “Ann”] . | Consider the following code segment [“Red”, “Orange”, “Yellow”, “Green”, “Blue”, “Purple”] . Answer: . The length of the list is 6 . | What is the index number of “Purple” in this list? [“Red”, “Orange”, “Yellow”, “Green”, “Blue”, “Purple”] . Answer: . 6 . Correct Answer: . 5 because it starts with 0 . | Which of the following types of data can be stored in a list? . Answer: . Booleans, Strings, and Floats . | Which of the following variables is a float? Apples | -106.2 | 34 | True | . Answer: . -106.2 because thats the only decimal . | If a list has a length of 24 items, what is the index number of the 17th item? 21 | 17 | 16 | 69 | . Answer: . 16 because first one is 0 . | A variable is permanent and cannot be changed later on. True | False | . Answer: . False . | Which of the following is true about the list? [“Apples”, 42.0, “Bananas”, 0.5, “Avocado”, -902.2, “Lychee”, 6.9, “Orange”, 7.2] . Answer: . The list has floats, strings, and the index of “Avocado” is also 4 . |",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2022/12/01/hacks3.13.2.html",
            "relUrl": "/markdown/2022/12/01/hacks3.13.2.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Unit 3 Section 3-4 Hacks + Notes (VARDAAN AND NAVAN)",
            "content": "Hacks . title: Homework Assignment for 3.3-4 | tags: [hw] | toc: true | comments: true | . 3.3 Video 1 Hacks . Show two examples and label which one is sequence, selection, iteration numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] . . HACK . 3.3 Video 1 Hacks . list = [1, 2, 3, 4, 5] new_list = [] for num in list: if num % 4 == 2: new_list.append(&quot;new&quot;) print(new_list) . [&#39;new&#39;] . Over here, we have an iteration through the &quot;for num in list&quot;, as it is iterating through the entire list. . The &quot;if num % 4 == 2&quot; is a selection, because it is selecting a specific number. . Hack . i = 1 . 1 &lt; 5 . j = 1 . 1 &lt;= 1 . print –&gt; * . #iterate to next i . i = 2 . 2 &lt; 5 . j = 1 . 1 &lt;= 2 . print –&gt; * . 2 &lt;=2 . print –&gt; * . Answers 2 . All the steps are a sequence . “While i &lt;= 5:” is iteration because they repeat until i reaches 5 . “While j &lt;= i:” is selection because this is where they decide what j is . 3.3 Video 2 Hacks . Practice Problems . given the following code segment below: | a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . find the value for a, b, c, d . Click for the answer! a = 1, b = 7, c = 3, d = 7 consider the following code segment: | hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . what are the values of hot and cold after executing the code segment? . the value of hot is true, the value of cold is true | the value of hot is false, the value of cold is true | the value of hot is true, the value of cold is false | the value of hot is false, the value of cold is false | Click for the answer! 1. the value of hot is true, the value of cold is true Make TWO of your own code segments that contain at least 5 defined variables, then provide the answer and EXPLAIN why your answer is correct. | Sequencing num1 = 3 num2 = 1 num3 = 5 num1 = num2 + num3 num2 = num1 + num3 # num2 is now the new num1 + num3 Hack: Problem 1-4 explanation | #1 . a = 7 . b = 1 . c = 3 . d = 4 . a = 1 . b = 3 + 4 = 7 . d = 7 . Answer: a = 1, b = 7, c = 3, d = 7 . #2 . hot = true . cold = false . cold = hot = true . hot = cold= true . Answer: cold = true, hot = true . #3 Own code segment with 5 variables a = 3 . b = 7 . c = 10 . d = b + a . e = c / d . what is d * e ? . Explanation: . d = 7 + 3 = 10 . e = 10 / 10 = 1 . d * e = 10 * 1 = 10 . #4 . num1 = 3 . num2 = 1 . num3 = 5 . num1 = num2 + num3 = 1 + 5 = 6 . num2 = num1 + num3 = 3 + 6 = 9 . What is the value of num1 and num2? . Click for the answer! num1 = 6, num2 = 11 3.3 Video 3 Hacks . 3.4 Video 1 Hacks . String Homework . . Test 1 . firstName &lt;- “Bob” lastName &lt;- “Smith” var &lt;- substring(firstName, 1, 1) name &lt;- concat(lastName, var) email &lt;- concat(name, “@gmail.com”) DISPLAY(email) . | What would the result be? . | . Hint: var = “B” name = “SmithB” . . Test 2 . word1 &lt;- “computer” word2 &lt;- “textbooks” length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, len1) second &lt;- substring(word2, len2+3, len2) newWord &lt;- concat(first, second) DISPLAY(newWord) ————————————————————— . | . Answers . Test 1 . Result: “SmithB@gmail.com” | . Test 2 . Result: “ompuook” | . STRING HACKS . #1 . firstName = “Vardaan” . lastName = “Yatavelli” . var = substring(firstName, 1, 1) = “V” . name = concat(lastName, var) = “YatavelliV” . email = concat(name, “gmail.com”) = vardsin28@gmail.com . #2 . word1 = “computer” . word2 = “textbooks” . length1 = len(word1)/2 = 8 / 2 = 4 . length2 = len(word2)/3 = 9 / 3 = 3 . first = substring(word1, 2, len1) = ompu (starting at 2nd letter, 4 letters) . second = substring(word2, len2 + 3, len2) = ook (starting 6th letter, 3 letters) . newWord = concat(first, second) .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2022/11/30/34hacks.html",
            "relUrl": "/markdown/2022/11/30/34hacks.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Tools Check (TRI 2)",
            "content": ".",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2022/11/17/tools.html",
            "relUrl": "/markdown/2022/11/17/tools.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "Binary Math Hacks",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Bits Character Minus . +1 | 00000000 | 0 | 0 | 0 | 8 | EMPTY | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | . . To generate the ASCII characters above when changing the binary string, we are using JavaScript. The code essentially first converts the binary string into an integer string. Then, a variable &quot;chr&quot; (for character) is defined and the line uses the String.fromCharCode function to convert the integer ASCII code into a readable character as shown above. .",
            "url": "https://vardaansinha.github.io/FastPages/html/liquid/javascript/2022/11/16/PBL-binary.html",
            "relUrl": "/html/liquid/javascript/2022/11/16/PBL-binary.html",
            "date": " • Nov 16, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "My Final Exam MC Corrections.",
            "content": "Question 20: . . Explanation: . For this question, I thought that four bits wouldn’t be enough to store the eight directions, and that another extra bit would be needed in order to account for the 4 new directions in the game. Instead, the correct answer would be D, because four bits can represent 2 to the 4th pieces of information (in this case, directionalities), or 16 different directions. 16 &gt; 12, therefore justifying this answer. . Question 28: . Explanation: . I made a pretty boneheaded mistake on this question, and I switched around the 7 and the 5. In the option that I chose, the customers are being charged $7 per unit for the first 25 units of electricity and then $5 per unit for the units after the first 25. It would be the other way around, which is shown in Option C. . Question 36: . Explanation: . I put the wrong answer, since in the option I chose, ‘i’ would be initialized to 2 instead of 1, therefore generating odd numbers. The question states that we want to store “ten consecutive even integers”, and therefore, it should be APPEND(evenList, 2 * i) as the first line of the missing code. . Question 43: . Explanation: . A simple misinterpretation of the question here; I put 6, since that is the value of x after the code is ran, not the result. The result would be the sum from 0 to 5, (5 + 4 + 3 + 2 + 1 + 0), or 15 in option C. . Reflection: . My strengths included the binary questions and some of the simple if/else statements and the code execution programs. . Some of my difficulties included the multi-step code execution questions, but I will improve on this throughout the year. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/11/09/test-corrections.html",
            "relUrl": "/markdown/csp/2022/11/09/test-corrections.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Night at the Museum!.",
            "content": ". . . Reflection: . Night at the Museum was an amazing experience. It gave our group a chance to show the project that we worked hard on to multiple people, and it was very nice to have people come in and test it out. A lot of people liked our product and its different functionalities, which was very fulfilling. It was also very nice to look around at other peoples’ projects, as there were many very unique ideas. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/11/09/N@tM.html",
            "relUrl": "/markdown/csp/2022/11/09/N@tM.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "RapidAPI Test",
            "content": "import requests url = &quot;https://api-football-beta.p.rapidapi.com/timezone&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;115318933dmsh6d4dd26b9c05b57p138eb6jsn5766c7fe61da&quot;, &quot;X-RapidAPI-Host&quot;: &quot;api-football-beta.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.text) . {&#34;get&#34;:&#34;timezone&#34;,&#34;parameters&#34;:[],&#34;errors&#34;:[],&#34;results&#34;:426,&#34;paging&#34;:{&#34;current&#34;:1,&#34;total&#34;:1},&#34;response&#34;:[&#34;Africa /Abidjan&#34;,&#34;Africa /Accra&#34;,&#34;Africa /Addis_Ababa&#34;,&#34;Africa /Algiers&#34;,&#34;Africa /Asmara&#34;,&#34;Africa /Bamako&#34;,&#34;Africa /Bangui&#34;,&#34;Africa /Banjul&#34;,&#34;Africa /Bissau&#34;,&#34;Africa /Blantyre&#34;,&#34;Africa /Brazzaville&#34;,&#34;Africa /Bujumbura&#34;,&#34;Africa /Cairo&#34;,&#34;Africa /Casablanca&#34;,&#34;Africa /Ceuta&#34;,&#34;Africa /Conakry&#34;,&#34;Africa /Dakar&#34;,&#34;Africa /Dar_es_Salaam&#34;,&#34;Africa /Djibouti&#34;,&#34;Africa /Douala&#34;,&#34;Africa /El_Aaiun&#34;,&#34;Africa /Freetown&#34;,&#34;Africa /Gaborone&#34;,&#34;Africa /Harare&#34;,&#34;Africa /Johannesburg&#34;,&#34;Africa /Juba&#34;,&#34;Africa /Kampala&#34;,&#34;Africa /Khartoum&#34;,&#34;Africa /Kigali&#34;,&#34;Africa /Kinshasa&#34;,&#34;Africa /Lagos&#34;,&#34;Africa /Libreville&#34;,&#34;Africa /Lome&#34;,&#34;Africa /Luanda&#34;,&#34;Africa /Lubumbashi&#34;,&#34;Africa /Lusaka&#34;,&#34;Africa /Malabo&#34;,&#34;Africa /Maputo&#34;,&#34;Africa /Maseru&#34;,&#34;Africa /Mbabane&#34;,&#34;Africa /Mogadishu&#34;,&#34;Africa /Monrovia&#34;,&#34;Africa /Nairobi&#34;,&#34;Africa /Ndjamena&#34;,&#34;Africa /Niamey&#34;,&#34;Africa /Nouakchott&#34;,&#34;Africa /Ouagadougou&#34;,&#34;Africa /Porto-Novo&#34;,&#34;Africa /Sao_Tome&#34;,&#34;Africa /Tripoli&#34;,&#34;Africa /Tunis&#34;,&#34;Africa /Windhoek&#34;,&#34;America /Adak&#34;,&#34;America /Anchorage&#34;,&#34;America /Anguilla&#34;,&#34;America /Antigua&#34;,&#34;America /Araguaina&#34;,&#34;America /Argentina /Buenos_Aires&#34;,&#34;America /Argentina /Catamarca&#34;,&#34;America /Argentina /Cordoba&#34;,&#34;America /Argentina /Jujuy&#34;,&#34;America /Argentina /La_Rioja&#34;,&#34;America /Argentina /Mendoza&#34;,&#34;America /Argentina /Rio_Gallegos&#34;,&#34;America /Argentina /Salta&#34;,&#34;America /Argentina /San_Juan&#34;,&#34;America /Argentina /San_Luis&#34;,&#34;America /Argentina /Tucuman&#34;,&#34;America /Argentina /Ushuaia&#34;,&#34;America /Aruba&#34;,&#34;America /Asuncion&#34;,&#34;America /Atikokan&#34;,&#34;America /Bahia&#34;,&#34;America /Bahia_Banderas&#34;,&#34;America /Barbados&#34;,&#34;America /Belem&#34;,&#34;America /Belize&#34;,&#34;America /Blanc-Sablon&#34;,&#34;America /Boa_Vista&#34;,&#34;America /Bogota&#34;,&#34;America /Boise&#34;,&#34;America /Cambridge_Bay&#34;,&#34;America /Campo_Grande&#34;,&#34;America /Cancun&#34;,&#34;America /Caracas&#34;,&#34;America /Cayenne&#34;,&#34;America /Cayman&#34;,&#34;America /Chicago&#34;,&#34;America /Chihuahua&#34;,&#34;America /Costa_Rica&#34;,&#34;America /Creston&#34;,&#34;America /Cuiaba&#34;,&#34;America /Curacao&#34;,&#34;America /Danmarkshavn&#34;,&#34;America /Dawson&#34;,&#34;America /Dawson_Creek&#34;,&#34;America /Denver&#34;,&#34;America /Detroit&#34;,&#34;America /Dominica&#34;,&#34;America /Edmonton&#34;,&#34;America /Eirunepe&#34;,&#34;America /El_Salvador&#34;,&#34;America /Fort_Nelson&#34;,&#34;America /Fortaleza&#34;,&#34;America /Glace_Bay&#34;,&#34;America /Godthab&#34;,&#34;America /Goose_Bay&#34;,&#34;America /Grand_Turk&#34;,&#34;America /Grenada&#34;,&#34;America /Guadeloupe&#34;,&#34;America /Guatemala&#34;,&#34;America /Guayaquil&#34;,&#34;America /Guyana&#34;,&#34;America /Halifax&#34;,&#34;America /Havana&#34;,&#34;America /Hermosillo&#34;,&#34;America /Indiana /Indianapolis&#34;,&#34;America /Indiana /Knox&#34;,&#34;America /Indiana /Marengo&#34;,&#34;America /Indiana /Petersburg&#34;,&#34;America /Indiana /Tell_City&#34;,&#34;America /Indiana /Vevay&#34;,&#34;America /Indiana /Vincennes&#34;,&#34;America /Indiana /Winamac&#34;,&#34;America /Inuvik&#34;,&#34;America /Iqaluit&#34;,&#34;America /Jamaica&#34;,&#34;America /Juneau&#34;,&#34;America /Kentucky /Louisville&#34;,&#34;America /Kentucky /Monticello&#34;,&#34;America /Kralendijk&#34;,&#34;America /La_Paz&#34;,&#34;America /Lima&#34;,&#34;America /Los_Angeles&#34;,&#34;America /Lower_Princes&#34;,&#34;America /Maceio&#34;,&#34;America /Managua&#34;,&#34;America /Manaus&#34;,&#34;America /Marigot&#34;,&#34;America /Martinique&#34;,&#34;America /Matamoros&#34;,&#34;America /Mazatlan&#34;,&#34;America /Menominee&#34;,&#34;America /Merida&#34;,&#34;America /Metlakatla&#34;,&#34;America /Mexico_City&#34;,&#34;America /Miquelon&#34;,&#34;America /Moncton&#34;,&#34;America /Monterrey&#34;,&#34;America /Montevideo&#34;,&#34;America /Montserrat&#34;,&#34;America /Nassau&#34;,&#34;America /New_York&#34;,&#34;America /Nipigon&#34;,&#34;America /Nome&#34;,&#34;America /Noronha&#34;,&#34;America /North_Dakota /Beulah&#34;,&#34;America /North_Dakota /Center&#34;,&#34;America /North_Dakota /New_Salem&#34;,&#34;America /Ojinaga&#34;,&#34;America /Panama&#34;,&#34;America /Pangnirtung&#34;,&#34;America /Paramaribo&#34;,&#34;America /Phoenix&#34;,&#34;America /Port-au-Prince&#34;,&#34;America /Port_of_Spain&#34;,&#34;America /Porto_Velho&#34;,&#34;America /Puerto_Rico&#34;,&#34;America /Punta_Arenas&#34;,&#34;America /Rainy_River&#34;,&#34;America /Rankin_Inlet&#34;,&#34;America /Recife&#34;,&#34;America /Regina&#34;,&#34;America /Resolute&#34;,&#34;America /Rio_Branco&#34;,&#34;America /Santarem&#34;,&#34;America /Santiago&#34;,&#34;America /Santo_Domingo&#34;,&#34;America /Sao_Paulo&#34;,&#34;America /Scoresbysund&#34;,&#34;America /Sitka&#34;,&#34;America /St_Barthelemy&#34;,&#34;America /St_Johns&#34;,&#34;America /St_Kitts&#34;,&#34;America /St_Lucia&#34;,&#34;America /St_Thomas&#34;,&#34;America /St_Vincent&#34;,&#34;America /Swift_Current&#34;,&#34;America /Tegucigalpa&#34;,&#34;America /Thule&#34;,&#34;America /Thunder_Bay&#34;,&#34;America /Tijuana&#34;,&#34;America /Toronto&#34;,&#34;America /Tortola&#34;,&#34;America /Vancouver&#34;,&#34;America /Whitehorse&#34;,&#34;America /Winnipeg&#34;,&#34;America /Yakutat&#34;,&#34;America /Yellowknife&#34;,&#34;Antarctica /Casey&#34;,&#34;Antarctica /Davis&#34;,&#34;Antarctica /DumontDUrville&#34;,&#34;Antarctica /Macquarie&#34;,&#34;Antarctica /Mawson&#34;,&#34;Antarctica /McMur&#34;,&#34;Antarctica /PalmerAnta&#34;,&#34;Antarctica /Rothera&#34;,&#34;Antarctica /Syowa&#34;,&#34;Antarctica /Troll&#34;,&#34;Antarctica /Vostok&#34;,&#34;Arctic /Longyearbyen&#34;,&#34;Asia /Aden&#34;,&#34;Asia /Almaty&#34;,&#34;Asia /Amman&#34;,&#34;Asia /Anadyr&#34;,&#34;Asia /Aqtau&#34;,&#34;Asia /Aqtobe&#34;,&#34;Asia /Ashgabat&#34;,&#34;Asia /Atyrau&#34;,&#34;Asia /Baghdad&#34;,&#34;Asia /Bahrain&#34;,&#34;Asia /Baku&#34;,&#34;Asia /Bangkok&#34;,&#34;Asia /Barnaul&#34;,&#34;Asia /Beirut&#34;,&#34;Asia /Bishkek&#34;,&#34;Asia /Brunei&#34;,&#34;Asia /Calcutta&#34;,&#34;Asia /Chita&#34;,&#34;Asia /Choibalsan&#34;,&#34;Asia /Colombo&#34;,&#34;Asia /Damascus&#34;,&#34;Asia /Dhaka&#34;,&#34;Asia /Dili&#34;,&#34;Asia /Dubai&#34;,&#34;Asia /Dushanbe&#34;,&#34;Asia /Famagusta&#34;,&#34;Asia /Gaza&#34;,&#34;Asia /Hebron&#34;,&#34;Asia /Ho_Chi_Minh&#34;,&#34;Asia /Hong_Kong&#34;,&#34;Asia /Hovd&#34;,&#34;Asia /Irkutsk&#34;,&#34;Asia /Jakarta&#34;,&#34;Asia /Jayapura&#34;,&#34;Asia /Jerusalem&#34;,&#34;Asia /Kabul&#34;,&#34;Asia /Kamchatka&#34;,&#34;Asia /Karachi&#34;,&#34;Asia /Kathmandu&#34;,&#34;Asia /Khandyga&#34;,&#34;Asia /Kolkata&#34;,&#34;Asia /Krasnoyarsk&#34;,&#34;Asia /Kuala_Lumpur&#34;,&#34;Asia /Kuching&#34;,&#34;Asia /Kuwait&#34;,&#34;Asia /Macau&#34;,&#34;Asia /Magadan&#34;,&#34;Asia /Makassar&#34;,&#34;Asia /Manila&#34;,&#34;Asia /Muscat&#34;,&#34;Asia /Nicosia&#34;,&#34;Asia /Novokuznetsk&#34;,&#34;Asia /Novosibirsk&#34;,&#34;Asia /Omsk&#34;,&#34;Asia /Oral&#34;,&#34;Asia /Phnom_Penh&#34;,&#34;Asia /Pontianak&#34;,&#34;Asia /Pyongyang&#34;,&#34;Asia /Qatar&#34;,&#34;Asia /Qostanay&#34;,&#34;Asia /Qyzylorda&#34;,&#34;Asia /Riyadh&#34;,&#34;Asia /Sakhalin&#34;,&#34;Asia /Samarkand&#34;,&#34;Asia /Seoul&#34;,&#34;Asia /Shanghai&#34;,&#34;Asia /Singapore&#34;,&#34;Asia /Srednekolymsk&#34;,&#34;Asia /Taipei&#34;,&#34;Asia /Tashkent&#34;,&#34;Asia /Tbilisi&#34;,&#34;Asia /Tehran&#34;,&#34;Asia /Thimphu&#34;,&#34;Asia /Tokyo&#34;,&#34;Asia /Tomsk&#34;,&#34;Asia /Ulaanbaatar&#34;,&#34;Asia /Urumqi&#34;,&#34;Asia /Ust-Nera&#34;,&#34;Asia /Vientiane&#34;,&#34;Asia /Vladivostok&#34;,&#34;Asia /Yakutsk&#34;,&#34;Asia /Yangon&#34;,&#34;Asia /Yekaterinburg&#34;,&#34;Asia /Yerevan&#34;,&#34;Atlantic /Azores&#34;,&#34;Atlantic /Bermuda&#34;,&#34;Atlantic /Canary&#34;,&#34;Atlantic /Cape_Verde&#34;,&#34;Atlantic /Faroe&#34;,&#34;Atlantic /Madeira&#34;,&#34;Atlantic /Reykjavik&#34;,&#34;Atlantic /South_Georgia&#34;,&#34;Atlantic /St_Helena&#34;,&#34;Atlantic /Stanley&#34;,&#34;Australia /Adelaide&#34;,&#34;Australia /Brisbane&#34;,&#34;Australia /Broken_Hill&#34;,&#34;Australia /Currie&#34;,&#34;Australia /Darwin&#34;,&#34;Australia /Eucla&#34;,&#34;Australia /Hobart&#34;,&#34;Australia /Lindeman&#34;,&#34;Australia /Lord_Howe&#34;,&#34;Australia /Melbourne&#34;,&#34;Australia /Perth&#34;,&#34;Australia /Sydney&#34;,&#34;Europe /Amsterdam&#34;,&#34;Europe /Andorra&#34;,&#34;Europe /Astrakhan&#34;,&#34;Europe /Athens&#34;,&#34;Europe /Belgrade&#34;,&#34;Europe /Berlin&#34;,&#34;Europe /Bratislava&#34;,&#34;Europe /Brussels&#34;,&#34;Europe /Bucharest&#34;,&#34;Europe /Budapest&#34;,&#34;Europe /Busingen&#34;,&#34;Europe /Chisinau&#34;,&#34;Europe /Copenhagen&#34;,&#34;Europe /Dublin&#34;,&#34;Europe /Gibraltar&#34;,&#34;Europe /Guernsey&#34;,&#34;Europe /Helsinki&#34;,&#34;Europe /Isle_of_Man&#34;,&#34;Europe /Istanbul&#34;,&#34;Europe /Jersey&#34;,&#34;Europe /Kaliningrad&#34;,&#34;Europe /Kiev&#34;,&#34;Europe /Kirov&#34;,&#34;Europe /Lisbon&#34;,&#34;Europe /Ljubljana&#34;,&#34;Europe /London&#34;,&#34;Europe /Luxembourg&#34;,&#34;Europe /Madrid&#34;,&#34;Europe /Malta&#34;,&#34;Europe /Mariehamn&#34;,&#34;Europe /Minsk&#34;,&#34;Europe /Monaco&#34;,&#34;Europe /Moscow&#34;,&#34;Europe /Oslo&#34;,&#34;Europe /Paris&#34;,&#34;Europe /Podgorica&#34;,&#34;Europe /Prague&#34;,&#34;Europe /Riga&#34;,&#34;Europe /Rome&#34;,&#34;Europe /Samara&#34;,&#34;Europe /San_Marino&#34;,&#34;Europe /Sarajevo&#34;,&#34;Europe /Saratov&#34;,&#34;Europe /Simferopol&#34;,&#34;Europe /Skopje&#34;,&#34;Europe /Sofia&#34;,&#34;Europe /Stockholm&#34;,&#34;Europe /Tallinn&#34;,&#34;Europe /Tirane&#34;,&#34;Europe /Ulyanovsk&#34;,&#34;Europe /Uzhgorod&#34;,&#34;Europe /Vaduz&#34;,&#34;Europe /Vatican&#34;,&#34;Europe /Vienna&#34;,&#34;Europe /Vilnius&#34;,&#34;Europe /Volgograd&#34;,&#34;Europe /Warsaw&#34;,&#34;Europe /Zagreb&#34;,&#34;Europe /Zaporozhye&#34;,&#34;Europe /Zurich&#34;,&#34;Indian /Antananarivo&#34;,&#34;Indian /Chagos&#34;,&#34;Indian /Christmas&#34;,&#34;Indian /Cocos&#34;,&#34;Indian /Comoro&#34;,&#34;Indian /Kerguelen&#34;,&#34;Indian /Mahe&#34;,&#34;Indian /Maldives&#34;,&#34;Indian /Mauritius&#34;,&#34;Indian /Mayotte&#34;,&#34;Indian /Reunion&#34;,&#34;Pacific /Apia&#34;,&#34;Pacific /Auckland&#34;,&#34;Pacific /Bougainville&#34;,&#34;Pacific /Chatham&#34;,&#34;Pacific /Chuuk&#34;,&#34;Pacific /Easter&#34;,&#34;Pacific /Efate&#34;,&#34;Pacific /Enderbury&#34;,&#34;Pacific /Fakaofo&#34;,&#34;Pacific /Fiji&#34;,&#34;Pacific /Funafuti&#34;,&#34;Pacific /Galapagos&#34;,&#34;Pacific /Gambier&#34;,&#34;Pacific /Guadalcanal&#34;,&#34;Pacific /Guam&#34;,&#34;Pacific /Honolulu&#34;,&#34;Pacific /Kiritimati&#34;,&#34;Pacific /Kosrae&#34;,&#34;Pacific /Kwajalein&#34;,&#34;Pacific /Majuro&#34;,&#34;Pacific /Marquesas&#34;,&#34;Pacific /Midway&#34;,&#34;Pacific /Nauru&#34;,&#34;Pacific /Niue&#34;,&#34;Pacific /Norfolk&#34;,&#34;Pacific /Noumea&#34;,&#34;Pacific /Pago_Pago&#34;,&#34;Pacific /Palau&#34;,&#34;Pacific /Pitcairn&#34;,&#34;Pacific /Pohnpei&#34;,&#34;Pacific /Port_Moresby&#34;,&#34;Pacific /Rarotonga&#34;,&#34;Pacific /Saipan&#34;,&#34;Pacific /Tahiti&#34;,&#34;Pacific /Tarawa&#34;,&#34;Pacific /Tongatapu&#34;,&#34;Pacific /Wake&#34;,&#34;Pacific /Wallis&#34;]} . print(&quot;Timezones:&quot;) results = response.json().get(&#39;results&#39;) for display in results: if results [&quot;display&quot;] == &quot;America&quot;: json_formatted_str = json.dumps(results [&quot;results&quot;], indent=4) print (json_formatted_str) . Timezones: . TypeError Traceback (most recent call last) /home/vardaan/vscode/FastPages/_notebooks/2022-10-11-rapidapi.ipynb Cell 3 in &lt;cell line: 3&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/vardaan/vscode/FastPages/_notebooks/2022-10-11-rapidapi.ipynb#W3sdnNjb2RlLXJlbW90ZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; print(&#34;Timezones:&#34;) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/vardaan/vscode/FastPages/_notebooks/2022-10-11-rapidapi.ipynb#W3sdnNjb2RlLXJlbW90ZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; results = response.json().get(&#39;results&#39;) -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/vardaan/vscode/FastPages/_notebooks/2022-10-11-rapidapi.ipynb#W3sdnNjb2RlLXJlbW90ZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; for display in results: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/vardaan/vscode/FastPages/_notebooks/2022-10-11-rapidapi.ipynb#W3sdnNjb2RlLXJlbW90ZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; if results [&#34;display&#34;] == &#34;America&#34;: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/vardaan/vscode/FastPages/_notebooks/2022-10-11-rapidapi.ipynb#W3sdnNjb2RlLXJlbW90ZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; json_formatted_str = json.dumps(results [&#34;results&#34;], indent=4) TypeError: &#39;int&#39; object is not iterable .",
            "url": "https://vardaansinha.github.io/FastPages/python/jupyter/2022/10/11/rapidapi.html",
            "relUrl": "/python/jupyter/2022/10/11/rapidapi.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "My RapidAPI Submenu.",
            "content": "| RapidAPI Work | .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/10/11/rapidapi-submenu.html",
            "relUrl": "/markdown/csp/2022/10/11/rapidapi-submenu.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter z is the 26 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count+1) + &quot; letter in the alphabet&quot;) count += 1 . The letter a is the 1 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 1 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [1, 3, 5, 7, 9] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 1): evens.append(numbers[i]) print(evens) . [1, 3, 5, 7, 9] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt;= 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] == 0: pass elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu. Once you are done selecting items, type &#39;done&#39;&quot;) # create an if loop if item.lower() == &quot;burger&quot;: # .lower() allows the same output whether the person types upper or lowercase print(&quot;1 burger: $3.99&quot;) total = total + 3.99 elif item.lower() == &quot;fries&quot;: # create an if loop for fries print(&quot;1 fries: $1.99&quot;) total = total + 1.99 elif item.lower() == &quot;drink&quot;: # create an if loop for drinks print(&quot;1 drink: $0.99&quot;) total = total + 0.99 elif input: print(&quot;You misspelled that. Try again please.&quot;) #code should add the price of the menu items selected by the user print(&quot;Your total is $&quot; + str(total) + &quot;.&quot; + &quot; Have a nice day!&quot;) . Menu burger $3.99 fries $1.99 drink $0.99 1 drink: $0.99 Your total is $0.99. Have a nice day! . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://vardaansinha.github.io/FastPages/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "Notes on the Internet.",
            "content": "As time went on, computers got smaller and smaller. . Computers talk through packets, which are small pieces of information which are transferred from one computer to the next. . Bandwidth is the speed at which the packets travel, measured in bits per second. . There are many models to show the different protocols, standards, and data formats which are followed. . The OSI model has 7 layers: physical, data link, network, transport, session, presentation, and application. . The TCP/IP model has 4 layers: network access, internet, transport, and application. . Examples of devices running at the application layer include web servers, where programs are running on machines connected to the Internet, and DNS, where applications are being translated from readable URLs to IP addresses. . Three Targets that can be addressed using IP: . Unicast (specific device) | Multicast (group of devices) | Broadcast (all devices) | Quiz Results: . . Note: I accidentally typo’d the option for Question 3, I put that the Internet was a data stream instead of a network. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/10/11/4.1-notes.html",
            "relUrl": "/markdown/csp/2022/10/11/4.1-notes.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "Notes on Identifying and Correcting Errors.",
            "content": "Notes: . The different types of errors: . Logic Errors: An algorithm mistake, causing different behavior in the program | . | Syntax Errors: Spelling errors and other typos such as forgetting a semicolon at the end of a line, forgetting indentation, quotes, braces, etc. | . | Run-Time Errors: This is when the code will work for a bit and then crash because of a bug in one of the lines of code. This can occur due to user input errors. | . | Overflow Errors: This happens from values that may be too large for the program to process or show. | . | Correcting Errors: . Syntax errors can be fixed by running through each line of code, and making sure that you have all the proper elements: quotes where necessary, semicolons at the end of the lines, and proper spelling of functions and variables that are being called. . Debuggers are also very useful tools which allow for the programmer to pause or play the program as the program runs to see where exactly the error is occurring. . Testing Programs: . It is very important to test the programs! Errors are a part of the programming process and it’s important to continuously test so that the errors don’t pile up at the end. . Quiz Results: . .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/10/11/1.4-notes.html",
            "relUrl": "/markdown/csp/2022/10/11/1.4-notes.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "AWS Deployment",
            "content": ".",
            "url": "https://vardaansinha.github.io/FastPages/markdown/aws/2022/10/03/aws.html",
            "relUrl": "/markdown/aws/2022/10/03/aws.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "Project Design Outline",
            "content": ".",
            "url": "https://vardaansinha.github.io/FastPages/markdown/personal/2022/10/02/projectplanning.html",
            "relUrl": "/markdown/personal/2022/10/02/projectplanning.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post56": {
            "title": "CB 1.1-1.3 Completion Proof",
            "content": "Proof of my Completion of all 3 Quizzes: . . .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/personal/2022/10/02/cb.html",
            "relUrl": "/markdown/personal/2022/10/02/cb.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post57": {
            "title": "Scrum Team",
            "content": ". On our team, David is our scrum team manager, since he is the most responsible. Samit and myself are the front end developers because of our graphical interface abilities, and Akshat will specialize in the backend because of his great focus and attention to detail. . Our PBL Project Goal: . Create an AI algorithm that takes into account the user’s weighted and unweighted GPA, extracurriculars, ethnicity, gender, and other traits then determines the likelihood of them getting accepted into an Ivy League College! .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/personal/2022/09/25/scrumteam.html",
            "relUrl": "/markdown/personal/2022/09/25/scrumteam.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post58": {
            "title": "Roster Cut Tool (JS)",
            "content": "Program Explanation . Every season, each NFL team has to make a series of roster cuts in order to finalize a 53-man roster. With this tool, JavaScript was used to select a random player to cut, making it easier for the Patriots managers. | . Click For New England Player Player Will Appear Here . &lt;/script&gt; .",
            "url": "https://vardaansinha.github.io/FastPages/java/markdown/2022/09/25/js.html",
            "relUrl": "/java/markdown/2022/09/25/js.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post59": {
            "title": "Psychology and the Good Life Notes",
            "content": "Important Vocabulary Terms: . Healthy: Staying “healthy” means to indulge ourselves in physical and mental cleansing activities, allowing us to stay happier and more content with our lives. . | Wealthy: Being “wealthy” does not only apply to money; it can also apply to time, where we get more time to complete things that we intend to. . | Gratitude: This is an emotion that allows us to express our gratefulness for a particular situation, person, emotion, etc. . | Enterprise: The individual journey that each person goes on regarding our well-being level and unique endeavors that we embark upon. . | Important Takeaways: . It is extremely important to express gratitude towards people and situations that we are in. We are all privileged in some way or the other, and it is crucial that we recognize that and be thankful for it. . We have to make a conscious effort to increase our wellbeing. Whether this is through exercising daily, meditating, or manifesting our goals, we have to prioritize our mental and physical health. . Personal Gratitude: . Personally, I am very grateful for the following things in my life: . Having a family that I can talk to and share experiences with | Having a home that I can return to everyday | Having access to a proper education everyday | Being friends with many great people | Having an abundant amount of food and clean water | . Group Stress Survey: . Our Scrum Board group (David, Akshat, Samit, and myself) created and analyzed a survey amongst many of our peers regarding their different contributing stress factors. . The survey results were documented by Samit in this post on his site. . The results showed that having a healthy social circle and life allows for a greater reduction of stress. From this survey, it is clear that ALL students should attempt to meet and socialize with good groups of people in order to take breaks from the rigor of daily schoolwork. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/09/19/psychology.html",
            "relUrl": "/markdown/csp/2022/09/19/psychology.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post60": {
            "title": "Collaboration in Computer Science",
            "content": "Notes on Jason Han’s Collaboration Videos: . Video #1: . Effective collaboration allows for the proper reflection of a diversity of talents amongst groups of people | Collaboration also allows for a view into the differing perspectives of each person that contributed to a certain design/idea | Some interpersonal skills that can be developed through collaboration include communication, consensus building, conflict resolution, and negotiations | . Video #2: . Pair Programming: Two programmers working together as a pair; one is actually writing code, the other is reviewing the work done by the other person (watching!) | Think-Pair-Share: Students are thinking through a problem alone, pairing with a partner to share ideas, and sharing the results with their peers | It is important to leave comments in the code! Always acknowledge other people’s code snippets (don’t steal). | It is important to get different perspectives when working on a design or program. | . Reflection Questions: . I believe that my Scrum Team is not strictly based on the basis of current friends and common interests. . Everyone in the group (Samit, Akshat, David, and myself) are all passionate about computer science, and are dedicated to working on our projects and going above and beyond the requirements for each week. . Our group is setup with diversity in our backgrounds and perspectives, but there is no diversity in our gender (we are all men). . Our group is best equipped for the skill sets needed for success in the classroom, as we are familiar with computer science and are always looking forward to new learning each week. . .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/09/19/collaboration.html",
            "relUrl": "/markdown/csp/2022/09/19/collaboration.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post61": {
            "title": "JavaScript TechTalk",
            "content": "| HTML + JavaScript Table | Roster Cut JavaScript Algorithm | . . // The equivalent to the Python print function; printing &#39;PROOF&#39; as a message. console.log(&quot;PROOF&quot;); . PROOF . // creating a variable with the &#39;var&#39; component, and printing that variable. in this case, it is &#39;msg&#39; var msg = &quot;WSG&quot;; console.log(msg); . WSG . // creating a function called logIt, and calling the &#39;msg&#39; variable that was created in the above cell. function logIt(output) { console.log(output); } logIt(msg); . WSG . // showing multiple ways of printing different messages. console.log(&quot;I&quot;) logIt(&quot;AM&quot;); logIt(100) . I AM 100 . // notice the added &#39;Type&#39; at the end of the logIt in comparison to the previous examples. this prints the TYPE of variable, as seen in the output with the &quot;string&quot;, &quot;number&quot;, and &quot;object&quot; declarations. function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;JS IS DIFFERENT&quot;) logItType(&quot;cheese&quot;); // String logItType(100); // Number logItType([2, 4, 6, 8]); // Object is generic for this Array, which similar to Python List . JS IS DIFFERENT string ; cheese number ; 100 object ; [ 2, 4, 6, 8 ] . // defining the function with the characteristics for each person function Person(name, lastName, draftClass) { this.name = name; this.lastName = lastName; this.draftClass = draftClass; this.role = &quot;&quot;; } // prototype definition Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, lastName: this.lastName, draftClass: this.draftClass, role: this.role}; const json = JSON.stringify(obj); return json; } // new person assigned to student variable var student = new Person(&quot;SAMIT&quot;, &quot;POOJARY&quot;, 2014); logItType(student); logItType(student.toJSON()); // output of Object and JSON/string associated with student variable defined above - again, using the student variable defined above and the logItType showing the TYPE of variable being printed. student.setRole(&quot;Student&quot;); logItType(student); logItType(student.toJSON()); . object ; Person { name: &#39;SAMIT&#39;, ghID: &#39;POOJARY&#39;, classOf: 2014, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;SAMIT&#34;,&#34;ghID&#34;:&#34;POOJARY&#34;,&#34;classOf&#34;:2014,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;SAMIT&#39;, ghID: &#39;POOJARY&#39;, classOf: 2014, role: &#39;Student&#39; } string ; {&#34;name&#34;:&#34;SAMIT&#34;,&#34;ghID&#34;:&#34;POOJARY&#34;,&#34;classOf&#34;:2014,&#34;role&#34;:&#34;Student&#34;} . // array of quarterbacks var quarterbacks = [ new Person(&quot;Mac&quot;, &quot;Jones&quot;, 2021), new Person(&quot;Tom&quot;, &quot;Brady&quot;, 1999), new Person(&quot;Aaron&quot;, &quot;Rodgers&quot;, 2006), new Person(&quot;Justin&quot;, &quot;Herbert&quot;, 2019), new Person(&quot;Patrick&quot;, &quot;Mahomes&quot;, 2017), new Person(&quot;Kyler&quot;, &quot;Murray&quot;, 2019) ]; // define a classroom and build Classroom objects and json function Classroom(student, quarterbacks){ // 1 teacher, many student // start Classroom with Teacher student.setRole(&quot;Student&quot;); this.student = student; this.classroom = [student]; // add each Student to Classroom this.quarterbacks = quarterbacks; this.quarterbacks.forEach(quarterback =&gt; { quarterback.setRole(&quot;Quarterback&quot;); this.classroom.push(quarterback); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(student, quarterbacks); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;SAMIT&#39;, ghID: &#39;POOJARY&#39;, classOf: 2014, role: &#39;Student&#39; }, Person { name: &#39;Mac&#39;, ghID: &#39;Jones&#39;, classOf: 2021, role: &#39;Quarterback&#39; }, Person { name: &#39;Tom&#39;, ghID: &#39;Brady&#39;, classOf: 1999, role: &#39;Quarterback&#39; }, Person { name: &#39;Aaron&#39;, ghID: &#39;Rodgers&#39;, classOf: 2006, role: &#39;Quarterback&#39; }, Person { name: &#39;Justin&#39;, ghID: &#39;Herbert&#39;, classOf: 2019, role: &#39;Quarterback&#39; }, Person { name: &#39;Patrick&#39;, ghID: &#39;Mahomes&#39;, classOf: 2017, role: &#39;Quarterback&#39; }, Person { name: &#39;Kyler&#39;, ghID: &#39;Murray&#39;, classOf: 2019, role: &#39;Quarterback&#39; } ] string ; SAMIT string ; {&#34;name&#34;:&#34;SAMIT&#34;,&#34;ghID&#34;:&#34;POOJARY&#34;,&#34;classOf&#34;:2014,&#34;role&#34;:&#34;Student&#34;} object ; { name: &#39;SAMIT&#39;, ghID: &#39;POOJARY&#39;, classOf: 2014, role: &#39;Student&#39; } . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . SAMIT | POOJARY | 2014 | Student | Mac | Jones | 2021 | Quarterback | Tom | Brady | 1999 | Quarterback | Aaron | Rodgers | 2006 | Quarterback | Justin | Herbert | 2019 | Quarterback | Patrick | Mahomes | 2017 | Quarterback | Kyler | Murray | 2019 | Quarterback | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . . .",
            "url": "https://vardaansinha.github.io/FastPages/techtalk/javascript",
            "relUrl": "/techtalk/javascript",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post62": {
            "title": "My Introduction to Scrum Board",
            "content": "This week, I explored the ScrumBoard platform. It is an extremely useful way to write down issues and tasks that need to be worked on, and it is easy to collaborate on it; you can add up to 10 other people on your ScrumBoard for FREE. . For this week, I added three total issues that I need to work on. . My ScrumBoard Issues! . .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/09/11/scrum-board-setup.html",
            "relUrl": "/markdown/csp/2022/09/11/scrum-board-setup.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post63": {
            "title": "Performance Task Planning for AP CSP",
            "content": "Performance Task Scoring Rubric: . I decided to take a look at some of the 2021 CollegeBoard scoring guidelines/rubric, and these are the components that I read about: . Program Purpose and Function: | The program has inputs, outputs, and a generally efficient functionality. Points will NOT be given if the program is not shown to be running, or if the purpose described in the written response is just the functionality of the program. These are supposed to be two DIFFERENT things. . Data Abstraction: | The written response has to have two separate code segments; one that shows data being stored in a list, and another that shows data in the same list being used to accomplish the purpose of the program. . Managing Complexity: | The written response has to contain a list in the program that helps to manage the complexity (the lazy programmer way). This has to be EXPLAINED. . Procedural Abstraction: | Again, there must be two program code segments; one with a student-developed procedure on a parameter affecting program functionality, and another where that procedure is being called. . Algorithm Interpretation: | There must be a program code segment with a developed algorithm. This would have to contain sequencing, selection, and iterations. . For my Performance Task Creation with my partner, we are going to brainstorm throughout the week and come up with a plan to merge both of our AppLab ideas, and previous ideas from the Python Quiz from two weeks ago. . Bria’s Post Review: . After reading her post with all of the components that helped her to get a 5, I noted down a few interesting components that I will definitely implement into my studying plan &amp; performance task creation outline: . Khan Academy Videos, which are quick and straight to the point. . | Timing and paying attention on the practice tests, as they are very similar to what will be seen on the actual test. . | Review the past scoring examples from CollegeBoard. This will help to guide my performance task and see how to get the maximum points on my project. . | Cite all sources! This can be done through comments. The original creator MUST be given credit if certain snippets of code are not yours. . |",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/09/11/performance-task-planning.html",
            "relUrl": "/markdown/csp/2022/09/11/performance-task-planning.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post64": {
            "title": "AppLab Creation",
            "content": "Mental Health Quiz AppLab Creation . Snippets: . . . . Interesting Components: . I used the Area51 Theme throughout all of my screens and buttons. This is one of the themes that AppLab provided, and I really liked its color scheme. . | The button to restart the quiz at the end is a good component for people who want to take the quiz multiple times. . | Successes: . The app itself was fully functional; all of the buttons and screens worked as they were meant to. . | My use of onEvent and showScreen was smooth and easy to make the app. . | Failures: . I was not able to use a more EFFICIENT way to make my program, rather than just using onEvent and showScreen components repeatedly for EVERY option and screen. . | The quiz itself may have been a little bit on the shorter side; maybe there could’ve been more interactive components for the user to get more help. Giving links and resources for the user to visit at the end of the quiz could be a good idea. . |",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/09/11/applab-creation.html",
            "relUrl": "/markdown/csp/2022/09/11/applab-creation.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post65": {
            "title": "AppLab Brainstorm/Plan",
            "content": "Starting Ideas for the Subject of my Quiz: . Sports Quiz | Programming Language Quiz | Mental Health Evaluation Quiz | After lots of consideration, I chose to go with the Mental Health Evaluation Quiz, due to its great pertinence to today’s society. . OUTLINE/PLAN: . Create all of the screens: screens for each question and each output screen for the selected option. | Create all of the interactive buttons for each option. | Utilize onEvent &amp; setScreen to create the functionality of the quiz. | Create an option in the ending to return to the home screen and restart the quiz. | GOALS: . I want to be able to use a function in order to limit the amount of hard work (rather than smart work) that I have to do to create the quiz, rather than using nested onEvent and setScreen elements. | I want to be able to create a very short, yet effective quiz that is able to give useful advice to the quiz taker regarding their mental health lifestyle and habits. |",
            "url": "https://vardaansinha.github.io/FastPages/markdown/csp/2022/09/10/applab-planning.html",
            "relUrl": "/markdown/csp/2022/09/10/applab-planning.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post66": {
            "title": "Time Allocations for each Period",
            "content": "Bell Schedule . Monday, Tuesday, Thursday: . Period Start Time End Time . Period 1 | 8:35 AM | 9:44 AM | . Period 2 | 9:49 AM | 10:58 AM | . Break | 10:58 AM | 11:08 AM | . Period 3 | 11:13 AM | 12:22 AM | . Lunch | 12:22 PM | 12:52 PM | . Period 4 | 12:57 PM | 2:06 PM | . Office Hours | 2:06 PM | 2:31 PM | . Period 5 | 2:36 PM | 3:45 PM | . Wednesday (Late Start): . Period Start Time End Time . Period 1 | 9:55 AM | 10:53 AM | . Period 2 | 10:58 AM | 11:56 AM | . Break | 11:56 AM | 12:06 PM | . Period 3 | 12:11 PM | 1:09 PM | . Lunch | 1:09 PM | 1:39 PM | . Period 4 | 1:44 PM | 2:42 PM | . Period 5 | 2:47 PM | 3:45 PM | . Friday: . Period Start Time End Time . Period 1 | 8:35 AM | 9:49 AM | . Period 2 | 9:54 AM | 11:08 AM | . Break | 11:08 AM | 11:18 AM | . Period 3 | 11:23 AM | 12:37 PM | . Lunch | 12:37 PM | 1:07 PM | . Period 4 | 1:12 PM | 2:26 PM | . Period 5 | 2:31 PM | 3:45 PM | .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/school/2022/09/05/time-box.html",
            "relUrl": "/markdown/school/2022/09/05/time-box.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post67": {
            "title": "Lists, Dictionaries, Iterations",
            "content": "Types of Integers/Strings/Variables: . In this demonstration, we are going to look at a few types of strings and variables: . String: There are many different types of Python strings. There are two types of Python strings: single-line and multi-line. Strings can be assigned to variables. | Data Types: Float: This is data for numerical values that may have a floating decimal point and need to be printed. | Integer: These are whole numbers that can be defined and printed. In the below demonstration, you will see many integers being assigned to variables, such as my age and APEL grade. | List: Lists of multiple data values. | Dictionary: An assortment of key-value pairs that are stored in a dictionary. | Strings: (explained above) | | . import random # type string name = &quot;Vardaan Sinha&quot; print(&quot;Name:&quot;, name, type(name)) # type integer age = 15 print(&quot;Age:&quot;, age, type(age)) # float variable apelgrade = 75 print(&quot;APEL Grade:&quot;, apelgrade, type(apelgrade)) # type list classes = [&quot;AP Physics&quot;, &quot;AP Stats&quot;, &quot;AP CSP&quot;, &quot;APEL&quot;, &quot;US History&quot;] print(&quot;Classes:&quot;, classes, type(classes)) print(&quot;Period 3 Class:&quot;, classes[2], type(classes[2])) # reversed list langs = [&quot;C&quot;, &quot;Python&quot;, &quot;Java&quot;, &quot;HTML&quot;, &quot;JavaScript&quot;] langs.reverse() print(&#39; nReversed Langs:&#39;), print(&#39;, &#39;.join(langs)) # randomized order with random module random.shuffle(classes) print(&#39; nRandom Class Order:&#39;), print(&#39;, &#39;.join(classes)) . Name: Vardaan Sinha &lt;class &#39;str&#39;&gt; Age: 15 &lt;class &#39;int&#39;&gt; APEL Grade: 75 &lt;class &#39;int&#39;&gt; Classes: [&#39;AP Physics&#39;, &#39;AP Stats&#39;, &#39;AP CSP&#39;, &#39;APEL&#39;, &#39;US History&#39;] &lt;class &#39;list&#39;&gt; Period 3 Class: AP CSP &lt;class &#39;str&#39;&gt; Reversed Langs: JavaScript, HTML, Java, Python, C Random Class Order: AP CSP, APEL, US History, AP Physics, AP Stats . InfoDb Demonstration: . InfoDb is a way to gather dictionary values into a single database. In the following demonstration, you will see that Samit and I have gathered each other&#39;s personal information, such as first name, last name, email, and many other components, and stored them as dictionary values using InfoDb. . Using the .append() method can be used to add multiple inputs. . InfoDb = [] # first dictionary value InfoDb.append({ &quot;FirstName&quot;: &quot;Samit&quot;, &quot;LastName&quot;: &quot;Poojary&quot;, &quot;DOB&quot;: &quot;February 24th, 2006&quot;, &quot;Email&quot;: &quot;samitpoojary@gmail.com&quot;, &quot;Height&quot;: &quot;5&#39;7&quot;, &quot;Hobbies&quot;: [&quot;Playing Soccer&quot;, &quot;Fantasy Football&quot;, &quot;Programming&quot;] }) # adding second dictionary value InfoDb.append({ &quot;FirstName&quot;: &quot;Akshat&quot;, &quot;LastName&quot;: &quot;Parikh&quot;, &quot;DOB&quot;: &quot;December 28th, 2005&quot;, &quot;Email&quot;: &quot;akshat1228@gmail.com&quot;, &quot;Height&quot;: &quot;6&#39;&quot;, &quot;Hobbies&quot;: [&quot;Playing Basketball&quot;, &quot;Trading&quot;, &quot;Programming&quot;] }) # This prints the dictionary keys and corresponding values. print(InfoDb) . [{&#39;FirstName&#39;: &#39;Samit&#39;, &#39;LastName&#39;: &#39;Poojary&#39;, &#39;DOB&#39;: &#39;February 24th, 2006&#39;, &#39;Email&#39;: &#39;samitpoojary@gmail.com&#39;, &#39;Height&#39;: &#34;5&#39;7&#34;, &#39;Hobbies&#39;: [&#39;Playing Soccer&#39;, &#39;Fantasy Football&#39;, &#39;Programming&#39;]}, {&#39;FirstName&#39;: &#39;Akshat&#39;, &#39;LastName&#39;: &#39;Parikh&#39;, &#39;DOB&#39;: &#39;December 28th, 2005&#39;, &#39;Email&#39;: &#39;akshat1228@gmail.com&#39;, &#39;Height&#39;: &#34;6&#39;&#34;, &#39;Hobbies&#39;: [&#39;Playing Basketball&#39;, &#39;Trading&#39;, &#39;Programming&#39;]}] . Printing InfoDb Data: . Using the print function, the data for the dictionary keys and values are formatted in a particular way to avoid clutter. . def print_data(homie): print(&quot;Name:&quot;, homie[&quot;FirstName&quot;], homie[&quot;LastName&quot;]) print(&quot;Birthday:&quot;, homie[&quot;DOB&quot;]) print(&quot;Email:&quot;, homie[&quot;Email&quot;]) print(&quot;Height:&quot;, homie[&quot;Height&quot;]) print(&quot;Hobbies:&quot;, homie[&quot;Hobbies&quot;]) print() # This prints the data for the SECOND dictionary value, as Python always starts from 0 instead of 1. print_data(InfoDb[1]) . Name: Akshat Parikh Birthday: December 28th, 2005 Email: akshat1228@gmail.com Height: 6&#39; Hobbies: [&#39;Playing Basketball&#39;, &#39;Trading&#39;, &#39;Programming&#39;] . Loops: . As per the name, loops are used to execute statement(s) more than once. . For loops are loops for an iterable object, or an object that can be looped over such as a list, dictionary, or string. These loops can perform the exact same action for each iterable object. . def for_loop(): for homie in InfoDb: print_data(homie) # Prints the data from InfoDb based on the index falling in the specified range. def indexed_for_loop(): print(&quot;For Loop n&quot;) for i in range(len(InfoDb)): print_data(InfoDb[i]) for_loop() indexed_for_loop() . Name: Samit Poojary Birthday: February 24th, 2006 Email: samitpoojary@gmail.com Height: 5&#39;7 Hobbies: [&#39;Playing Soccer&#39;, &#39;Fantasy Football&#39;, &#39;Programming&#39;] Name: Akshat Parikh Birthday: December 28th, 2005 Email: akshat1228@gmail.com Height: 6&#39; Hobbies: [&#39;Playing Basketball&#39;, &#39;Trading&#39;, &#39;Programming&#39;] For Loop Name: Samit Poojary Birthday: February 24th, 2006 Email: samitpoojary@gmail.com Height: 5&#39;7 Hobbies: [&#39;Playing Soccer&#39;, &#39;Fantasy Football&#39;, &#39;Programming&#39;] Name: Akshat Parikh Birthday: December 28th, 2005 Email: akshat1228@gmail.com Height: 6&#39; Hobbies: [&#39;Playing Basketball&#39;, &#39;Trading&#39;, &#39;Programming&#39;] . While Loops: . These are loops that repeat a particular statement when a specified condition is met (true). . def while_loops(): # This sets the initial value for the index at 0. i = 0 # When i &lt; dictionary length, the data from InfoDb will be printed. while i &lt; len(InfoDb): print_data(InfoDb[i]) i = i + 1 # Printing the while loop&#39;s output print(&quot;While Loop n&quot;) while_loops() . While Loop Name: Samit Poojary Birthday: February 24th, 2006 Email: samitpoojary@gmail.com Height: 5&#39;7 Hobbies: [&#39;Playing Soccer&#39;, &#39;Fantasy Football&#39;, &#39;Programming&#39;] Name: Akshat Parikh Birthday: December 28th, 2005 Email: akshat1228@gmail.com Height: 6&#39; Hobbies: [&#39;Playing Basketball&#39;, &#39;Trading&#39;, &#39;Programming&#39;] . Recursive Loops: . These are loops where a function can call itself. It keeps doing so until a particular condition is no longer met. A prime example of this is shown in the below code. . def recursive(i): if i &gt;= len(InfoDb): return print_data(InfoDb[i]) return recursive(i + 1) # Printing the 2nd dictionary term. recursive(1) . Name: Akshat Parikh Birthday: December 28th, 2005 Email: akshat1228@gmail.com Height: 6&#39; Hobbies: [&#39;Playing Basketball&#39;, &#39;Trading&#39;, &#39;Programming&#39;] . Dictionary Quiz: . import getpass # Setting INTEGER variables: setting the correct answers to START at 0. questions = 3 correct = 0 print(&quot;This is a Python-centric quiz that will allow you to test your knowledge of the AP CSP content thus far.&quot;) # Setting &#39;q&#39; and &#39;a&#39; parameters def question_answer(q, a): # prints q print(&quot;Question: &quot; + q) # This is the user&#39;s input/response to the question. resp = input() print(&quot;Answer: &quot; + resp) # The correct +=1 adds a correct answer. if a == resp.lower(): print(&quot;Correct!&quot;) global correct correct +=1 else: print(&quot;Incorrect!&quot;) return resp q1 = question_answer(&quot;Which type of loop is used to call repeatedly?&quot;, &quot;recursive&quot;) q2 = question_answer(&quot;A Python ___ stores associated keys and values.&quot;, &quot;dictionary&quot;) q3 = question_answer(&quot;What type of variable can contain numbers with &#39;floating&#39; decimal values?&quot;, &quot;float&quot;) # If statement based on the amount of questions that user gets correct if correct &lt; 3: print(f&#39;You got only {correct}/3 correct.&#39;) # getpass module called to get username to tell the user their score and percentage. print (getpass.getuser() + &quot; that&#39;s a &quot; + str((correct / questions)* 100)+ &quot;%&quot;) print(&quot;The answers in order were &#39;recursive&#39;, &#39;dictionary&#39;, and &#39;float&#39; for next time.&quot;) else: print(f&#39;Great job! You got a 100%.&#39;) # DICTIONARY COMPONENT # This allows for the user&#39;s answers to be recorded and given back to them after they complete the quiz. PyQuiz = { &quot;Q1&quot;: q1, &quot;Q2&quot;: q2, &quot;Q3&quot;: q3 } print(&quot;Your recorded answers for review:&quot;, PyQuiz) . This is a Python-centric quiz that will allow you to test your knowledge of the AP CSP content thus far. Question: Which type of loop is used to call repeatedly? Answer: while Incorrect! Question: A Python ___ stores associated keys and values. Answer: dictionary Correct! Question: What type of variable can contain numbers with &#39;floating&#39; decimal values? Answer: float Correct! You got only 2/3 correct. vardaan that&#39;s a 66.66666666666666% The answers in order were &#39;recursive&#39;, &#39;dictionary&#39;, and &#39;float&#39; for next time. Your recorded answers for review: {&#39;Q1&#39;: &#39;while&#39;, &#39;Q2&#39;: &#39;dictionary&#39;, &#39;Q3&#39;: &#39;float&#39;} .",
            "url": "https://vardaansinha.github.io/FastPages/jupyter/python/2022/09/05/listsdictionaries.html",
            "relUrl": "/jupyter/python/2022/09/05/listsdictionaries.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post68": {
            "title": "Future FastPages Plans",
            "content": "There are quite a few things that I hope to do on my FastPages site in the upcoming week: . Fix the liquid portion of my table. | Fix and update the custom color-switch CSS that you added to your site to make the site more visually appealing. | Update the custom cursor, make it function properly. | .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/school/2022/09/05/compsci-todo.html",
            "relUrl": "/markdown/school/2022/09/05/compsci-todo.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post69": {
            "title": "Changing the Default Remote Theme for FastPages",
            "content": "I wanted to change the default minima theme to something else, just to see the visual effect it would have on my site. . In this first image, I changed the remote_theme section of the config.yml file to the Cayman theme, which I found online. . Then, after the changes were synced, we had the following results: . As you can see, there were both positives and flaws with the design. On the positives, the color scheme is very nice, and the title font for my site looks much more appealing. . On the other hand, this theme is not adjusted with corresponding CSS, and it breaks certain components of my FastPages site. For example, my pages (tags, about me, notes, search) all disappeared, taking away from the functionality of the site. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/html/2022/09/05/changing-remote-theme.html",
            "relUrl": "/markdown/html/2022/09/05/changing-remote-theme.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post70": {
            "title": "Vardaan's School Work for This Week",
            "content": ". . My Upcoming School Work: . This week, I have a lot of work to do. I am in APEL, AP Stats, AP Physics, and AP Computer Science. I have a lot of homework from all of these classes. . APEL: . Finish Annotating Sample 3 | Review feedback on writing assignments | Prepare for Tuesday’s MC Test | Prepare for Wednesday’s On Demand | . AP Stats: . Complete daily worksheets | Review for Team Challenge FRQ on Monday, 8/29 | Review for Unit 1 Quiz on Thursday, 9/1 | . AP Physics: . Finish Minicar Lab | Keep reviewing 1D Motion concepts | Prepare for a possible quiz | . AP Computer Science: . Work on the things listed in the schedule for this week with Samit and crossover pair, Akshat/David | Do the Hacks, go above and beyond! | .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/school/2022/08/28/work-post.html",
            "relUrl": "/markdown/school/2022/08/28/work-post.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post71": {
            "title": "Python Quiz",
            "content": "import getpass,sys # The import command is used to import particular Python modules that involve certain sets of functions and variables that may be useful in a specific script. def question_answer(prompt): print(&quot;Question: &quot;) message = input(&quot;Question: &quot; + prompt) print(&quot;Answer:&quot; +message) def response(prompt): print(&quot;Question: &quot; + prompt) message = input(&quot;Question: &quot; + prompt) return message integer = 3 # Here, what I did was that I defined the value of the integer. This needed to be done for the Bonus question. question_data = [ &quot;What type of statement is used to evaluate an expression list?&quot;, &quot;What type of statement is used to return an expression list?&quot;, &quot;What type of statement is used to call other Python modules to utilize their functions?&quot;, &quot;BONUS: What is the name of the Python module used to utilize StackOverflow without leaving the terminal?&quot; ] answer_data = [ &quot;expression&quot;, &quot;return&quot;, &quot;import&quot;, &quot;howdoi&quot;, ] questions = len(question_data) correct = 0 print(&#39;Hey skippy, &#39; + str(questions) + &quot; questions.&quot;) resp = response(&quot;Prepared? Say &#39;yes&#39; or &#39;no&#39;.&quot;) if resp == &quot;yes&quot;: print(&quot;Let&#39;s start.&quot;) for i in range(len(question_data)): resp = response(question_data[i]) if resp == answer_data[i]: print(resp + &quot; is correct.&quot;) correct +=1 else: print(resp + &quot; is wrong.&quot;) print (getpass.getuser() + &quot; you got a &quot; + str(correct) + &quot;/&quot; + str(integer) + &quot; or a &quot; + str((correct / integer) * 100) + &quot;%&quot;) else: print(&quot;Leave.&quot;) . Hey skippy, 4 questions. Question: Prepared? Say &#39;yes&#39; or &#39;no&#39;. Let&#39;s start. Question: What type of statement is used to evaluate an expression list? expression is correct. Question: What type of statement is used to return an expression list? return is correct. Question: What type of statement is used to call other Python modules to utilize their functions? import is correct. Question: BONUS: What is the name of the Python module used to utilize StackOverflow without leaving the terminal? howdoi is correct. vardaan you got a 4/3 or a 133.33333333333331% . Now, I&#39;d like to talk about a caveat that I used in the code. As you can all see, I defined &#39;integer&#39; as 3 at the start, even though there were 4 questions. This is because the 4th question was defined as a bonus question, and if someone got the bonus question right, they should get more than a 100%. . First, I tried without defining the integer value in the code and just adding the number 3 in the last print statement, but that did not work, as Python cannot concatenate an integer into a string value. Therefore, I had to define the integer as a string, and that made the print statement work without crashing at the end. . Thanks! .",
            "url": "https://vardaansinha.github.io/FastPages/jupyter/python/2022/08/28/pythonquiz.html",
            "relUrl": "/jupyter/python/2022/08/28/pythonquiz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post72": {
            "title": "Scenic Collage",
            "content": ". This is a picture that I took from my flight from San Diego to Baltimore, when I went for CyberPatriot Nationals. . . This is a conventional picture that I took when I went to my Indian home country, and visited the Taj Mahal: one of the seven wonders of the world. . . This is another edited picture that I took at a photography class when I went to Design 39 in middle school. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/personal/2022/08/28/pictures.html",
            "relUrl": "/markdown/personal/2022/08/28/pictures.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post73": {
            "title": "Bash Notebook Experimentation",
            "content": "cd ~ find . -name Anaconda3-2022 * # The above command utilized the &#39;find&#39; feature of Bash in order to look for a file in the directory that we moved into with the phrase &#39;Anaconda3&#39;. conda --help # If you are confused about how to verify if you have the proper tools using conda, you can look at the command syntax with the above help command. conda list # This command is used to verify the tools that we have installed. . ./Anaconda3-2022.05-Linux-x86_64.sh.1 ./Anaconda3-2022.05-Linux-x86_64.sh.2 ./Anaconda3-2022.05-Linux-x86_64.sh.3 ./Anaconda3-2022.05-Linux-x86_64.sh usage: conda [-h] [-V] command ... conda is a tool for managing and deploying applications, environments and packages. Options: positional arguments: command clean Remove unused packages and caches. compare Compare packages between conda environments. config Modify configuration values in .condarc. This is modeled after the git config command. Writes to the user .condarc file (/home/vardaan/.condarc) by default. create Create a new conda environment from a list of specified packages. info Display information about current conda install. init Initialize conda for shell interaction. [Experimental] install Installs a list of packages into a specified conda environment. list List linked packages in a conda environment. package Low-level conda package utility. (EXPERIMENTAL) remove Remove a list of packages from a specified conda environment. uninstall Alias for conda remove. run Run an executable in a conda environment. search Search for packages and display associated information. The input is a MatchSpec, a query language for conda packages. See examples below. update Updates conda packages to the latest compatible version. upgrade Alias for conda update. optional arguments: -h, --help Show this help message and exit. -V, --version Show the conda version number and exit. conda commands available from other packages: build content-trust convert debug develop env index inspect metapackage pack render repo server skeleton token verify # packages in environment at /home/vardaan/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . echo &quot;Let&#39;s check if you have correctly formatted the names for your posts.&quot; cd ~ cd ./vscode/FastPages/_posts ls -l | grep 2022 # The ls -l command lists all files in a long list format. Grep is a feature used to filter files based on certain parts of the names of the file. It can also be used to find certain phrases, words, or characters INSIDE of a file. echo &quot;If all of your posts are showing up in the output, this means that you have properly formatted your post names with the year in the beginning.&quot; . Let&#39;s check if you have correctly formatted the names for your posts. -rw-r--r-- 1 vardaan vardaan 498 Aug 19 19:35 2022-08-19-minor-markdown-post.md -rw-r--r-- 1 vardaan vardaan 759 Aug 28 17:20 2022-08-22-work-post.md -rw-r--r-- 1 vardaan vardaan 760 Aug 28 17:43 2022-08-28-pictures.md If all of your posts are showing up in the output, this means that you have properly formatted your post names with the year in the beginning. . echo &quot;Let&#39;s show you how to use Bash to give you the contents of a specific file.&quot; cd ~ cd ./vscode/FastPages echo &quot;Let&#39;s show the contents of my index.html file.&quot; echo &quot;&quot; cat index.html echo &quot;&quot; echo &quot;Bottom of index.html file.&quot; . Let&#39;s show you how to use Bash to give you the contents of a specific file. Let&#39;s show the contents of my index.html file. layout: home search_exclude: true image: images/logo.png Welcome to Vardaan&#39;s FastPages site! To learn more about me, go to the About Me page, and feel free to check out some of my posts below! ![]({{site.baseurl}}/images/mac-jones.png &#34;https://github.com/fastai/fastpages&#34;) This is Mac Jones, my favorite football player on my favorite football team: The New England Patriots. # Posts Bottom of index.html file. . jupyter --version | grep 8.4.0 python --version | grep 3.9.12 bash --version | grep 5.0.17 # Each command above is grepping for the updated version of each of the key tools that we must have installed: jupyter notebooks, python, and bash. The grep command is grepping for the latest version. # If there is no output for any of the tools, please update your software. . IPython : 8.4.0 Python 3.9.12 GNU bash, version 5.0.17(1)-release (x86_64-pc-linux-gnu) . As shown above, the &quot;conda list&quot; command can be used to verify all the installed tools. . As shown in the above shell, the --version parameter along with the grep feature can be used to confirm that each kernel is updated to the latest version. . To automate a procedure from installation or update a repository, the following commands can be used: . git stage changes (staging changes to any files in your repository) | git commit (committing the staged changes) | git push or sync changes (this syncs the changes to your repository and updates your GitHub Pages site.) |",
            "url": "https://vardaansinha.github.io/FastPages/jupyter/bash/2022/08/28/bash.html",
            "relUrl": "/jupyter/bash/2022/08/28/bash.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post74": {
            "title": "Sadness",
            "content": ". . My table members and I have just received startling news; the APEL AP Exam and the AP Physics AP Exam are on the same day. . Why would College Board do such a thing? . Here’s why: . They enjoy making kids suffer. | They make learning about grades instead of actual learning. | They don’t care about the mental health of high schoolers. | . This is saddening news. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/personal/2022/08/28/ap-exam-depression.html",
            "relUrl": "/markdown/personal/2022/08/28/ap-exam-depression.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post75": {
            "title": "Physics Lab Report",
            "content": "Vardaan Sinha . Mr. Liao . AP Physics . 18 August 2022 . Lab #1: Measurements &amp; Graphical Analysis . Purpose Statement: The purpose of the lab is to find the relationship between the mass and radius of the disks and to calculate the uncertainty of the measured values through graphical analysis methods, such as linearization, where the graph shows a directly proportional relationship between the independent and dependent variables. . Derived Equation: . p = m/v → m = vp . | V = ah . | m = ( pi r^{2})hp . This equation shows that the mass of the disk is equal to the surface area of the disk (in other words, the area of a circle) multiplied by the height of the disk by the density of the disk. . | | Experiment Outline: . Measure the mass of the disk using the balance. Before using the balance, it must be zeroed, and then the disk can be placed on the balance. . | Measure the radius of the disk using the meter stick. The radius is measured by placing one end of the meter stick in the center of the circle, and the other end on the outside edge of the circle. . | Repeat Steps 1 &amp; 2 for each disk. . | Measure the thickness of one of the disks by folding the disk and measuring the height. Since the disk is folded to make it easier to find the height, divide the measurement appropriately to find the height if the disk was not folded. . | Graph the proportional mass vs radius2 relationship and determine the equation for the best-fit line. . | Precision: . The meter stick’s precision our group used was 1 millimeter (0.1 centimeters), since the meter stick used to measure the radius of the disks had markings down to the tenth of a centimeter. The measured radii of the disks in the data table is noted to the nearest hundredth of a centimeter, because of the 2/5/8 rounding rule, which added an extra digit of precision to the measurement. . | Data Table: . Radius2 (cm2) vs. Mass (grams) &amp; Radius (cm) . Radius (centimeters) Mass (grams)   Radius2 (centimeters2) . 5.32 cm | 0.37 g |   | 28.3024 cm2 | . 6.92 cm | 0.71 g |   | 47.8864 cm2 | . 4.12 cm | 0.25 g |   | 16.9744 cm2 | . 3.08 cm | 0.13 g |   | 9.4864 cm2 | . 2.28 cm | 0.08 g |   | 5.1984 cm2 | . . This is a nonlinear regression. . Equation: y = 0.0199151x2 - 0.0499334x + 0.095349 . . This is a linear regression. . Line of Best Fit Equation: y = 0.0146174x - 0.00729059 . Analysis Questions: . From the line of best fit, the independent variable represents the radius2 (centimeters2). This is because there is a linear relationship between the measured mass of each disk in grams and the corresponding squared radius values (in centimeters2) for each disk. . | The slope of the line of best fit has units of grams/cm2. In the original equation given in the lab, mass is equal to density multiplied by the disk’s surface area multiplied by the height of the disk. The surface area of the disk can be calculated through the formula for the area of the circle, or pi multiplied by the radius squared. Since the density, pi, and height values are all constant, they make up the coefficient for the slope of the line of best fit equation. Density is measured in grams/centimeter3, pi is a numerical constant, and height is measured in centimeters, and multiplying these values together gives units of grams/centimeter2. To verify that these are the correct units, the remaining part of the original equation is radius2, which has units of centimeters2, and multiplying the slope units (grams/centimeter2) by centimeters2 would produce a value in grams, which is the unit of measurement for m (mass). Since the y-value of the line of best fit equation has units of grams, the y-intercept (-0.00729059) must also be with units of grams, in order to produce the same unit on both sides of the equation: . In this case, g represents grams, and cm represents centimeters. . y = mx + b . | g = (g/cm2 * cm2) + g . | g = g + g . | g = g (verification) . | | | Yes, in ideal conditions, the “b” in the y = mx + b formula should be zero, as a disk with a radius of 0 centimeters would have a mass of 0 grams. . | Best-Fit Line Slope: 0.0146174 . The “thickness” of the cylinders is approximately 0.00125 centimeters. . | Density * ( pi) * Height = Slope . | Density * ( pi) * 0.00125 cm = 0.0146174 . | Density * 0.003925 cm = 0.0146174 . | Density = 3.72417834 ( approx) 3.72 g/cm3 . | The actual density of aluminum is 2.7 g/cm3. . | Percent Error: (3.72 g/cm3 - 2.7 g/cm3)/(2.7 g/cm3) x 100% = 37.778% ( approx) 38% . | | Our calculated density for the aluminum foil disk (3.72 g/cm3) was slightly larger than the actual calculated density of aluminum (2.7 g/cm3), as shown by our positive 38% error. Our number was likely larger than the actual value because of the inability to accurately measure the height of each disk, leading to an under measurement, creating a higher density value than expected. Furthermore, the measurement of the disk area may have been slightly inaccurate due to each disk not being perfectly circular. . | Synthesis Questions: . Disks with a greater thickness would correspond to an increase in the slope of the best-fit line. A greater thickness with an unchanged radius would result in a greater volume of the disk, leading to an increase in the slope of the line. The experimental density would stay the same, since the increased thickness would be reflected in the increased slope of the line. The slope is equal to the density multiplied by pi (constant) by the thickness of the disk, and with the increased thickness already accounted for in the increased slope, the density would remain the same as before. Disks with a greater thickness would have allowed for a more accurate measurement of the height, creating a more accurate density measurement. . | In this modified graph, the purple line (also circled) represents a scenario in which steel disks with the same thickness were used in the experiment. The slope for the line representing the steel disks is steeper than the line for the aluminum foil disks, since the density of steel (7.85 g/cm3) is much greater than that of aluminum (2.7 g/cm3), and the slope is directly proportional to the density. The purple line in the above graph has a slope of approximately 2.9 times greater than the best fit line showing the relationship between mass and radius2, as the density of steel is 2.9 times greater than that of aluminum. . | Work: . Slope: 122 kg/m2 . | Thickness: 0.5 cm . | Density * ( pi) * Thickness = Slope . | Density * ( pi) * 0.5 cm = 122 kg/m2 . | Density * 1.57 cm = 122 kg/m2 . | 122 kg/m2 x (1.0 m2/10,000 cm2) x (1000 g/1.0 kg) = 12.2 g/cm2 . | Density * 1.57 cm = 12.2 g/cm2 . | Density = 7.77 g/cm3 . | This is closest to the density of iron, which is 7.8 g/cm3. Therefore, the unknown material that these disks are made of is iron. . | | Multiple Choice Questions: . Mass = Density * Volume . Density * Area * Height = Mass . | Density * ( pi)r2 * Height = Mass . | C = 2( pi)r . | C2 = 2( pi)r2 . | C2/(2( pi)) = r2 . | Density * ( pi)(C2/(2( pi))2) * Height = Mass . | Mass = (Density * Height * 1/4( pi)) * C2 . | Slope = (Density * Height)/(4( pi)) . | Therefore, E is the correct option. . | | SKIP . | Volume of a Sphere = 4/3( pi)r3 (r = radius) . Mass = Density * Volume . | Mass = Density * 4/3( pi)r3 . | Mass = (Density * 4/3( pi)) x r3 . | Since density and 4/3( pi) are constants, the mass would need to be plotted versus the radius3, so the correct option is C. . | |",
            "url": "https://vardaansinha.github.io/FastPages/2022/08/28/Physics-Lab-Report.html",
            "relUrl": "/2022/08/28/Physics-Lab-Report.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post76": {
            "title": "Jupyter Notebook Experimentation",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Python Skills . I am very excited to learn python, and I would like to show Python&#39;s print capability: . I, Vardaan Sinha, am putting my Python skills to the test. .",
            "url": "https://vardaansinha.github.io/FastPages/jupyter/2022/08/19/vardaan.html",
            "relUrl": "/jupyter/2022/08/19/vardaan.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post77": {
            "title": "Vardaan's Computer Science Goals",
            "content": ". . My Goals for CSP This Year: . Hello! My name is Vardaan, and I have many goals for CSP this year. I hope to gain a better understanding of Python, and I also hope to get more used to using VSCode for all my projects. . I am extremely excited for this class, as I love to work with my team and I love to work with technology. .",
            "url": "https://vardaansinha.github.io/FastPages/markdown/2022/08/19/minor-markdown-post.html",
            "relUrl": "/markdown/2022/08/19/minor-markdown-post.html",
            "date": " • Aug 19, 2022"
        }
        
    
  

  
  
      ,"page0": {
          "title": "About Me",
          "content": "Hi! I’m Vardaan Sinha, and I’m a high school junior who loves math, computer science, cyber-security, writing, and solving 21st century problems. .",
          "url": "https://vardaansinha.github.io/FastPages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page1": {
          "title": "Computer Science Notes",
          "content": "Key Terms: . GitHub-Related Terms: . Repository: The location (for us, on Github) where we modify our fastpages site and collect all of our work for a particular project. . | Clone: “Cloning” a repository means to copy a repository onto your local system for modification. . | Commit: This means to save and commit changes in order for the changes to update on your site. . | VSCode Terms: . Source Control: This is the tab in VSCode where you stage, commit, and sync changes. . | Debug Console: This is where you can debug and work around any issues in your VSCode files. . | Application of these Terms: . Cloning a Repository through WSL: . (base) vardaan@LAPTOP-6CPSDHS5:~$ cd ./vscode # Changing the directory to your VSCode directory, which contains all of your cloned repositories. (base) vardaan@LAPTOP-6CPSDHS5:~/vscode$ git clone &quot;https://github.com/SamitPoojary/FASTPAGES.git&quot; # Cloning my partner Samit&#39;s FastPages so that I can track his changes. Cloning into &#39;FASTPAGES&#39;... remote: Enumerating objects: 722, done. remote: Counting objects: 100% (613/613), done. remote: Compressing objects: 100% (329/329), done. remote: Total 722 (delta 260), reused 479 (delta 191), pack-reused 109 Receiving objects: 100% (722/722), 9.46 MiB | 1.33 MiB/s, done. Resolving deltas: 100% (260/260), done. . Checking Status &amp; Making Commits through WSL: . (base) vardaan@LAPTOP-6CPSDHS5:~/vscode$ dir APCSP FASTPAGES FastPages fastpages # Showing the files that are in the &#39;vscode&#39; directory. (base) vardaan@LAPTOP-6CPSDHS5:~/vscode$ cd ./FastPages (base) vardaan@LAPTOP-6CPSDHS5:~/vscode/FastPages$ git status On branch master Your branch is up to date with &#39;origin/master&#39;. Changes not staged for commit: (use &quot;git add &lt;file&gt;...&quot; to update what will be committed) (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory) modified: .vscode/settings.json modified: _pages/01_about.md modified: _pages/02_notes.md no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;) # This command shows the status of the repository (any modified files or changes that have not been committed). (base) vardaan@LAPTOP-6CPSDHS5:~/vscode/FastPages$ git commit -a [master 746b938] committing large changes for bash committing large changes for bash 3 files changed, 21 insertions(+), 9 deletions(-) # This commits all the changes, and you can use VSCode to sync the changes. . Key Terms Continued (Trimester Cumulative) . Collaboration: One of the keys when working with a team on code. It is the art of communication that is essential to making functional code. . | Flask: Web Application Framework that is important to develop web applications. . | Jinja2: The Web Template Language that is compatible with Flask and Python. . | Bootstrap: An HTML/CSS template engine that helps to create more aesthetically appealing sites. . | Pseudo Code: This is essentially another term used to describe the comments that are made to describe each line or functionality of code. . | JavaScript: Another programming language that is essential, especially for frontend developers. . | Procedural Abstraction: The practice of promoting reuse instead of continuously coding the same thing again and again. . | Agile Methodology: The use of pair programming, test-driven development, stand-ups, planning sessions, and sprints. This also includes well defined team roles. . | AWS: Amazon Web Services is a tool that allows for the deployment of our projects. It is a large part of the backend of our project. . | Nginx: An open source software used for web serving, reverse proxy, caching, load balancing, media streaming, etc. . | Certbot: This is another open source software tool that allows for encrypted certifications for hosted sites. . | DNS: DNS, or Domain Name Services, allows for the assignment of a friendly name to a web server. . | API: Application Programming Interface, it is a way for multiple programs to communicate/call each other. . | API URL: The endpoint to which the API is directed. . | API Headers: The dictionary data structure used to send special messaging to the endpoint. . | Document Object Model: The Document Object Model, or DOM, is the interaction between HTML and JavaScript. . | HTTP/HTTPS: HTTP, or Hyper Text Transfer Protocol, is in charge of the communication between a web server and web browser. HTTPS, on the other hand, is in charge for more secure communication between a web server and a web browser. . | TCP/IP: Transmission Control Protocol, Internet Protocol. These messages are divided into small packets and sent between computers on the Internet. . | Network Layer: The wireless and physical layers that move bits across the Internet. . | Unit 2 Vocabulary: . Bits: A bit is a binary digit. It is the smallest size of data. . | Bytes: Bytes are groups of bits. . | Hexadecimal: Hex is base 16, and is used to show large values with a fewer amount of digits. . | Unsigned Integer: These are integers that don’t have any associated + or -. . | Signed Integer: These are integers with some sort of directionality (+ or -). . | Floating Point: These are decimals. . | Boolean: Boolean is a binary variable; can either be true or false. . | ASCII: This is a format of character encoding for text on the Internet. . | Unicode: A character encoding standard that assigns a unique number for each character in almost every language. . | RGB: This is used to represent colors on a system display. . | Lossy and lossless have not been discussed yet. . | Unit 3 Vocabulary: . Variables: Any sort of quantity which can be defined or measured. . | Data Types: These are types of data values. . | Assignment Operators: These are operators which assign values to variables. . | Lists: These are data types that have a number of ordered values. . | 2D Lists: This is a 2D data structure which can represent a matrix. . | Dictionaries: These are a method to store data values through a method known as keys and pairs. . | Class: A class contains all the details about a collection of variables and functions. . | Algorithms: Algorithms are processes which can help to solve certain problems through programming. . | Sequence: A sequence is an ordered set. . | Selection: This selects a certain part of a program to execute based on conditional statements. . | Iteration: This is where the same group of code is repeatedly executed. . | Expressions: These are a combination of operators and data values. . | Comparison Operators: This compares the two values and then tells the user whether the condition is met or not. . | Booleans Expressions and Selection/Iteration: These are a selection of code that allows for expressions to be iterated through or selected to see if a conditional is true/false (boolean). . | Truth Tables: This is a table to determine if a compound statement is true or false. . | Characters: These are singular keys that go into code. . | Strings: These are arrays of characters. . | Length: This is a function that counts the length of a string. . | Concatenation: Concatenation is the combination of two strings. . | Upper: This makes the string uppercase. . | Lower: This makes the string lowercase. . | Traversing Strings: These are strings that are processed one character at a time. . | If Statement: If a certain conditional is met, then the program will execute some block of code. . | Elif Statement: This checks if the above statement is true. . | Else Conditionals: Again, checks if something is true or not. . | Nested Selection Statements: This is where there is one selection within another. Multiple conditions can be tested here. . | For Loops: These are loops to iterate over a sequence. . | While Loops: While a certain conditional is true, a certain block of code is going to continue running. . | List Combining Loops: These are loops that can combine lists. . | Procedural Abstraction: This is when code sections can be generalized by creating parameters. This is useful, as code blocks can be utilized in multiple different program situations. . | Python def procedures: These are user-defined procedures. . | Parameters: These are placeholders for variables that a function utilizes. . | Return Values: These are the values that a function returns to the caller. . |",
          "url": "https://vardaansinha.github.io/FastPages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "JavaScript!",
          "content": "| HTML + JavaScript Table | Roster Cut JavaScript Algorithm | .",
          "url": "https://vardaansinha.github.io/FastPages/javascript/overview",
          "relUrl": "/javascript/overview",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Theme Changer",
          "content": "Theme Changer . You guys can copy this file and change/improve it here is the link . . Toggle Theme &lt;/html&gt; .",
          "url": "https://vardaansinha.github.io/FastPages/_pages/05_themechanger.html",
          "relUrl": "/_pages/05_themechanger.html",
          "date": ""
      }
      
  

  
      ,"page5": {
          "title": "Number Guesser v3",
          "content": "Guess the Number . Guess the Number . Try to guess the number between 1 and 100. . Submit . .",
          "url": "https://vardaansinha.github.io/FastPages/_pages/06_numberguessersass.html",
          "relUrl": "/_pages/06_numberguessersass.html",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  
  

  
  

  
  

  

  

  

  

  

  
  

  
      ,"page20": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://vardaansinha.github.io/FastPages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}